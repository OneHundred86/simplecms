{"version":3,"sources":["theme/index.ts","services/loading-state-service.ts","utils/request.ts","services/article-data-service.ts","services/article-type-data-service.ts","services/file-upload-service.ts","services/action-service.ts","services/login-service.tsx","services/portal-message-service.ts","components/portal/index.tsx","layout/app-bar.tsx","layout/menu.tsx","layout/auth-layout.tsx","components/table/quick-filter-toolbar.tsx","components/dialog/confirm-delete-dialog.tsx","pages/products/index.tsx","components/form/upload-adaptor-plugin.ts","pages/products/components/edit-form.tsx","components/form/action-menu.tsx","pages/products/detail/index.tsx","pages/applications/index.tsx","pages/applications/components/edit-form.tsx","pages/applications/detail/index.tsx","pages/news/index.tsx","pages/news/components/edit-form.tsx","pages/news/detail/index.tsx","pages/others/index.tsx","pages/others/components/edit-form.tsx","pages/others/detail/index.tsx","pages/settings/components/filter-toolbar.tsx","pages/settings/components/category-detail-dialog.tsx","pages/settings/index.tsx","layout/public-layout.tsx","pages/login/index.tsx","route/index.tsx","App.tsx","index.tsx"],"names":["theme","createTheme","palette","primary","main","secondary","error","red","A400","loadingSubject","BehaviorSubject","loading","this","next","asObservable","axiosInstance","axios","create","timeout","headers","withCredentials","request","url","method","config","of","pipe","tap","LoadingStateService","setLoading","mergeMap","Object","assign","map","resp","data","catchError","throwError","finalize","postFormData","post","getList","params","getDetail","id","creat","edit","delete","publish","withdraw","category","postImage","form","postVideo","actionSubject","save","handleAction","action","filter","x","signIn","email","password","code","signOut","getVerificationCode","_portalMessageSubject","message","type","body","Portal","children","channel","useEffect","PortalMessageService","CHANNEL_APP_BAR_TITLE","StyleAppBar","styled","MuiAppBar","shouldForwardProp","prop","open","zIndex","drawer","transition","transitions","easing","sharp","duration","leavingScreen","marginLeft","width","enteringScreen","AppBar","toggleDrawer","useState","title","setTitle","titleSubscription","onMessage","subscribe","newTitle","unsubscribe","position","Toolbar","sx","pr","IconButton","edge","color","onClick","marginRight","display","Typography","component","variant","noWrap","flexGrow","openedMixin","overflowX","DrawerHeader","alignItems","justifyContent","padding","spacing","mixins","toolbar","Drawer","MuiDrawer","flexShrink","whiteSpace","boxSizing","breakpoints","up","closedMixin","AppMenu","Divider","List","ListSubheader","inset","ListItem","Link","href","ListItemIcon","ListItemText","AuthLayout","openDrawer","setOpenDrawer","Box","height","overflow","flexDirection","Container","maxWidth","maxSnack","anchorOrigin","vertical","horizontal","TransitionComponent","Slide","Paper","mt","mb","InlineSearchBox","flexWrap","down","borderBottom","divider","filterSubject","Subject","QuickFilterToolbar","props","inputRef","useRef","filterSubscription","debounceTime","value","setFilter","kw","offset","TextField","defaultValue","onChange","e","target","placeholder","InputProps","startAdornment","fontSize","endAdornment","size","style","visibility","current","ConfirmDeleteDialog","onClose","onConfirm","Dialog","DialogTitle","DialogContent","dividers","DialogContentText","DialogActions","Button","autoFocus","Products","limit","dataSource","setDataSource","totalSize","setTotalSize","deleteDialog","setDeleteDialog","history","useHistory","snackBar","useSnackbar","ArticleDataService","errcode","list","total","console","enqueueSnackbar","err","cols","field","headerName","sortable","renderCell","row","item","p","autoHeight","disableColumnMenu","disableColumnFilter","pagination","pageSize","page","rowCount","rowsPerPageOptions","onPageChange","pageNumber","onPageSizeChange","components","componentsProps","columns","rows","Fab","bottom","right","push","MyUploadAdapter","loader","_uploadTask","upload","formData","FormData","file","then","append","lastValueFrom","FileUploadService","default","catch","abort","UploadAdaptorPlugin","editor","plugins","get","createUploadAdapter","EditForm","detail","formDetail","setFormDetail","categoryList","setCategoryList","selectedRootCategory","setSelectedRootCategory","ArticleTypeDataService","type_id","find","saveAction","ActionService","switchMap","content","summary","covers","img","updateInputValue","key","state","Grid","container","xs","select","minWidth","mr","label","targetCategory","parent_id","MenuItem","name","fullWidth","htmlFor","accept","files","length","Math","ceil","random","article_id","ImageList","minHeight","rowHeight","ImageListItem","src","srcSet","alt","extraPlugins","ClassicEditor","event","rawContent","getData","log","ActionMenu","status","isCreate","anchorEl","setAnchorEl","closeMenu","handleSave","undefined","disableElevation","currentTarget","endIcon","transformOrigin","MenuListProps","PaperProps","ProductDetail","read_cnt","created_at","updated_at","setDetail","useRouteMatch","actionSubscription","parseInt","info","pl","goBack","Applications","ApplicationDetail","News","NewsDetail","Others","SelectProps","readOnly","OtherDetail","FilterToolbar","handleKWChange","m","entries","CategoryDetailDialog","typeList","onSave","typeDetail","required","margin","Settings","detailDialog","setDetailDialog","typeListSubscription","closeDetailDialog","saveItem","createItem","newForm","result","includes","step","i","filterData","PublicLayout","marginTop","Login","Date","valueOf","codeState","setCodeState","loginForm","setLoginForm","updatedFormValue","codeUrl","useMemo","Avatar","bgcolor","onSubmit","LoginService","noValidate","autoComplete","RouterConfig","path","exact","App","ThemeProvider","CssBaseline","ReactDOM","render","StrictMode","document","getElementById","token","querySelector","defaults","common","loadCSRFToken"],"mappings":"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","file":"static/js/main.7755e06d.chunk.js","sourcesContent":["import {red} from '@mui/material/colors';\nimport {createTheme} from '@mui/material/styles';\n\n// A custom theme for this app\nconst theme = createTheme({\n    palette: {\n        primary: {\n            main: '#556cd6',\n        },\n        secondary: {\n            main: '#19857b',\n        },\n        error: {\n            main: red.A400,\n        },\n    },\n});\n\nexport default theme;","import { BehaviorSubject, Observable } from 'rxjs'\n\nclass LoadingStateService {\n    loadingSubject = new BehaviorSubject(false)\n\n    setLoading(loading: boolean) {\n        this.loadingSubject.next(loading)\n    }\n\n    subscribe(): Observable<boolean> {\n        return this.loadingSubject.asObservable()\n    }\n}\n\nexport default new LoadingStateService()","import { catchError, mergeMap, of, throwError, tap, finalize, map } from \"rxjs\";\nimport axios, { AxiosRequestConfig, Method } from \"axios\";\nimport { LoadingStateService } from \"../services\";\n\nconst defaultRequestConfig = {\n  \"Content-Type\": \"application/json; charset=utf-8\",\n  \"X-Requested-With\": \"XMLHttpRequest\"\n};\n\n\nconst axiosInstance = axios.create({\n  timeout: 6000,\n  headers: defaultRequestConfig,\n  withCredentials: true\n});\n\nexport function loadCSRFToken(token) {\n  axiosInstance.defaults.headers.common[\"X-CSRF-TOKEN\"] = token;\n}\n\nexport const request = <T>(url: string, method: Method, config: AxiosRequestConfig = {}) => {\n  return of({}).pipe(\n    tap(() => LoadingStateService.setLoading(true)),\n    mergeMap(() =>\n      axiosInstance.request<T>(\n        Object.assign({}, config, {\n          url,\n          method\n        })\n      )\n    ),\n    map(resp => resp.data),\n    catchError((error) => {\n      return throwError(error);\n    }),\n    finalize(() => LoadingStateService.setLoading(false))\n  );\n};\n\nexport const postFormData = <T>(url: string, data: FormData, config: AxiosRequestConfig = {\n  headers: {\n    \"Content-Type\": \"multipart/form-data\"\n  }\n}) => {\n  return of({}).pipe(\n    tap(() => LoadingStateService.setLoading(true)),\n    mergeMap(() => axios.post<FormData, T>(url, data, config)),\n    map(resp => resp),\n    catchError((error) => {\n      return throwError(error);\n    }),\n    finalize(() => LoadingStateService.setLoading(false))\n  );\n};\n","import { request } from '../utils';\nimport {\n    ArticleCreateRequest,\n    ArticleDetailResponse,\n    ArticleEditRequest, ArticleFilter,\n    ArticleListResponse,\n} from '../models';\n\nclass ArticleDataService {\n    getList = (params: ArticleFilter) => {\n        return request<ArticleListResponse>('/admin/article/list', 'GET', {\n            params\n        });\n    };\n\n    getDetail = (id: number) => {\n        return request<ArticleDetailResponse>('/admin/article/info', 'GET', {\n            params: {\n                id,\n            },\n        });\n    };\n\n    creat = (data: ArticleCreateRequest) => {\n        return request<void>('/admin/article/add', 'POST', {\n            data,\n        });\n    };\n    edit = (data: ArticleEditRequest) => {\n        return request<void>('/admin/article/edit', 'POST', {\n            data,\n        });\n    };\n\n    delete = (id: number) => {\n        return request<void>('/admin/article/del', 'POST', {\n            data: {\n                id,\n            },\n        });\n    };\n\n    publish = (id: number) => {\n        return request<void>('/admin/article/publish', 'POST', {\n            params: {\n                id,\n            },\n        });\n    };\n    withdraw = (id: number) => {\n        return request<void>('/admin/article/withdraw', 'POST', {\n            params: {\n                id,\n            },\n        });\n    };\n}\n\nexport default new ArticleDataService();","import { request } from '../utils';\nimport { ArticleTypeCreateRequest, ArticleTypeEditRequest, ArticleTypeListResponse } from '../models';\n\nclass ArticleTypeDataService {\n    getList = (category: number) => {\n        return request<ArticleTypeListResponse>('/admin/article/type/list', 'GET', {\n            params: {\n                category,\n            },\n        });\n    };\n\n    creat = (data: ArticleTypeCreateRequest) => {\n        return request<void>('/admin/article/type/add', 'POST', {\n            data,\n        });\n    };\n    edit = (data: ArticleTypeEditRequest) => {\n        return request<void>('/admin/article/type/edit', 'POST', {\n            data,\n        });\n    };\n\n    delete = (id: number) => {\n        return request<void>('/admin/article/type/del', 'POST', {\n            data: {\n                id,\n            },\n        });\n    };\n}\n\nexport default new ArticleTypeDataService();","import { postFormData } from '../utils';\nimport { FileUploadResponse } from '../models';\nimport { Observable } from 'rxjs';\n\nclass FileUploadService {\n    postImage: (form: FormData) => Observable<FileUploadResponse> = (form) => {\n        return postFormData<FileUploadResponse>(`/admin/upload/image`, form);\n    }\n\n    postVideo = (form) => {\n        return postFormData<FileUploadResponse>(`/admin/upload/video`, form);\n    }\n}\n\nexport default new FileUploadService();","import { BehaviorSubject, filter, Observable } from 'rxjs';\n\nclass ActionService {\n    private actionSubject = new BehaviorSubject<string>(null);\n\n    save = (): void => {\n        this.actionSubject.next('save');\n    };\n\n    publish = (): void => {\n        this.actionSubject.next('publish');\n    };\n    withdraw = (): void => {\n        this.actionSubject.next('withdraw');\n    };\n\n    handleAction = (action: string): Observable<string> => {\n        return this.actionSubject.pipe(filter(x => x === action));\n    };\n}\n\nexport default new ActionService();","import { request } from '../utils';\n\n// @ts-ignore\nclass LoginService {\n    signIn = ({ email, password, code }) => {\n        return request<void>('/admin/login', 'POST', {\n            data: {\n                email,\n                password,\n                code,\n            },\n        });\n    };\n    signOut = () => {\n        return request<void>('/admin/sign', 'GET');\n    };\n    getVerificationCode = () => {\n        return request<void>('/verify/code', 'GET');\n    }\n}\n\nexport default new LoginService();","import { BehaviorSubject, filter, map, Observable } from 'rxjs';\nimport { ReactElement, ReactNode } from 'react';\n\nclass PortalMessageService {\n    private _portalMessageSubject = new BehaviorSubject<{ type: string, body: ReactElement | ReactNode }>(null);\n\n    publish(message: { type: string, body: ReactElement | ReactNode }): void {\n        this._portalMessageSubject.next(message);\n    }\n\n    onMessage(type): Observable<ReactElement | ReactNode> {\n        return this._portalMessageSubject.pipe(filter(x => x?.type === type), map(x => x.body));\n    }\n}\n\nexport default new PortalMessageService();","import React, { useEffect } from 'react';\nimport { PortalMessageService } from '../../services';\n\nexport const Portal: React.FC<{ channel: string }> = ({ children, channel }) => {\n    useEffect(() => {\n        PortalMessageService.publish({\n            type: channel,\n            body: children,\n        });\n    }, [children, channel]);\n\n    return null;\n};\n\nexport const CHANNEL_APP_BAR_TITLE = 'appBarTitle';\n","import React, { useEffect, useState } from 'react';\nimport { IconButton, styled, Toolbar, Typography } from '@mui/material';\nimport MuiAppBar, { AppBarProps as MuiAppBarProps } from '@mui/material/AppBar';\nimport MenuIcon from '@mui/icons-material/Menu';\nimport { PortalMessageService } from '../services';\nimport { CHANNEL_APP_BAR_TITLE } from '../components/portal';\n\ninterface AppBarProps extends MuiAppBarProps {\n    open?: boolean;\n}\n\nconst StyleAppBar = styled(MuiAppBar, {\n    shouldForwardProp: (prop) => prop !== 'open',\n})<AppBarProps>(({ theme, open }) => ({\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create(['width', 'margin'], {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen,\n    }),\n    ...(open && {\n        marginLeft: 240,\n        width: `calc(100% - 240px)`,\n        transition: theme.transitions.create(['width', 'margin'], {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.enteringScreen,\n        }),\n    }),\n}));\n\nexport const AppBar: React.FC<{ open; toggleDrawer; }> = ({\n                                                              open,\n                                                              toggleDrawer,\n                                                          }) => {\n    const [title, setTitle] = useState(null);\n\n    useEffect(() => {\n        const titleSubscription = PortalMessageService.onMessage(CHANNEL_APP_BAR_TITLE).subscribe((newTitle) => {\n            setTitle(newTitle);\n        });\n\n        return () => {\n            titleSubscription.unsubscribe();\n        }\n    }, [])\n\n    return (\n        <StyleAppBar position='absolute' open={open}>\n            <Toolbar\n                sx={{\n                    pr: '24px', // keep right padding when drawer closed\n                }}>\n                <IconButton\n                    edge='start'\n                    color='inherit'\n                    aria-label='open drawer'\n                    onClick={toggleDrawer}\n                    sx={{\n                        marginRight: '36px',\n                        ...(open && { display: 'none' }),\n                    }}>\n                    <MenuIcon />\n                </IconButton>\n                <Typography component='h1' variant='h6' color='inherit' noWrap\n                            sx={{ flexGrow: 1 }}>\n                    {title}\n                </Typography>\n            </Toolbar>\n        </StyleAppBar>\n    );\n};\n","import React from 'react';\nimport {\n    Divider,\n    IconButton, Link,\n    List, ListItem, ListItemIcon,\n    ListItemText,\n    ListSubheader,\n    styled,\n} from '@mui/material';\nimport MuiDrawer from '@mui/material/Drawer';\nimport ChevronLeftIcon from '@mui/icons-material/ChevronLeft';\nimport AssignmentIcon from '@mui/icons-material/Assignment';\nimport TouchAppIcon from '@mui/icons-material/TouchApp';\nimport WebIcon from '@mui/icons-material/Web';\nimport ListAltIcon from '@mui/icons-material/ListAlt';\nimport SettingsIcon from '@mui/icons-material/Settings';\n\nconst drawerWidth = 240;\n\nconst openedMixin = (theme) => ({\n    width: drawerWidth,\n    transition: theme.transitions.create('width', {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.enteringScreen,\n    }),\n    overflowX: 'hidden',\n});\n\nconst closedMixin = (theme) => ({\n    transition: theme.transitions.create('width', {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen,\n    }),\n    overflowX: 'hidden',\n    width: `calc(${theme.spacing(7)} + 1px)`,\n    [theme.breakpoints.up('sm')]: {\n        width: `calc(${theme.spacing(9)} + 1px)`,\n    },\n});\n\nexport const DrawerHeader = styled('div')(({ theme }) => ({\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    padding: theme.spacing(-1, 1),\n    // necessary for content to be below app bar\n    ...theme.mixins.toolbar,\n}));\n\nconst Drawer = styled(MuiDrawer)(\n    ({ theme, open }) => ({\n        width: drawerWidth,\n        flexShrink: 0,\n        whiteSpace: 'nowrap',\n        boxSizing: 'border-box',\n        ...(open && {\n            width: drawerWidth,\n            transition: theme.transitions.create('width', {\n                easing: theme.transitions.easing.sharp,\n                duration: theme.transitions.duration.enteringScreen,\n            }),\n            overflowX: 'hidden',\n            '& .MuiDrawer-paper': openedMixin(theme),\n        }),\n        ...(!open && {\n            transition: theme.transitions.create('width', {\n                easing: theme.transitions.easing.sharp,\n                duration: theme.transitions.duration.leavingScreen,\n            }),\n            overflowX: 'hidden',\n            width: `calc(${theme.spacing(7)} + 1px)`,\n            [theme.breakpoints.up('sm')]: {\n                width: `calc(${theme.spacing(9)} + 1px)`,\n            },\n            '& .MuiDrawer-paper': closedMixin(theme),\n        }),\n    }),\n);\n\nexport const AppMenu: React.FC<{ open; toggleDrawer }> = ({ open, toggleDrawer }) => {\n\n    return <Drawer variant=\"permanent\" open={open}>\n        <DrawerHeader>\n            <IconButton onClick={toggleDrawer}>\n                <ChevronLeftIcon />\n            </IconButton>\n        </DrawerHeader>\n        <Divider />\n        <List>\n            <div>\n                <ListSubheader inset>稿件管理</ListSubheader>\n                <ListItem component={Link} href={'/admin/products'}>\n                    <ListItemIcon>\n                        <WebIcon />\n                    </ListItemIcon>\n                    <ListItemText primary='产品中心' />\n                </ListItem>\n                <ListItem component={Link} href={'/admin/applications'}>\n                    <ListItemIcon>\n                        <TouchAppIcon />\n                    </ListItemIcon>\n                    <ListItemText primary='行业应用' />\n                </ListItem>\n                <ListItem component={Link} href={'/admin/news'}>\n                    <ListItemIcon>\n                        <ListAltIcon />\n                    </ListItemIcon>\n                    <ListItemText primary='新闻中心' />\n                </ListItem>\n                <ListItem component={Link} href={'/admin/news'}>\n                    <ListItemIcon>\n                        <AssignmentIcon />\n                    </ListItemIcon>\n                    <ListItemText primary='其他' />\n                </ListItem>\n            </div>\n        </List>\n        <Divider />\n        <List>\n            <div>\n                <ListItem component={Link} href={'/admin/settings'}>\n                    <ListItemIcon>\n                        <SettingsIcon />\n                    </ListItemIcon>\n                    <ListItemText primary='稿件类型管理' />\n                </ListItem>\n            </div>\n        </List>\n    </Drawer>;\n};","import React, { FC, Fragment, useState } from 'react';\nimport { Box, Container, Paper, Slide } from '@mui/material';\n\nimport { AppBar } from './app-bar';\nimport { AppMenu, DrawerHeader } from './menu';\nimport { SnackbarProvider } from 'notistack';\n\nexport const AuthLayout: FC = ({ children }) => {\n    const [openDrawer, setOpenDrawer] = useState(false);\n    const toggleDrawer = () => {\n        setOpenDrawer(!openDrawer);\n    };\n\n    return (\n        <Fragment>\n            <AppBar open={openDrawer} toggleDrawer={toggleDrawer} />\n            <AppMenu open={openDrawer} toggleDrawer={toggleDrawer} />\n            <Box\n                component='main'\n                sx={{\n                    flexGrow: 1,\n                    height: '100vh',\n                    overflow: 'auto',\n                    display: 'flex',\n                    flexDirection: 'column',\n                }}>\n                <DrawerHeader />\n                <Container maxWidth='lg'>\n                    <SnackbarProvider\n                        maxSnack={3}\n                        anchorOrigin={{\n                            vertical: 'top',\n                            horizontal: 'right',\n                        }}\n                        TransitionComponent={() => <Slide />}\n                    >\n                        <Paper sx={{ mt: 4, mb: 4, height: '100%' }}>\n                            {children}\n                        </Paper>\n                    </SnackbarProvider>\n                </Container>\n            </Box>\n        </Fragment>\n    );\n};\n","import React, { useEffect, useRef } from 'react';\nimport { IconButton, InputProps, styled, TextField } from '@mui/material';\nimport SearchIcon from '@mui/icons-material/Search';\nimport ClearIcon from '@mui/icons-material/Clear';\nimport { FilterModel } from '../../models';\nimport { debounceTime, Subject, tap } from 'rxjs';\n\nconst InlineSearchBox = styled('div')(({ theme }) => ({\n    padding: theme.spacing(0.5, 0.5, 0),\n    justifyContent: 'space-between',\n    display: 'flex',\n    alignItems: 'flex-start',\n    flexWrap: 'wrap',\n    '& MuiTextField-root': {\n        [theme.breakpoints.down('xs')]: {\n            width: '100%',\n        },\n        margin: theme.spacing(1, 0.5, 1.5),\n        '& .MuiSvgIcon-root': {\n            marginRight: theme.spacing(0.5),\n        },\n        '& .MuiInput-underline:before': {\n            borderBottom: `1px solid ${theme.palette.divider}`,\n        },\n    },\n}));\n\nconst filterSubject = new Subject();\n\nexport const QuickFilterToolbar: React.FC<QuickFilterToolbarProps> = (props) => {\n        const inputRef = useRef(null);\n        const clearFilter = () => {\n            inputRef.current.value = '';\n            filterSubject.next('');\n        }\n        const onChange = (e) => {\n            filterSubject.next(e?.target.value);\n        }\n\n        useEffect(() => {\n            const filterSubscription = filterSubject.pipe(debounceTime(1500), tap((value) => {\n                props.setFilter((filter) => ({ ...filter, kw: value, offset: 0 }));\n            })).subscribe();\n\n            return () => {\n                filterSubscription.unsubscribe();\n            };\n        }, [props]);\n\n        return (\n            <InlineSearchBox>\n                <TextField\n                    inputRef={inputRef}\n                    variant='standard'\n                    defaultValue={props.value}\n                    onChange={onChange}\n                    placeholder='关键字查找'\n                    InputProps={{\n                        startAdornment: <SearchIcon fontSize='small' />,\n                        endAdornment: (\n                            <IconButton\n                                title='Clear'\n                                aria-label='Clear'\n                                size='small'\n                                style={{ visibility: props.value ? 'visible' : 'hidden' }}\n                                onClick={clearFilter}\n                            >\n                                <ClearIcon fontSize='small' />\n                            </IconButton>\n                        ),\n                    }}\n                />\n            </InlineSearchBox>\n        );\n    }\n;\n\ninterface QuickFilterToolbarProps extends InputProps {\n    setFilter: (filterState) => Partial<FilterModel>,\n};","import React from 'react';\nimport { Button, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle } from '@mui/material';\n\nexport interface ConfirmDeleteDialogProps {\n    open: boolean,\n    message?: string,\n    onClose?: () => void,\n    onConfirm?: () => void,\n}\n\nexport const ConfirmDeleteDialog: React.FC<ConfirmDeleteDialogProps> = ({ open, message, onClose, onConfirm }) => {\n\n    return <Dialog\n        maxWidth='xs'\n        open={open}\n    >\n        <DialogTitle>确认删除</DialogTitle>\n        <DialogContent dividers>\n            {message && <DialogContentText>\n                确认删除?\n            </DialogContentText>}\n        </DialogContent>\n        <DialogActions>\n            <Button autoFocus onClick={onClose}>\n                取消\n            </Button>\n            <Button color='warning' onClick={onConfirm}>确认</Button>\n        </DialogActions>\n    </Dialog>;\n\n};","import React, { useEffect, useState } from 'react';\nimport { DataGrid, GridColDef, GridRenderCellParams, GridRowModel } from '@mui/x-data-grid';\n\nimport { ArticleDataService } from '../../services';\nimport { Article, ArticleFilter } from '../../models';\nimport { Box, Fab, IconButton, Link } from '@mui/material';\nimport { QuickFilterToolbar } from '../../components/table';\nimport AddIcon from '@mui/icons-material/Add';\nimport EditIcon from '@mui/icons-material/Edit';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport { useHistory } from 'react-router';\nimport { tap } from 'rxjs';\nimport { ConfirmDeleteDialog, ConfirmDeleteDialogProps } from '../../components/dialog/confirm-delete-dialog';\nimport { CHANNEL_APP_BAR_TITLE, Portal } from '../../components/portal';\nimport { useSnackbar } from 'notistack';\n\nexport const Products: React.FC = () => {\n    const [filter, setFilter] = useState<ArticleFilter>({ kw: '', limit: 20, offset: 0, category: 0 });\n    const [dataSource, setDataSource] = useState<Article[]>([]);\n    const [totalSize, setTotalSize] = useState<number>(1);\n    const [deleteDialog, setDeleteDialog] = useState<ConfirmDeleteDialogProps>({ open: false });\n\n    const history = useHistory();\n    const snackBar = useSnackbar();\n\n    useEffect(() => {\n        ArticleDataService.getList(filter).subscribe(({ errcode, data }) => {\n            if (errcode === 0) {\n                setDataSource(data.list);\n                setTotalSize(data.total);\n            } else {\n                console.error('fetch products error', errcode);\n                snackBar.enqueueSnackbar('获取产品列表失败', {\n                    variant: 'error',\n                });\n            }\n        }, (err) => {\n            console.error('fetch products error', err);\n            snackBar.enqueueSnackbar('获取产品列表失败', {\n                variant: 'error',\n            });\n        });\n    }, [filter, snackBar]);\n\n    function confirmDelete(item: GridRowModel) {\n        setDeleteDialog({\n            open: true, message: `确认删除产品信息: \"${item.title}\"?`,\n            onClose(): void {\n                setDeleteDialog({ open: false });\n            },\n            onConfirm: function(): void {\n                ArticleDataService.delete(item.id).pipe(\n                    tap(() => {\n                        setFilter({ ...filter });\n                        setDeleteDialog({ open: false });\n\n                        snackBar.enqueueSnackbar('删除产品成功', {\n                            variant: 'success',\n                        });\n                    }),\n                ).subscribe({\n                    error: (err) => {\n                        snackBar.enqueueSnackbar(' 删除产品失败', {\n                            variant: 'error',\n                        });\n                    },\n                });\n            },\n        });\n\n    }\n\n    const cols: GridColDef[] = [\n        {\n            field: 'id',\n            headerName: '稿件Id',\n            sortable: false,\n            renderCell: (params: GridRenderCellParams) => {\n                return (<Link href={`/admin/products/detail/${params.value}`} color='primary'\n                >{params.value}</Link>);\n            },\n        },\n        {\n            field: 'title',\n            headerName: '标题',\n            sortable: false,\n        },\n        {\n            field: 'type_id',\n            headerName: '类型',\n            sortable: false,\n        },\n        {\n            field: 'status',\n            headerName: '状态',\n            sortable: false,\n        },\n        {\n            field: 'read_cnt',\n            headerName: '阅读次数',\n            sortable: false,\n        },\n        {\n            field: 'created_time',\n            headerName: '创建时间',\n            sortable: false,\n        },\n        {\n            field: 'category',\n            headerName: '操作',\n            sortable: false,\n            renderCell: (params: GridRenderCellParams) => {\n                return (\n                    <>\n                        <IconButton component={Link} href={`/admin/products/detail/${params.row.id}`}>\n                            <EditIcon />\n                        </IconButton>\n                        <IconButton onClick={() => confirmDelete(params.row)}>\n                            <DeleteIcon />\n                        </IconButton>\n                    </>\n                );\n            },\n        },\n    ];\n\n    function pageChange(pageNumber: number): void {\n        setFilter((filter) => ({ ...filter, offset: pageNumber }));\n    }\n\n    function pageSizeChange(pageSize: number): void {\n        setFilter((filter) => ({ ...filter, limit: pageSize, offset: 0 }));\n    }\n\n    function createItem() {\n        history.push('/admin/products/create');\n    }\n\n    return (\n        <Box sx={{ height: '100%', width: '100%', p: 1 }}>\n            <DataGrid\n                autoHeight\n                disableColumnMenu={true}\n                disableColumnFilter={true}\n                pagination\n                pageSize={filter.limit}\n                page={filter.offset}\n                rowCount={totalSize}\n                rowsPerPageOptions={[10, 20, 50, 100]}\n                onPageChange={pageChange}\n                onPageSizeChange={pageSizeChange}\n                components={{ Toolbar: QuickFilterToolbar }}\n                componentsProps={{\n                    toolbar: {\n                        value: filter.kw,\n                        setFilter,\n                    },\n                }}\n                columns={cols}\n                rows={dataSource}\n            />\n            <Fab\n                sx={{\n                    position: 'fixed',\n                    bottom: 16,\n                    right: 48,\n                }}\n                size='medium'\n                color='primary'\n                aria-label='add'\n                onClick={createItem}\n            >\n                <AddIcon />\n            </Fab>\n            <ConfirmDeleteDialog {...deleteDialog} />\n            <Portal channel={CHANNEL_APP_BAR_TITLE}>\n                产品中心\n            </Portal>\n        </Box>\n    );\n};\n","import { FileUploadService } from '../../services';\nimport { lastValueFrom, Subscription } from 'rxjs';\n\nclass MyUploadAdapter {\n    private loader: any;\n    private _uploadTask: Subscription;\n\n    constructor(loader) {\n        this.loader = loader;\n    }\n\n    upload = () => {\n        const formData = new FormData();\n        return this.loader.file.then((file) => {\n            formData.append('file', file);\n            return lastValueFrom(FileUploadService.postImage(formData)).then((resp) => {\n                if (resp.errcode !== 0) {\n                    return { default: 'https://33333.cdn.cke-cs.com/rc1DFuFpHqcR3Mah6y0e/images/a941c59ff780060b51d398434c99fe9f229615b4227f5434.png' };\n                }\n                return { default: resp.data.url };\n            }).catch(() => {\n                return { default: 'https://33333.cdn.cke-cs.com/rc1DFuFpHqcR3Mah6y0e/images/a941c59ff780060b51d398434c99fe9f229615b4227f5434.png' };\n            });\n        });\n    };\n\n    abort = () => {\n        this._uploadTask.unsubscribe();\n    };\n}\n\nexport function UploadAdaptorPlugin(editor) {\n    editor.plugins.get('FileRepository').createUploadAdapter = (loader) => {\n        return new MyUploadAdapter(loader);\n    };\n};","import React, { ChangeEvent, useEffect, useState } from 'react';\nimport {\n    Box,\n    Button,\n    Grid,\n    Paper,\n    TextField,\n    Typography,\n    ImageList,\n    ImageListItem,\n    MenuItem,\n} from '@mui/material';\nimport { Article, ArticleType, ArticleTypeListResponse } from '../../../models';\nimport { CKEditor } from '@ckeditor/ckeditor5-react';\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\nimport { ActionService, ArticleDataService, ArticleTypeDataService, FileUploadService } from '../../../services';\nimport { UploadAdaptorPlugin } from '../../../components/form/upload-adaptor-plugin';\nimport { switchMap } from 'rxjs';\nimport { useHistory } from 'react-router';\nimport { useSnackbar } from 'notistack';\n\nexport const EditForm: React.FC<{ detail: Article }> = ({\n                                                            detail,\n                                                        }) => {\n    const [formDetail, setFormDetail] = useState<Article>(detail);\n    const [categoryList, setCategoryList] = useState<ArticleType[]>([]);\n    const [selectedRootCategory, setSelectedRootCategory] = useState<ArticleType>(null);\n    const history = useHistory();\n    const snackBar = useSnackbar();\n\n    useEffect(() => {\n        ArticleTypeDataService.getList(0).subscribe({\n            next: (resp: ArticleTypeListResponse) => {\n                const categoryList = resp.data.list;\n                setCategoryList(categoryList);\n            }, error: (err) => {\n                console.error('fail to fetch article type list', err);\n                snackBar.enqueueSnackbar('获取产品类型信息失败', {\n                    variant: 'error',\n                });\n            },\n        });\n    }, [snackBar]);\n    useEffect(() => {\n        if (formDetail.type_id >= 0) {\n            const selectedRootCategory = categoryList.find(x => x.id === formDetail.type_id);\n            setSelectedRootCategory(selectedRootCategory);\n        }\n    }, [categoryList, formDetail.type_id]);\n\n    useEffect(() => {\n        const saveAction = ActionService.handleAction('save').pipe(switchMap(() => {\n            return !formDetail.id ? ArticleDataService.creat({\n                category: 0,\n                content: formDetail.content,\n                summary: formDetail.summary,\n                title: formDetail.title,\n                type_id: formDetail.type_id,\n                covers: formDetail.covers.map(x => x.img),\n            }) : ArticleDataService.edit({\n                content: formDetail.content,\n                id: formDetail.id,\n                summary: formDetail.summary,\n                title: formDetail.title,\n                type_id: formDetail.type_id,\n                covers: formDetail.covers.map(x => x.img),\n            });\n        })).subscribe({\n            next: () => {\n                history.push('/admin/products');\n                snackBar.enqueueSnackbar('保存产品信息成功', {\n                    variant: 'success',\n                });\n            }, error: () => {\n                snackBar.enqueueSnackbar('保存产品失败', {\n                    variant: 'error',\n                });\n            },\n        });\n\n        return () => {\n            saveAction.unsubscribe();\n        };\n    }, [formDetail, snackBar, history]);\n\n    const rootCategoryList: () => ArticleType[] = () => {\n        return categoryList.filter(x => !x.parent_id);\n    };\n    const childCategoryList: () => ArticleType[] = () => {\n        return !selectedRootCategory ? [] : categoryList.filter(x => x.parent_id === selectedRootCategory.id);\n    };\n\n    function updateInputValue(key: string): (e: ChangeEvent<HTMLInputElement>) => void {\n        return (e) => {\n            const value = e.target.value;\n            setFormDetail((state) => ({\n                ...state,\n                [key]: value,\n            }));\n        };\n    }\n\n    function handleRootCategoryChange(e) {\n        const targetCategory = categoryList.find(x => x.id === e.target.value);\n        setSelectedRootCategory(targetCategory);\n    }\n\n    function handleChildCategoryChange(e) {\n        const targetCategory = categoryList.find(x => x.id === e.target.value);\n        setFormDetail((state) => ({\n            ...state,\n            type: [\n                selectedRootCategory,\n                targetCategory,\n            ],\n            type_id: targetCategory.id,\n        }));\n    }\n\n    function handleCoverUpload(e) {\n        const files = e.target.files;\n        if (files && files.length > 0) {\n            const formData = new FormData();\n            formData.append('file', files[0]);\n\n            FileUploadService.postImage(formData).subscribe({\n                next: (resp) => {\n                    setFormDetail((state) => {\n                        const covers = state.covers ?? [];\n                        covers.push({\n                            id: -Math.ceil(Math.random() * 1000),\n                            article_id: formDetail.id,\n                            img: resp.data.url,\n                        });\n\n                        return {\n                            ...state,\n                            covers,\n                        };\n                    });\n                }, error: (err) => {\n                    console.error('fail to upload image', err);\n                    snackBar.enqueueSnackbar(' 上传封面失败', {\n                        variant: 'error',\n                    });\n                },\n            });\n        }\n    }\n\n    function handleContentUpdate(event, editor): void {\n        const rawContent = editor.getData();\n\n        setFormDetail((state) => ({\n            ...state,\n            content: rawContent,\n        }));\n        console.log('editor update >>>', rawContent);\n    }\n\n    function clearSelectedFile(e) {\n        e.target.value = null;\n    }\n\n    return <Box sx={{ '& .MuiTextField-root': { mt: 1, mb: 1 } }} component='form'>\n        <Grid container>\n            <Grid item xs={12}>\n                <TextField\n                    select\n                    sx={{ minWidth: '200px', mr: 1 }}\n                    id='product-category-root'\n                    label='产品类型'\n                    value={selectedRootCategory?.id}\n                    onChange={handleRootCategoryChange}\n                >\n                    {\n                        rootCategoryList().map(x => {\n                            return <MenuItem key={x.id} value={x.id}>\n                                {x.name}\n                            </MenuItem>;\n                        })\n                    }\n                </TextField>\n                <TextField\n                    select\n                    sx={{ minWidth: '200px' }}\n                    id='product-category-child'\n                    onChange={handleChildCategoryChange}\n                    value={formDetail.type_id > 0 ? formDetail.type_id : ''}\n                    label='子类型'>\n                    {\n                        childCategoryList().map(x => {\n                            return <MenuItem key={x.id} value={x.id}>\n                                {x.name}\n                            </MenuItem>;\n                        })\n                    }\n                </TextField>\n            </Grid>\n            <Grid item xs={12}>\n                <TextField fullWidth label='标题' defaultValue={formDetail.title} onChange={updateInputValue('title')} />\n            </Grid>\n            <Grid item xs={12}>\n                <TextField fullWidth label='摘要' rows='4' defaultValue={formDetail.summary}\n                           onChange={updateInputValue('summary')} />\n            </Grid>\n            <Grid item xs={12}>\n                <Paper sx={{ mt: 1, p: 1, width: '100%' }} variant='outlined'>\n                    <Grid container>\n                        <Grid item xs={1}>\n                            <Typography variant='subtitle1'>封面</Typography>\n                        </Grid>\n                        <Grid item container xs justifyContent='flex-end'>\n                            <label htmlFor='upload-cover'>\n                                <input style={{ display: 'none' }} accept='image/*' id='upload-cover' type='file'\n                                       onChange={handleCoverUpload} onClick={clearSelectedFile} />\n                                <Button variant='contained' component='span'>\n                                    添加封面\n                                </Button>\n                            </label>\n                        </Grid>\n                        <Grid item xs={12}>\n                            <ImageList sx={{ minHeight: '160px', width: '100%' }} cols={5} rowHeight={164}>\n                                {formDetail.covers?.map((item) => (\n                                    <ImageListItem key={item.id}>\n                                        <img\n                                            src={`${item.img}`}\n                                            srcSet={`${item.img}`}\n                                            loading='lazy'\n                                            alt={''}\n                                        />\n                                    </ImageListItem>\n                                )) ?? <div />}\n                            </ImageList>\n                        </Grid>\n                    </Grid>\n                </Paper>\n            </Grid>\n            <Grid item container xs={12}>\n                <Paper sx={{ mt: 1, p: 1, width: '100%' }} variant='outlined'>\n                    <Grid container>\n                        <Grid item xs={1}>\n                            <Typography variant='subtitle1'>内容</Typography>\n                        </Grid>\n                        <Grid item\n                              sx={{\n                                  height: '420px',\n                                  '& .ck-editor__main, & .ck-content': { height: '380px' },\n                              }}\n                              xs={12}>\n                            <CKEditor\n                                config={{\n                                    extraPlugins: [UploadAdaptorPlugin],\n                                }}\n                                editor={ClassicEditor}\n                                data={formDetail.content}\n                                onChange={handleContentUpdate}\n                            />\n                        </Grid>\n                    </Grid>\n                </Paper>\n            </Grid>\n        </Grid>\n    </Box>;\n};","import React, { useState } from 'react';\nimport { Button } from '@mui/material';\nimport KeyboardArrowDownIcon from '@mui/icons-material/KeyboardArrowDown';\nimport Menu from '@mui/material/Menu';\nimport MenuItem from '@mui/material/MenuItem';\nimport { ActionService } from '../../services';\n\nexport const ActionMenu: React.FC<{ status: number, isCreate: boolean }> = ({ status, isCreate }) => {\n    const [anchorEl, setAnchorEl] = useState(null);\n\n    function handleOpen(e) {\n        setAnchorEl(e.currentTarget);\n    }\n\n    function closeMenu() {\n        setAnchorEl(null);\n    }\n\n    function handleSave() {\n        ActionService.save();\n        closeMenu();\n    }\n\n    function handlePublish() {\n        ActionService.publish();\n        closeMenu();\n    }\n\n    function handleWithdraw() {\n        ActionService.withdraw();\n        closeMenu();\n    }\n\n    return <div>\n        <Button\n            id='action-button'\n            aria-controls='action-menu'\n            aria-haspopup='true'\n            aria-expanded={anchorEl ? 'true' : undefined}\n            variant='contained'\n            color={!status ? 'info' : 'success'}\n            disableElevation\n            onClick={handleOpen}\n            endIcon={<KeyboardArrowDownIcon />}\n        >\n            {status === 0 ? '草稿' : '已发布'}\n        </Button>\n        <Menu\n            id='action-menu'\n            open={!!anchorEl}\n            anchorEl={anchorEl}\n            anchorOrigin={{\n                vertical: 'bottom',\n                horizontal: 'right',\n            }}\n            transformOrigin={{\n                vertical: 'top',\n                horizontal: 'right',\n            }} MenuListProps={{\n            'aria-labelledby': 'long-button',\n        }}\n            onClose={closeMenu}\n            PaperProps={{\n                style: {\n                    width: '160px',\n                },\n            }}\n        >\n            {\n                isCreate ?\n                    <MenuItem key='edit' onClick={handleSave}>\n                        保存\n                    </MenuItem>\n                    : (\n                        <>\n                            <MenuItem key='edit' onClick={handleSave}>\n                                保存\n                            </MenuItem>\n                            <MenuItem key='publish' onClick={handlePublish}>\n                                发布\n                            </MenuItem>\n                            <MenuItem key='withdraw' onClick={handleWithdraw}>\n                                撤稿\n                            </MenuItem>\n                        </>\n                    )\n            }\n        </Menu>\n    </div>;\n};\n","import React, { useEffect, useState } from 'react';\nimport { Article } from '../../../models';\nimport { useHistory, useRouteMatch } from 'react-router';\nimport { ActionService, ArticleDataService } from '../../../services';\nimport { Button, Grid } from '@mui/material';\n\nimport { EditForm } from '../components/edit-form';\nimport { ActionMenu } from '../../../components/form/action-menu';\nimport { CHANNEL_APP_BAR_TITLE, Portal } from '../../../components/portal';\nimport { useSnackbar } from 'notistack';\nimport { switchMap } from 'rxjs';\n\nexport const ProductDetail: React.FC = (props) => {\n    const [detail, setDetail] = useState<Article>(\n        {\n            id: 0,\n            category: 0,\n            content: '',\n            covers: [],\n            read_cnt: 0,\n            status: 0,\n            summary: '',\n            title: '',\n            type: [],\n            type_id: -1,\n            created_at: '',\n            updated_at: '',\n        },\n    );\n\n    const snackBar = useSnackbar();\n    const history = useHistory();\n    const { params } = useRouteMatch<{ id: string }>();\n    const { id } = params;\n\n    useEffect(() => {\n        let actionSubscription = id ? [\n            ArticleDataService.getDetail(parseInt(id)).subscribe({\n                next: (resp) => setDetail(resp.data.info), error: (err) => {\n                    console.error('fail to fetch product detail', err);\n                    snackBar.enqueueSnackbar(' 获取产品信息失败', {\n                        variant: 'error',\n                    });\n                },\n            }),\n            ActionService.handleAction('withdraw').pipe(\n                switchMap(() => ArticleDataService.withdraw(parseInt(id))),\n            ).subscribe({\n                next: () => {\n                    history.push('/admin/products');\n                    snackBar.enqueueSnackbar(' 撤稿成功', {\n                        variant: 'success',\n                    });\n                },\n                error: (err) => {\n                    console.error('fail to publish', err);\n                    snackBar.enqueueSnackbar(' 撤稿失败', {\n                        variant: 'error',\n                    });\n                },\n            }),\n            ActionService.handleAction('publish').pipe(\n                switchMap(() => ArticleDataService.publish(parseInt(id))),\n            ).subscribe({\n                next: () => {\n                    history.push('/admin/products');\n                    snackBar.enqueueSnackbar(' 发布成功', {\n                        variant: 'success',\n                    });\n                },\n                error: (err) => {\n                    console.error('fail to publish', err);\n                    snackBar.enqueueSnackbar(' 发布失败', {\n                        variant: 'error',\n                    });\n                },\n            }),\n        ] : [];\n\n        return () => {\n            if (actionSubscription.length > 0) {\n                for (const subscription of actionSubscription) {\n                    subscription.unsubscribe();\n                }\n            }\n        };\n    }, [id, snackBar, history]);\n\n    function goBack() {\n        history.goBack();\n    }\n\n    return (<>\n        <Grid container spacing={2} sx={{ pr: 2, pl: 1 }}>\n            <Grid container item xs={12}>\n                <Grid item xs={1} sx={{ pl: 1 }}>\n                    <Button variant='outlined' onClick={goBack}>返回</Button>\n                </Grid>\n                <Grid item container justifyContent='flex-end' xs>\n                    <ActionMenu status={detail?.status} isCreate={detail?.id === 0} />\n                </Grid>\n            </Grid>\n            <Grid item xs={12}>\n                <EditForm detail={detail} />\n            </Grid>\n        </Grid>\n        <Portal channel={CHANNEL_APP_BAR_TITLE}>\n            产品中心\n        </Portal>\n    </>);\n};","import React, { useEffect, useState } from 'react';\nimport { DataGrid, GridColDef, GridRenderCellParams, GridRowModel } from '@mui/x-data-grid';\nimport { useHistory } from 'react-router';\n\nimport { ArticleDataService } from '../../services';\nimport { Article, ArticleFilter } from '../../models';\nimport { Box, Fab, IconButton, Link } from '@mui/material';\nimport { QuickFilterToolbar } from '../../components/table';\nimport AddIcon from '@mui/icons-material/Add';\nimport { ConfirmDeleteDialog, ConfirmDeleteDialogProps } from '../../components/dialog/confirm-delete-dialog';\nimport { tap } from 'rxjs';\nimport EditIcon from '@mui/icons-material/Edit';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport { CHANNEL_APP_BAR_TITLE, Portal } from '../../components/portal';\nimport { useSnackbar } from 'notistack';\n\nexport const Applications = () => {\n    const [filter, setFilter] = useState<ArticleFilter>({ kw: '', limit: 20, offset: 0, category: 1 });\n    const [dataSource, setDataSource] = useState<Article[]>([]);\n    const [totalSize, setTotalSize] = useState<number>(0);\n    const [deleteDialog, setDeleteDialog] = useState<ConfirmDeleteDialogProps>({ open: false });\n    const history = useHistory();\n    const snackBar = useSnackbar();\n\n    useEffect(() => {\n        ArticleDataService.getList(filter).subscribe({\n            next: ({ errcode, data }) => {\n                if (errcode === 0) {\n                    setDataSource(data.list);\n                    setTotalSize(data.total);\n                } else {\n                    console.error('fail to fetch application list', errcode);\n                    snackBar.enqueueSnackbar(' 获取行业应用列表失败', {\n                        variant: 'error',\n                    });\n                }\n            }, error: (err) => {\n                console.error('fail to fetch application list', err);\n                snackBar.enqueueSnackbar(' 获取行业应用列表失败', {\n                    variant: 'error',\n                });\n            },\n        });\n    }, [filter, snackBar]);\n\n    function confirmDelete(item: GridRowModel) {\n        setDeleteDialog({\n            open: true, message: `确认删除行业应用信息: \"${item.title}\"?`,\n            onClose(): void {\n                setDeleteDialog({ open: false });\n            },\n            onConfirm(): void {\n                ArticleDataService.delete(item.id).pipe(\n                    tap(() => {\n                        setFilter({ ...filter });\n                        setDeleteDialog({ open: false });\n\n                        snackBar.enqueueSnackbar(' 删除行业应用成功', {\n                            variant: 'success',\n                        });\n                    }),\n                ).subscribe({\n                    error: (err) => {\n                        console.error('fail to delete application', err);\n                        snackBar.enqueueSnackbar(' 删除行业应用失败', {\n                            variant: 'error',\n                        });\n                    },\n                });\n            },\n        });\n    }\n\n    const cols: GridColDef[] = [\n        {\n            field: 'id',\n            headerName: '稿件Id',\n            sortable: false,\n            renderCell: (params: GridRenderCellParams) => {\n                return (<Link href={`/admin/applications/detail/${params.value}`} color='primary'\n                >{params.value}</Link>);\n            },\n        },\n        {\n            field: 'title',\n            headerName: '标题',\n            sortable: false,\n        },\n        {\n            field: 'type_id',\n            headerName: '类型',\n            sortable: false,\n        },\n        {\n            field: 'status',\n            headerName: '状态',\n            sortable: false,\n        },\n        {\n            field: 'read_cnt',\n            headerName: '阅读次数',\n            sortable: false,\n        },\n        {\n            field: 'created_time',\n            headerName: '创建时间',\n            sortable: false,\n        },\n        {\n            field: 'category',\n            headerName: '操作',\n            sortable: false,\n            renderCell: (params: GridRenderCellParams) => {\n                return (\n                    <>\n                        <IconButton component={Link} href={`/admin/applications/detail/${params.row.id}`}>\n                            <EditIcon />\n                        </IconButton>\n                        <IconButton onClick={() => confirmDelete(params.row)}>\n                            <DeleteIcon />\n                        </IconButton>\n                    </>\n                );\n            },\n        },\n    ];\n\n    function pageChange(pageNumber: number): void {\n        setFilter((filter) => ({ ...filter, offset: pageNumber }));\n    }\n\n    function pageSizeChange(pageSize: number): void {\n        setFilter((filter) => ({ ...filter, limit: pageSize, offset: 0 }));\n    }\n\n    function createItem() {\n        history.push('/admin/applications/create');\n    }\n\n    return (<Box sx={{ height: '100%', width: '100%', p: 1 }}>\n            <DataGrid\n                autoHeight\n                disableColumnMenu={true}\n                disableColumnFilter={true}\n                pagination\n                pageSize={filter.limit}\n                page={filter.offset}\n                rowCount={totalSize}\n                rowsPerPageOptions={[10, 20, 50, 100]}\n                onPageChange={pageChange}\n                onPageSizeChange={pageSizeChange}\n                components={{ Toolbar: QuickFilterToolbar }}\n                componentsProps={{\n                    toolbar: {\n                        value: filter.kw,\n                        setFilter,\n                    },\n                }}\n                columns={cols}\n                rows={dataSource}\n            />\n            <Fab\n                sx={{\n                    position: 'fixed',\n                    bottom: 16,\n                    right: 48,\n                }}\n                size='medium'\n                color='primary'\n                aria-label='add'\n                onClick={createItem}\n            >\n                <AddIcon />\n            </Fab>\n            <ConfirmDeleteDialog {...deleteDialog} />\n            <Portal channel={CHANNEL_APP_BAR_TITLE}>\n                行业应用\n            </Portal>\n        </Box>\n    );\n};","import React, { ChangeEvent, useEffect, useState } from 'react';\nimport {\n    Box,\n    Button,\n    Grid,\n    Paper,\n    TextField,\n    Typography,\n    ImageList,\n    ImageListItem,\n    MenuItem,\n} from '@mui/material';\nimport { Article, ArticleType, ArticleTypeListResponse } from '../../../models';\nimport { CKEditor } from '@ckeditor/ckeditor5-react';\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\nimport { ActionService, ArticleDataService, ArticleTypeDataService, FileUploadService } from '../../../services';\nimport { UploadAdaptorPlugin } from '../../../components/form/upload-adaptor-plugin';\nimport { switchMap } from 'rxjs';\nimport { useHistory } from 'react-router';\nimport { useSnackbar } from 'notistack';\n\nexport const EditForm: React.FC<{ detail: Article }> = ({\n                                                            detail,\n                                                        }) => {\n    const [formDetail, setFormDetail] = useState<Article>(detail);\n    const [categoryList, setCategoryList] = useState<ArticleType[]>([]);\n\n    const history = useHistory();\n    const snackBar = useSnackbar();\n\n    useEffect(() => {\n        ArticleTypeDataService.getList(1).subscribe((resp: ArticleTypeListResponse) => {\n            const categoryList = resp.data.list;\n            setCategoryList(categoryList);\n        });\n    }, []);\n\n    useEffect(() => {\n        const saveAction = ActionService.handleAction('save').pipe(switchMap(() => {\n            return !formDetail.id ? ArticleDataService.creat({\n                category: 1,\n                content: formDetail.content,\n                summary: formDetail.summary,\n                title: formDetail.title,\n                type_id: formDetail.type_id,\n                covers: formDetail.covers.map(x => x.img),\n            }) : ArticleDataService.edit({\n                content: formDetail.content,\n                id: formDetail.id,\n                summary: formDetail.summary,\n                title: formDetail.title,\n                type_id: formDetail.type_id,\n                covers: formDetail.covers.map(x => x.img),\n            });\n        })).subscribe({\n            next: () => {\n                history.push('/admin/applications');\n\n                snackBar.enqueueSnackbar('  保存行业信息成功', {\n                    variant: 'success',\n                });\n            }, error: (err) => {\n                console.error('fail to fetch application list', err);\n                snackBar.enqueueSnackbar(' 保存行业信息失败', {\n                    variant: 'error',\n                });\n            },\n        });\n\n        return () => {\n            saveAction.unsubscribe();\n        };\n    }, [formDetail, snackBar, history]);\n\n    function updateInputValue(key: string): (e: ChangeEvent<HTMLInputElement>) => void {\n        return (e) => {\n            const value = e.target.value;\n            setFormDetail((state) => ({\n                ...state,\n                [key]: value,\n            }));\n        };\n    }\n\n    function handleCategoryChange(e) {\n        const targetCategory = categoryList.find(x => x.id === e.target.value);\n        setFormDetail((state) => ({\n            ...state,\n            type: [\n                targetCategory,\n            ],\n            type_id: targetCategory.id,\n        }));\n    }\n\n    function handleCoverUpload(e) {\n        const files = e.target.files;\n        if (files && files.length > 0) {\n            const formData = new FormData();\n            formData.append('file', files[0]);\n\n            FileUploadService.postImage(formData).subscribe((resp) => {\n                setFormDetail((state) => {\n                    const covers = state.covers ?? [];\n                    covers.push({\n                        id: -Math.ceil(Math.random() * 1000),\n                        article_id: formDetail.id,\n                        img: resp.data.url,\n                    });\n\n                    return {\n                        ...state,\n                        covers,\n                    };\n                });\n            });\n        }\n    }\n\n    function handleContentUpdate(event, editor): void {\n        const rawContent = editor.getData();\n\n        setFormDetail((state) => ({\n            ...state,\n            content: rawContent,\n        }));\n        console.log('editor update >>>', rawContent);\n    }\n\n    function clearSelectedFile(e) {\n        e.target.value = null;\n    }\n\n    return <Box sx={{ '& .MuiTextField-root': { mt: 1, mb: 1 } }} component='form'>\n        <Grid container>\n            <Grid item xs={12}>\n                <TextField\n                    select\n                    sx={{ minWidth: '200px' }}\n                    id='application-category'\n                    onChange={handleCategoryChange}\n                    value={formDetail.type_id > 0 ? formDetail.type_id : ''}\n                    label='应用类型'>\n                    {\n                        categoryList.map(x => {\n                            return <MenuItem key={x.id} value={x.id}>\n                                {x.name}\n                            </MenuItem>;\n                        })\n                    }\n                </TextField>\n            </Grid>\n            <Grid item xs={12}>\n                <TextField fullWidth label='标题' defaultValue={formDetail.title} onChange={updateInputValue('title')} />\n            </Grid>\n            <Grid item xs={12}>\n                <TextField fullWidth label='摘要' rows='4' defaultValue={formDetail.summary}\n                           onChange={updateInputValue('summary')} />\n            </Grid>\n            <Grid item xs={12}>\n                <Paper sx={{ mt: 1, p: 1, width: '100%' }} variant='outlined'>\n                    <Grid container>\n                        <Grid item xs={1}>\n                            <Typography variant='subtitle1'>封面</Typography>\n                        </Grid>\n                        <Grid item container xs justifyContent='flex-end'>\n                            <label htmlFor='upload-cover'>\n                                <input style={{ display: 'none' }} accept='image/*' id='upload-cover' type='file'\n                                       onChange={handleCoverUpload} onClick={clearSelectedFile} />\n                                <Button variant='contained' component='span'>\n                                    添加封面\n                                </Button>\n                            </label>\n                        </Grid>\n                        <Grid item xs={12}>\n                            <ImageList sx={{ minHeight: '160px', width: '100%' }} cols={5} rowHeight={164}>\n                                {formDetail.covers?.map((item) => (\n                                    <ImageListItem key={item.id}>\n                                        <img\n                                            src={`${item.img}`}\n                                            srcSet={`${item.img}`}\n                                            loading='lazy'\n                                            alt={''}\n                                        />\n                                    </ImageListItem>\n                                )) ?? <div />}\n                            </ImageList>\n                        </Grid>\n                    </Grid>\n                </Paper>\n            </Grid>\n            <Grid item container xs={12}>\n                <Paper sx={{ mt: 1, p: 1, width: '100%' }} variant='outlined'>\n                    <Grid container>\n                        <Grid item xs={1}>\n                            <Typography variant='subtitle1'>内容</Typography>\n                        </Grid>\n                        <Grid item\n                              sx={{\n                                  height: '420px',\n                                  '& .ck-editor__main, & .ck-content': { height: '380px' },\n                              }}\n                              xs={12}>\n                            <CKEditor\n                                config={{\n                                    extraPlugins: [UploadAdaptorPlugin],\n                                }}\n                                editor={ClassicEditor}\n                                data={formDetail.content}\n                                onChange={handleContentUpdate}\n                            />\n                        </Grid>\n                    </Grid>\n                </Paper>\n            </Grid>\n        </Grid>\n    </Box>;\n};","import React, { useEffect, useState } from 'react';\nimport { Article } from '../../../models';\nimport { useHistory, useRouteMatch } from 'react-router';\nimport { ActionService, ArticleDataService } from '../../../services';\nimport { Button, Grid } from '@mui/material';\n\nimport { EditForm } from '../components/edit-form';\nimport { ActionMenu } from '../../../components/form/action-menu';\nimport { useSnackbar } from 'notistack';\nimport { switchMap } from 'rxjs';\n\nexport const ApplicationDetail: React.FC = (props) => {\n    const [detail, setDetail] = useState<Article>(\n        {\n            id: 0,\n            category: 1,\n            content: '',\n            covers: [],\n            read_cnt: 0,\n            status: 0,\n            summary: '',\n            title: '',\n            type: [],\n            type_id: -1,\n            created_at: '',\n            updated_at: '',\n        },\n    );\n\n    const snackBar = useSnackbar();\n    const history = useHistory();\n    const { params } = useRouteMatch<{ id: string }>();\n    const { id } = params;\n\n    useEffect(() => {\n        let actionSubscription = id ? [\n            ArticleDataService.getDetail(parseInt(id)).subscribe({\n                next: (resp) => setDetail(resp.data.info), error: (err) => {\n                    console.error('fail to fetch application list', err);\n                    snackBar.enqueueSnackbar(' 获取应用详情失败', {\n                        variant: 'error',\n                    });\n                },\n            }),\n            ActionService.handleAction('withdraw').pipe(\n                switchMap(() => ArticleDataService.withdraw(parseInt(id))),\n            ).subscribe({\n                next: () => {\n                    history.push('/admin/applications');\n                    snackBar.enqueueSnackbar(' 撤稿成功', {\n                        variant: 'success',\n                    });\n                },\n                error: (err) => {\n                    console.error('fail to publish', err);\n                    snackBar.enqueueSnackbar(' 撤稿失败', {\n                        variant: 'error',\n                    });\n                },\n            }),\n            ActionService.handleAction('publish').pipe(\n                switchMap(() => ArticleDataService.publish(parseInt(id))),\n            ).subscribe({\n                next: () => {\n                    history.push('/admin/applications');\n                    snackBar.enqueueSnackbar(' 发布成功', {\n                        variant: 'success',\n                    });\n                },\n                error: (err) => {\n                    console.error('fail to publish', err);\n                    snackBar.enqueueSnackbar(' 发布失败', {\n                        variant: 'error',\n                    });\n                },\n            }),\n        ] : [];\n\n        return () => {\n            if (actionSubscription.length > 0) {\n                for (const subscription of actionSubscription) {\n                    subscription.unsubscribe();\n                }\n            }\n        };\n    }, [id, snackBar, history]);\n\n    function goBack() {\n        history.goBack();\n    }\n\n    return <Grid container spacing={2} sx={{ pr: 2, pl: 1 }}>\n        <Grid container item xs={12}>\n            <Grid item xs={1} sx={{ pl: 1 }}>\n                <Button variant='outlined' onClick={goBack}>返回</Button>\n            </Grid>\n            <Grid item container justifyContent='flex-end' xs>\n                <ActionMenu status={detail?.status} isCreate={detail?.id === 0} />\n            </Grid>\n        </Grid>\n        <Grid item xs={12}>\n            <EditForm detail={detail} />\n        </Grid>\n    </Grid>;\n};","import React, { useEffect, useState } from 'react';\nimport { DataGrid, GridColDef, GridRenderCellParams, GridRowModel } from '@mui/x-data-grid';\nimport { useHistory } from 'react-router';\n\nimport { ArticleDataService } from '../../services';\nimport { Article, ArticleFilter } from '../../models';\nimport { Box, Fab, IconButton, Link } from '@mui/material';\nimport { QuickFilterToolbar } from '../../components/table';\nimport AddIcon from '@mui/icons-material/Add';\nimport { tap } from 'rxjs';\nimport EditIcon from '@mui/icons-material/Edit';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport { ConfirmDeleteDialog, ConfirmDeleteDialogProps } from '../../components/dialog/confirm-delete-dialog';\nimport { CHANNEL_APP_BAR_TITLE, Portal } from '../../components/portal';\nimport { useSnackbar } from 'notistack';\n\nexport const News = () => {\n    const [filter, setFilter] = useState<ArticleFilter>({ kw: '', limit: 20, offset: 0, category: 2 });\n    const [dataSource, setDataSource] = useState<Article[]>([]);\n    const [totalSize, setTotalSize] = useState<number>(0);\n    const [deleteDialog, setDeleteDialog] = useState<ConfirmDeleteDialogProps>({ open: false });\n    const history = useHistory();\n    const snackBar = useSnackbar();\n\n    useEffect(() => {\n        ArticleDataService.getList(filter).subscribe({next: ({ errcode, data }) => {\n            if (errcode === 0) {\n                setDataSource(data.list);\n                setTotalSize(data.total);\n            } else {\n                console.error('fail to fetch news list', errcode);\n                snackBar.enqueueSnackbar(' 获取新闻列表失败', {\n                    variant: 'error',\n                });\n            }\n        }, error: (err) => {\n                console.error('fail to fetch news list', err);\n                snackBar.enqueueSnackbar(' 获取新闻列表失败', {\n                    variant: 'error',\n                });\n            } });\n    }, [filter, snackBar]);\n\n    function confirmDelete(item: GridRowModel) {\n        setDeleteDialog({\n            open: true, message: `确认删除其他信息: \"${item.title}\"?`,\n            onClose(): void {\n                setDeleteDialog({ open: false });\n            },\n            onConfirm(): void {\n                ArticleDataService.delete(item.id).pipe(\n                    tap(() => {\n                        setFilter({ ...filter });\n                        setDeleteDialog({ open: false });\n\n                        snackBar.enqueueSnackbar(' 删除新闻成功', {\n                            variant: 'success',\n                        });\n                    }),\n                ).subscribe({\n                    error: (err) => {\n\n                        console.error('fail to delete news', err);\n                        snackBar.enqueueSnackbar(' 删除新闻失败', {\n                            variant: 'error',\n                        });\n                    }\n                });\n            },\n        });\n    }\n\n    const cols: GridColDef[] = [\n        {\n            field: 'id',\n            headerName: '稿件Id',\n            sortable: false,\n            renderCell: (params: GridRenderCellParams) => {\n                return (<Link href={`/admin/news/detail/${params.value}`} color='primary'\n                >{params.value}</Link>);\n            },\n        },\n        {\n            field: 'title',\n            headerName: '标题',\n            sortable: false,\n        },\n        {\n            field: 'type_id',\n            headerName: '类型',\n            sortable: false,\n        },\n        {\n            field: 'status',\n            headerName: '状态',\n            sortable: false,\n        },\n        {\n            field: 'read_cnt',\n            headerName: '阅读次数',\n            sortable: false,\n        },\n        {\n            field: 'created_time',\n            headerName: '创建时间',\n            sortable: false,\n        },\n        {\n            field: 'category',\n            headerName: '操作',\n            sortable: false,\n            renderCell: (params: GridRenderCellParams) => {\n                return (\n                    <>\n                        <IconButton component={Link} href={`/admin/news/detail/${params.row.id}`}>\n                            <EditIcon />\n                        </IconButton>\n                        <IconButton onClick={() => confirmDelete(params.row)}>\n                            <DeleteIcon />\n                        </IconButton>\n                    </>\n                );\n            },\n        },\n    ];\n\n    function pageChange(pageNumber: number): void {\n        setFilter((filter) => ({ ...filter, offset: pageNumber }));\n    }\n\n    function pageSizeChange(pageSize: number): void {\n        setFilter((filter) => ({ ...filter, limit: pageSize, offset: 0 }));\n    }\n\n    function createItem() {\n        history.push('/admin/news/create');\n    }\n\n    return (<Box sx={{ height: '100%', width: '100%', p: 1 }}>\n            <DataGrid\n                autoHeight\n                disableColumnMenu={true}\n                disableColumnFilter={true}\n                pagination\n                pageSize={filter.limit}\n                page={filter.offset}\n                rowCount={totalSize}\n                rowsPerPageOptions={[10, 20, 50, 100]}\n                onPageChange={pageChange}\n                onPageSizeChange={pageSizeChange}\n                components={{ Toolbar: QuickFilterToolbar }}\n                componentsProps={{\n                    toolbar: {\n                        value: filter.kw,\n                        setFilter,\n                    },\n                }}\n                columns={cols}\n                rows={dataSource}\n            />\n            <Fab\n                sx={{\n                    position: 'fixed',\n                    bottom: 16,\n                    right: 48,\n                }}\n                size='medium'\n                color='primary'\n                aria-label='add'\n                onClick={createItem}\n            >\n                <AddIcon />\n            </Fab>\n            <ConfirmDeleteDialog {...deleteDialog} />\n            <Portal channel={CHANNEL_APP_BAR_TITLE}>\n                 新闻中心\n            </Portal>\n\n        </Box>\n    );\n};","import React, { ChangeEvent, useEffect, useState } from 'react';\nimport {\n    Box,\n    Button,\n    Grid,\n    Paper,\n    TextField,\n    Typography,\n    ImageList,\n    ImageListItem,\n    MenuItem,\n} from '@mui/material';\nimport { Article, ArticleType, ArticleTypeListResponse } from '../../../models';\nimport { CKEditor } from '@ckeditor/ckeditor5-react';\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\nimport { ActionService, ArticleDataService, ArticleTypeDataService, FileUploadService } from '../../../services';\nimport { UploadAdaptorPlugin } from '../../../components/form/upload-adaptor-plugin';\nimport { switchMap } from 'rxjs';\nimport { useHistory } from 'react-router';\nimport { useSnackbar } from 'notistack';\n\nexport const EditForm: React.FC<{ detail: Article }> = ({\n                                                            detail,\n                                                        }) => {\n    const [formDetail, setFormDetail] = useState<Article>(detail);\n    const [categoryList, setCategoryList] = useState<ArticleType[]>([]);\n    const history = useHistory();\n    const snackBar = useSnackbar();\n\n    useEffect(() => {\n        ArticleTypeDataService.getList(2).subscribe((resp: ArticleTypeListResponse) => {\n            const categoryList = resp.data.list;\n            setCategoryList(categoryList);\n        });\n    }, []);\n\n    useEffect(() => {\n        const saveAction = ActionService.handleAction('save').pipe(switchMap(() => {\n            return !formDetail.id ? ArticleDataService.creat({\n                category: 2,\n                content: formDetail.content,\n                summary: formDetail.summary,\n                title: formDetail.title,\n                type_id: formDetail.type_id,\n                covers: formDetail.covers.map(x => x.img),\n            }) : ArticleDataService.edit({\n                content: formDetail.content,\n                id: formDetail.id,\n                summary: formDetail.summary,\n                title: formDetail.title,\n                type_id: formDetail.type_id,\n                covers: formDetail.covers.map(x => x.img),\n            });\n        })).subscribe({\n            next: () => {\n                history.push('/admin/news');\n\n                snackBar.enqueueSnackbar(' 保存新闻成功', {\n                    variant: 'success',\n                });\n            }, error: err => {\n                console.error('fail to save news ', err);\n                snackBar.enqueueSnackbar(' 保存新闻失败', {\n                    variant: 'error',\n                });\n            },\n        });\n\n        return () => {\n            saveAction.unsubscribe();\n        };\n    }, [formDetail, snackBar, history]);\n\n    function updateInputValue(key: string): (e: ChangeEvent<HTMLInputElement>) => void {\n        return (e) => {\n            const value = e.target.value;\n            setFormDetail((state) => ({\n                ...state,\n                [key]: value,\n            }));\n        };\n    }\n\n    function handleCategoryChange(e) {\n        const targetCategory = categoryList.find(x => x.id === e.target.value);\n        setFormDetail((state) => ({\n            ...state,\n            type: [\n                targetCategory,\n            ],\n            type_id: targetCategory.id,\n        }));\n    }\n\n    function handleCoverUpload(e) {\n        const files = e.target.files;\n        if (files && files.length > 0) {\n            const formData = new FormData();\n            formData.append('file', files[0]);\n\n            FileUploadService.postImage(formData).subscribe((resp) => {\n                setFormDetail((state) => {\n                    const covers = state.covers ?? [];\n                    covers.push({\n                        id: -Math.ceil(Math.random() * 1000),\n                        article_id: formDetail.id,\n                        img: resp.data.url,\n                    });\n\n                    return {\n                        ...state,\n                        covers,\n                    };\n                });\n            });\n        }\n    }\n\n    function handleContentUpdate(event, editor): void {\n        const rawContent = editor.getData();\n\n        setFormDetail((state) => ({\n            ...state,\n            content: rawContent,\n        }));\n        console.log('editor update >>>', rawContent);\n    }\n\n    function clearSelectedFile(e) {\n        e.target.value = null;\n    }\n\n    return <Box sx={{ '& .MuiTextField-root': { mt: 1, mb: 1 } }} component='form'>\n        <Grid container>\n            <Grid item xs={12}>\n                <TextField\n                    select\n                    sx={{ minWidth: '200px' }}\n                    id='news-category'\n                    onChange={handleCategoryChange}\n                    value={formDetail.type_id > 0 ? formDetail.type_id : ''}\n                    label='新闻类型'>\n                    {\n                        categoryList.map(x => {\n                            return <MenuItem key={x.id} value={x.id}>\n                                {x.name}\n                            </MenuItem>;\n                        })\n                    }\n                </TextField>\n            </Grid>\n            <Grid item xs={12}>\n                <TextField fullWidth label='标题' defaultValue={formDetail.title} onChange={updateInputValue('title')} />\n            </Grid>\n            <Grid item xs={12}>\n                <TextField fullWidth label='摘要' rows='4' defaultValue={formDetail.summary}\n                           onChange={updateInputValue('summary')} />\n            </Grid>\n            <Grid item xs={12}>\n                <Paper sx={{ mt: 1, p: 1, width: '100%' }} variant='outlined'>\n                    <Grid container>\n                        <Grid item xs={1}>\n                            <Typography variant='subtitle1'>封面</Typography>\n                        </Grid>\n                        <Grid item container xs justifyContent='flex-end'>\n                            <label htmlFor='upload-cover'>\n                                <input style={{ display: 'none' }} accept='image/*' id='upload-cover' type='file'\n                                       onChange={handleCoverUpload} onClick={clearSelectedFile} />\n                                <Button variant='contained' component='span'>\n                                    添加封面\n                                </Button>\n                            </label>\n                        </Grid>\n                        <Grid item xs={12}>\n                            <ImageList sx={{ minHeight: '160px', width: '100%' }} cols={5} rowHeight={164}>\n                                {formDetail.covers?.map((item) => (\n                                    <ImageListItem key={item.id}>\n                                        <img\n                                            src={`${item.img}`}\n                                            srcSet={`${item.img}`}\n                                            loading='lazy'\n                                            alt={''}\n                                        />\n                                    </ImageListItem>\n                                )) ?? <div />}\n                            </ImageList>\n                        </Grid>\n                    </Grid>\n                </Paper>\n            </Grid>\n            <Grid item container xs={12}>\n                <Paper sx={{ mt: 1, p: 1, width: '100%' }} variant='outlined'>\n                    <Grid container>\n                        <Grid item xs={1}>\n                            <Typography variant='subtitle1'>内容</Typography>\n                        </Grid>\n                        <Grid item\n                              sx={{\n                                  height: '420px',\n                                  '& .ck-editor__main, & .ck-content': { height: '380px' },\n                              }}\n                              xs={12}>\n                            <CKEditor\n                                config={{\n                                    extraPlugins: [UploadAdaptorPlugin],\n                                }}\n                                editor={ClassicEditor}\n                                data={formDetail.content}\n                                onChange={handleContentUpdate}\n                            />\n                        </Grid>\n                    </Grid>\n                </Paper>\n            </Grid>\n        </Grid>\n    </Box>;\n};","import React, { useEffect, useState } from 'react';\nimport { Article } from '../../../models';\nimport { useHistory, useRouteMatch } from 'react-router';\nimport { ActionService, ArticleDataService } from '../../../services';\nimport { Button, Grid } from '@mui/material';\n\nimport { EditForm } from '../components/edit-form';\nimport { ActionMenu } from '../../../components/form/action-menu';\nimport { useSnackbar } from 'notistack';\nimport { switchMap } from 'rxjs';\n\nexport const NewsDetail: React.FC = (props) => {\n    const [detail, setDetail] = useState<Article>(\n        {\n            id: 0,\n            category: 2,\n            content: '',\n            covers: [],\n            read_cnt: 0,\n            status: 0,\n            summary: '',\n            title: '',\n            type: [],\n            type_id: -1,\n            created_at: '',\n            updated_at: '',\n        },\n    );\n\n    const snackBar = useSnackbar();\n    const history = useHistory();\n    const { params } = useRouteMatch<{ id: string }>();\n    const { id } = params;\n\n    useEffect(() => {\n        let actionSubscription = id ? [\n            ArticleDataService.getDetail(parseInt(id)).subscribe({\n                next: (resp) => setDetail(resp.data.info), error: (err) => {\n                    console.error('fail to fetch product detail', err);\n                    snackBar.enqueueSnackbar(' 获取新闻详情失败', {\n                        variant: 'error',\n                    });\n                },\n            }),\n            ActionService.handleAction('withdraw').pipe(\n                switchMap(() => ArticleDataService.withdraw(parseInt(id))),\n            ).subscribe({\n                next: () => {\n                    history.push('/admin/news');\n                    snackBar.enqueueSnackbar(' 撤稿成功', {\n                        variant: 'success',\n                    });\n                },\n                error: (err) => {\n                    console.error('fail to publish', err);\n                    snackBar.enqueueSnackbar(' 撤稿失败', {\n                        variant: 'error',\n                    });\n                },\n            }),\n\n            ActionService.handleAction('publish').pipe(\n                switchMap(() => ArticleDataService.publish(parseInt(id))),\n            ).subscribe({\n                next: () => {\n                    history.push('/admin/news');\n                    snackBar.enqueueSnackbar(' 发布成功', {\n                        variant: 'success',\n                    });\n                },\n                error: (err) => {\n                    console.error('fail to publish', err);\n                    snackBar.enqueueSnackbar(' 发布失败', {\n                        variant: 'error',\n                    });\n                },\n            }),\n        ] : [];\n\n        return () => {\n            if (actionSubscription.length > 0) {\n                for (const subscription of actionSubscription) {\n                    subscription.unsubscribe();\n                }\n            }\n        };\n    }, [id, snackBar, history]);\n\n    function goBack() {\n        history.goBack();\n    }\n\n    return <Grid container spacing={2} sx={{ pr: 2, pl: 1 }}>\n        <Grid container item xs={12}>\n            <Grid item xs={1} sx={{ pl: 1 }}>\n                <Button variant='outlined' onClick={goBack}>返回</Button>\n            </Grid>\n            <Grid item container justifyContent='flex-end' xs>\n                <ActionMenu status={detail?.status} isCreate={detail?.id === 0} />\n            </Grid>\n        </Grid>\n        <Grid item xs={12}>\n            <EditForm detail={detail} />\n        </Grid>\n    </Grid>;\n};","import React, { useEffect, useState } from 'react';\nimport { DataGrid, GridColDef, GridRenderCellParams, GridRowModel } from '@mui/x-data-grid';\nimport { useHistory } from 'react-router';\n\nimport { ArticleDataService } from '../../services';\nimport { Article, ArticleFilter } from '../../models';\nimport { Box, Fab, IconButton, Link } from '@mui/material';\nimport { QuickFilterToolbar } from '../../components/table';\nimport AddIcon from '@mui/icons-material/Add';\nimport { ConfirmDeleteDialog, ConfirmDeleteDialogProps } from '../../components/dialog/confirm-delete-dialog';\nimport { tap } from 'rxjs';\nimport EditIcon from '@mui/icons-material/Edit';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport { CHANNEL_APP_BAR_TITLE, Portal } from '../../components/portal';\nimport { useSnackbar } from 'notistack';\n\nexport const Others = () => {\n    const [filter, setFilter] = useState<ArticleFilter>({ kw: '', limit: 20, offset: 0, category: 3 });\n    const [dataSource, setDataSource] = useState<Article[]>([]);\n    const [totalSize, setTotalSize] = useState<number>(0);\n    const [deleteDialog, setDeleteDialog] = useState<ConfirmDeleteDialogProps>({ open: false });\n    const history = useHistory();\n    const snackBar = useSnackbar();\n\n    useEffect(() => {\n        ArticleDataService.getList(filter).subscribe({\n            next: ({ errcode, data }) => {\n                if (errcode === 0) {\n                    setDataSource(data.list);\n                    setTotalSize(data.total);\n                } else {\n                    console.error('fail to fetch others list', errcode);\n                    snackBar.enqueueSnackbar(' 获取其他列表失败', {\n                        variant: 'error',\n                    });\n                }\n            }, error: (err) => {\n                console.error('fail to fetch others list', err);\n                snackBar.enqueueSnackbar(' 获取其他列表失败', {\n                    variant: 'error',\n                });\n            },\n        });\n    }, [filter, snackBar]);\n\n    function confirmDelete(item: GridRowModel) {\n        setDeleteDialog({\n            open: true, message: `确认删除其他信息: \"${item.title}\"?`,\n            onClose(): void {\n                setDeleteDialog({ open: false });\n            },\n            onConfirm(): void {\n                ArticleDataService.delete(item.id).pipe(\n                    tap(() => {\n                        setFilter({ ...filter });\n                        setDeleteDialog({ open: false });\n\n                        snackBar.enqueueSnackbar(' 删除其他信息成功', {\n                            variant: 'success',\n                        });\n                    }),\n                ).subscribe({\n                    error: (err) => {\n                        console.error('fail to fetch others list', err);\n                        snackBar.enqueueSnackbar(' 删除其他信息失败', {\n                            variant: 'error',\n                        });\n                    },\n                });\n            },\n        });\n    }\n\n    const cols: GridColDef[] = [\n        {\n            field: 'id',\n            headerName: '稿件Id',\n            sortable: false,\n            renderCell: (params: GridRenderCellParams) => {\n                return (\n                    <Link\n                        href={`/admin/others/detail/${params.value}`}\n                        color='primary'\n                    >\n                        {params.value}\n                    </Link>);\n            },\n        },\n        {\n            field: 'title',\n            headerName: '标题',\n            sortable: false,\n        },\n        {\n            field: 'type_id',\n            headerName: '类型',\n            sortable: false,\n        },\n        {\n            field: 'status',\n            headerName: '状态',\n            sortable: false,\n        },\n        {\n            field: 'read_cnt',\n            headerName: '阅读次数',\n            sortable: false,\n        },\n        {\n            field: 'created_time',\n            headerName: '创建时间',\n            sortable: false,\n        },\n        {\n            field: 'category',\n            headerName: '操作',\n            sortable: false,\n            renderCell: (params: GridRenderCellParams) => {\n                return (\n                    <>\n                        <IconButton component={Link} href={`/admin/others/detail/${params.row.id}`}>\n                            <EditIcon />\n                        </IconButton>\n                        <IconButton onClick={() => confirmDelete(params.row)}>\n                            <DeleteIcon />\n                        </IconButton>\n                    </>\n                );\n            },\n        },\n    ];\n\n    function pageChange(pageNumber: number): void {\n        setFilter((filter) => ({ ...filter, offset: pageNumber }));\n    }\n\n    function pageSizeChange(pageSize: number): void {\n        setFilter((filter) => ({ ...filter, limit: pageSize, offset: 0 }));\n    }\n\n    function createItem() {\n        history.push('/admin/others/create');\n    }\n\n    return (<Box sx={{ height: '100%', width: '100%', p: 1 }}>\n            <DataGrid\n                autoHeight\n                disableColumnMenu={true}\n                disableColumnFilter={true}\n                pagination\n                pageSize={filter.limit}\n                page={filter.offset}\n                rowCount={totalSize}\n                rowsPerPageOptions={[10, 20, 50, 100]}\n                onPageChange={pageChange}\n                onPageSizeChange={pageSizeChange}\n                components={{ Toolbar: QuickFilterToolbar }}\n                componentsProps={{\n                    toolbar: {\n                        value: filter.kw,\n                        setFilter,\n                    },\n                }}\n                columns={cols}\n                rows={dataSource}\n            />\n            <Fab\n                sx={{\n                    position: 'fixed',\n                    bottom: 16,\n                    right: 48,\n                }}\n                size='medium'\n                color='primary'\n                aria-label='add'\n                onClick={createItem}\n            >\n                <AddIcon />\n            </Fab>\n            <ConfirmDeleteDialog {...deleteDialog} />\n            <Portal channel={CHANNEL_APP_BAR_TITLE}>\n                其他\n            </Portal>\n        </Box>\n    );\n};\n","import React, { ChangeEvent, useEffect, useState } from 'react';\nimport {\n    Box,\n    Button,\n    Grid,\n    Paper,\n    TextField,\n    Typography,\n    ImageList,\n    ImageListItem,\n    MenuItem,\n} from '@mui/material';\nimport { Article } from '../../../models';\nimport { CKEditor } from '@ckeditor/ckeditor5-react';\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\nimport { ActionService, ArticleDataService, FileUploadService } from '../../../services';\nimport { UploadAdaptorPlugin } from '../../../components/form/upload-adaptor-plugin';\nimport { switchMap } from 'rxjs';\nimport { useHistory } from 'react-router';\nimport { useSnackbar } from 'notistack';\n\nexport const EditForm: React.FC<{ detail: Article }> = ({\n                                                            detail,\n                                                        }) => {\n    const [formDetail, setFormDetail] = useState<Article>(detail);\n    const history = useHistory();\n    const snackBar = useSnackbar();\n\n    useEffect(() => {\n        const saveAction = ActionService.handleAction('save').pipe(switchMap(() => {\n            return !formDetail.id ? ArticleDataService.creat({\n                category: 3,\n                content: formDetail.content,\n                summary: formDetail.summary,\n                title: formDetail.title,\n                type_id: formDetail.type_id,\n                covers: formDetail.covers.map(x => x.img),\n            }) : ArticleDataService.edit({\n                content: formDetail.content,\n                id: formDetail.id,\n                summary: formDetail.summary,\n                title: formDetail.title,\n                type_id: formDetail.type_id,\n                covers: formDetail.covers.map(x => x.img),\n            });\n        })).subscribe({\n            next: () => {\n                history.push('/admin/others');\n            }, error: (err) => {\n                console.error('fail to save others', err);\n                snackBar.enqueueSnackbar(' 保存其他信息失败', {\n                    variant: 'error',\n                });\n            },\n        });\n\n        return () => {\n            saveAction.unsubscribe();\n        };\n    }, [formDetail, snackBar, history]);\n\n    function updateInputValue(key: string): (e: ChangeEvent<HTMLInputElement>) => void {\n        return (e) => {\n            const value = e.target.value;\n            setFormDetail((state) => ({\n                ...state,\n                [key]: value,\n            }));\n        };\n    }\n\n    function handleCoverUpload(e) {\n        const files = e.target.files;\n        if (files && files.length > 0) {\n            const formData = new FormData();\n            formData.append('file', files[0]);\n\n            FileUploadService.postImage(formData).subscribe({\n                next: (resp) => {\n                    setFormDetail((state) => {\n                        const covers = state.covers ?? [];\n                        covers.push({\n                            id: -Math.ceil(Math.random() * 1000),\n                            article_id: formDetail.id,\n                            img: resp.data.url,\n                        });\n\n                        return {\n                            ...state,\n                            covers,\n                        };\n                    });\n                }, error: (err) => {\n                    console.error('fail to upload cover', err);\n                    snackBar.enqueueSnackbar(' 上传封面失败', {\n                        variant: 'error',\n                    });\n                },\n            });\n        }\n    }\n\n    function handleContentUpdate(event, editor): void {\n        const rawContent = editor.getData();\n\n        setFormDetail((state) => ({\n            ...state,\n            content: rawContent,\n        }));\n        console.log('editor update >>>', rawContent);\n    }\n\n    function clearSelectedFile(e) {\n        e.target.value = null;\n    }\n\n    return <Box sx={{ '& .MuiTextField-root': { mt: 1, mb: 1 } }} component='form'>\n        <Grid container>\n            <Grid item xs={12}>\n                <TextField\n                    select\n                    sx={{ minWidth: '200px', mr: 1 }}\n                    id='other-category-root'\n                    label='类型'\n                    value={'0'}\n                    SelectProps={{\n                        readOnly: true,\n                    }}\n                >\n                    <MenuItem key='0' value='0'>\n                        其他\n                    </MenuItem>\n                </TextField>\n            </Grid>\n            <Grid item xs={12}>\n                <TextField fullWidth label='标题' defaultValue={formDetail.title} onChange={updateInputValue('title')} />\n            </Grid>\n            <Grid item xs={12}>\n                <TextField fullWidth label='摘要' rows='4' defaultValue={formDetail.summary}\n                           onChange={updateInputValue('summary')} />\n            </Grid>\n            <Grid item xs={12}>\n                <Paper sx={{ mt: 1, p: 1, width: '100%' }} variant='outlined'>\n                    <Grid container>\n                        <Grid item xs={1}>\n                            <Typography variant='subtitle1'>封面</Typography>\n                        </Grid>\n                        <Grid item container xs justifyContent='flex-end'>\n                            <label htmlFor='upload-cover'>\n                                <input style={{ display: 'none' }} accept='image/*' id='upload-cover' type='file'\n                                       onChange={handleCoverUpload} onClick={clearSelectedFile} />\n                                <Button variant='contained' component='span'>\n                                    添加封面\n                                </Button>\n                            </label>\n                        </Grid>\n                        <Grid item xs={12}>\n                            <ImageList sx={{ minHeight: '160px', width: '100%' }} cols={5} rowHeight={164}>\n                                {formDetail.covers?.map((item) => (\n                                    <ImageListItem key={item.id}>\n                                        <img\n                                            src={`${item.img}`}\n                                            srcSet={`${item.img}`}\n                                            loading='lazy'\n                                            alt={''}\n                                        />\n                                    </ImageListItem>\n                                )) ?? <div />}\n                            </ImageList>\n                        </Grid>\n                    </Grid>\n                </Paper>\n            </Grid>\n            <Grid item container xs={12}>\n                <Paper sx={{ mt: 1, p: 1, width: '100%' }} variant='outlined'>\n                    <Grid container>\n                        <Grid item xs={1}>\n                            <Typography variant='subtitle1'>内容</Typography>\n                        </Grid>\n                        <Grid item\n                              sx={{\n                                  height: '420px',\n                                  '& .ck-editor__main, & .ck-content': { height: '380px' },\n                              }}\n                              xs={12}>\n                            <CKEditor\n                                config={{\n                                    extraPlugins: [UploadAdaptorPlugin],\n                                }}\n                                editor={ClassicEditor}\n                                data={formDetail.content}\n                                onChange={handleContentUpdate}\n                            />\n                        </Grid>\n                    </Grid>\n                </Paper>\n            </Grid>\n        </Grid>\n    </Box>;\n};","import React, { useEffect, useState } from 'react';\nimport { Article } from '../../../models';\nimport { useHistory, useRouteMatch } from 'react-router';\nimport { ActionService, ArticleDataService } from '../../../services';\nimport { Button, Grid } from '@mui/material';\n\nimport { EditForm } from '../components/edit-form';\nimport { ActionMenu } from '../../../components/form/action-menu';\nimport { useSnackbar } from 'notistack';\nimport { switchMap } from 'rxjs';\n\nexport const OtherDetail: React.FC = (props) => {\n    const [detail, setDetail] = useState<Article>(\n        {\n            id: 0,\n            category: 3,\n            content: '',\n            covers: [],\n            read_cnt: 0,\n            status: 0,\n            summary: '',\n            title: '',\n            type: [],\n            type_id: 0,\n            created_at: '',\n            updated_at: '',\n        },\n    );\n\n    const snackBar = useSnackbar();\n    const history = useHistory();\n    const { params } = useRouteMatch<{ id: string }>();\n    const { id } = params;\n\n    useEffect(() => {\n        let actionSubscription = id ? [\n            ArticleDataService.getDetail(parseInt(id)).subscribe({\n                next: (resp) => setDetail(resp.data.info), error: (err) => {\n                    console.error('fail to fetch others detail', err);\n                    snackBar.enqueueSnackbar(' 获取其他详细信息失败', {\n                        variant: 'error',\n                    });\n                },\n            }),\n            ActionService.handleAction('withdraw').pipe(\n                switchMap(() => ArticleDataService.withdraw(parseInt(id))),\n            ).subscribe({\n                next: () => {\n                    history.push('/admin/others');\n                    snackBar.enqueueSnackbar(' 撤稿成功', {\n                        variant: 'success',\n                    });\n                },\n                error: (err) => {\n                    console.error('fail to publish', err);\n                    snackBar.enqueueSnackbar(' 撤稿失败', {\n                        variant: 'error',\n                    });\n                },\n            }),\n\n            ActionService.handleAction('publish').pipe(\n                switchMap(() => ArticleDataService.publish(parseInt(id))),\n            ).subscribe({\n                next: () => {\n                    history.push('/admin/others');\n                    snackBar.enqueueSnackbar(' 发布成功', {\n                        variant: 'success',\n                    });\n                },\n                error: (err) => {\n                    console.error('fail to publish', err);\n                    snackBar.enqueueSnackbar(' 发布失败', {\n                        variant: 'error',\n                    });\n                },\n            }),\n        ] : [];\n\n        return () => {\n            if (actionSubscription.length > 0) {\n                for (const subscription of actionSubscription) {\n                    subscription.unsubscribe();\n                }\n            }\n        };\n    }, [id, snackBar, history]);\n\n    function goBack() {\n        history.goBack();\n    }\n\n    return <Grid container spacing={2} sx={{ pr: 2, pl: 1 }}>\n        <Grid container item xs={12}>\n            <Grid item xs={1} sx={{ pl: 1 }}>\n                <Button variant='outlined' onClick={goBack}>返回</Button>\n            </Grid>\n            <Grid item container justifyContent='flex-end' xs>\n                <ActionMenu status={detail?.status} isCreate={detail?.id === 0} />\n            </Grid>\n        </Grid>\n        <Grid item xs={12}>\n            <EditForm detail={detail} />\n        </Grid>\n    </Grid>;\n};","import { Grid, IconButton, MenuItem, TextField } from '@mui/material';\nimport SearchIcon from '@mui/icons-material/Search';\nimport ClearIcon from '@mui/icons-material/Clear';\nimport React from 'react';\n\nexport const categoryList = {\n    0: '产品类型',\n    1: '应用类型',\n    2: '新闻类型',\n    3: '其他类型',\n};\n\nexport const FilterToolbar: React.FC<{ filter, setFilter }> = ({ filter, setFilter }) => {\n    function handleFilterTypeChange(e) {\n        setFilter({\n            limit: filter.limit,\n            offset: 0,\n            category: e.target.value,\n            kw: '',\n        });\n    }\n\n    function handleKWChange(e) {\n        setFilter((state) => ({\n            ...state,\n            offset: 0,\n            kw: e.target?.value ?? '',\n        }));\n    }\n\n    return <Grid container spacing={1} sx={{ m: 1 }}>\n        <Grid item xs={2}>\n            <TextField\n                select\n                fullWidth\n                id='category-filter'\n                label='类型'\n                value={filter.category}\n                onChange={handleFilterTypeChange}\n            >\n                {\n                    Object.entries(categoryList).map(([key, value]) => {\n                        return <MenuItem key={`category-${key}`} value={parseInt(key)}>\n                            {value}\n                        </MenuItem>;\n                    })\n                }\n            </TextField>\n        </Grid>\n        <Grid item xs={3} sx={{ display: 'flex', alignItems: 'center' }}>\n            <TextField\n                variant='standard'\n                value={filter.kw}\n                onChange={handleKWChange}\n                placeholder='关键字查找'\n                InputProps={{\n                    startAdornment: <SearchIcon fontSize='small' />,\n                    endAdornment: (\n                        <IconButton\n                            title='Clear'\n                            aria-label='Clear'\n                            size='small'\n                            style={{ visibility: filter.kw ? 'visible' : 'hidden' }}\n                            onClick={handleKWChange}\n                        >\n                            <ClearIcon fontSize='small' />\n                        </IconButton>\n                    ),\n                }}\n            />\n        </Grid>\n    </Grid>;\n};\n","import React, { useState } from 'react';\nimport { ArticleType } from '../../../models';\nimport {\n    Button,\n    Dialog,\n    DialogActions,\n    DialogContent,\n    DialogTitle,\n    MenuItem,\n    TextField,\n} from '@mui/material';\n\nexport interface CategoryDetailDialogProps {\n    category: number,\n    title: string,\n    typeList: ArticleType[],\n    open: boolean,\n    typeDetail?: ArticleType,\n    onSave?: (form: ArticleType) => void,\n    onClose?: () => void\n}\n\nexport const CategoryDetailDialog: React.FC<CategoryDetailDialogProps> = ({\n                                                                              category,\n                                                                              title,\n                                                                              open,\n                                                                              typeList,\n                                                                              onSave,\n                                                                              onClose,\n                                                                              typeDetail,\n                                                                          }) => {\n    const [formDetail, setFormDetail] = useState<ArticleType>(typeDetail);\n\n    function handleClose() {\n        onClose && onClose();\n    }\n\n    function handleSubmit() {\n        onSave && onSave(formDetail);\n    }\n\n    function handleNameChange(e) {\n        setFormDetail((state) => ({\n            ...state,\n            name: e.target.value,\n        }));\n    }\n\n    function handleParentIdChange(e) {\n        setFormDetail((state) => ({\n            ...state,\n            parent_id: e.target.value,\n        }));\n    }\n\n    return <Dialog open={open}>\n        <DialogTitle>`新增${title}`</DialogTitle>\n        <DialogContent>\n            <TextField\n                autoFocus\n                required\n                margin='dense'\n                id='name'\n                label='名称'\n                type='text'\n                value={formDetail.name}\n                fullWidth\n                onChange={handleNameChange}\n            />\n            {category === 0 &&\n            <TextField\n                select\n                autoFocus\n                margin='dense'\n                id='parent_id'\n                label='父级类型'\n                type='text'\n                value={formDetail.parent_id}\n                fullWidth\n                onChange={handleParentIdChange}\n                SelectProps={{\n                    readOnly: formDetail.id >= 0,\n                }}\n            >\n                <MenuItem key='empty' value={null}>\n                    无\n                </MenuItem>\n                {\n                    typeList.map(x => {\n                        return <MenuItem key={x.id} value={x.id}>\n                            {x.name}\n                        </MenuItem>;\n                    })\n                }\n            </TextField>\n            }\n        </DialogContent>\n        <DialogActions>\n            <Button onClick={handleClose}>Cancel</Button>\n            <Button onClick={handleSubmit}>Subscribe</Button>\n        </DialogActions>\n    </Dialog>;\n\n};","import React, { useEffect, useState } from 'react';\nimport { DataGrid, GridColDef, GridRenderEditCellParams } from '@mui/x-data-grid';\n\nimport { ArticleTypeDataService } from '../../services';\nimport { ArticleType, ArticleFilter } from '../../models';\nimport { Box, Fab, IconButton } from '@mui/material';\nimport AddIcon from '@mui/icons-material/Add';\nimport EditIcon from '@mui/icons-material/Edit';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport { categoryList, FilterToolbar } from './components/filter-toolbar';\nimport { CategoryDetailDialog, CategoryDetailDialogProps } from './components/category-detail-dialog';\nimport { ConfirmDeleteDialog, ConfirmDeleteDialogProps } from '../../components/dialog/confirm-delete-dialog';\nimport { tap } from 'rxjs';\nimport { CHANNEL_APP_BAR_TITLE, Portal } from '../../components/portal';\n\n\nexport const Settings = () => {\n    const [filter, setFilter] = useState<ArticleFilter>({ kw: '', limit: 20, offset: 0, category: 0 });\n    const [dataSource, setDataSource] = useState<ArticleType[]>([]);\n    const [detailDialog, setDetailDialog] = useState<CategoryDetailDialogProps>({\n        open: false, category: -1, typeList: [], title: '',\n    });\n    const [deleteDialog, setDeleteDialog] = useState<ConfirmDeleteDialogProps>({\n        open: false,\n    });\n\n    useEffect(() => {\n        const typeListSubscription = ArticleTypeDataService.getList(filter.category).subscribe(({ errcode, data }) => {\n            if (errcode === 0) {\n                setDataSource(data.list);\n            } else {\n                // TODO: Notify user error\n            }\n        });\n\n        return () => {\n            typeListSubscription.unsubscribe();\n        };\n    }, [filter.category]);\n\n    function deleteItem(item: ArticleType) {\n        setDeleteDialog({\n            open: true, message: `确认删除\"${item.name}\"?`,\n            onClose(): void {\n                setDeleteDialog({ open: false });\n            },\n            onConfirm(): void {\n                ArticleTypeDataService.delete(item.id).pipe(\n                    tap(() => {\n                        setFilter({ ...filter });\n                        setDeleteDialog({ open: false });\n                    }),\n                ).subscribe();\n            },\n        });\n\n    }\n\n    const cols: GridColDef[] = [\n        {\n            field: 'id',\n            headerName: '类型Id',\n            sortable: false,\n        },\n        {\n            field: 'name',\n            headerName: '名称',\n            sortable: false,\n        },\n        {\n            field: 'parent_id',\n            headerName: '父类型id',\n            sortable: false,\n        },\n        {\n            field: 'category',\n            headerName: '操作',\n            sortable: false,\n            renderCell: (params: GridRenderEditCellParams) => {\n                return (\n                    <>\n                        <IconButton onClick={() => editItemDialog(params.row)}>\n                            <EditIcon />\n                        </IconButton>\n                        <IconButton onClick={() => deleteItem(params.row)}>\n                            <DeleteIcon />\n                        </IconButton>\n                    </>\n                );\n            },\n        },\n    ];\n\n    function pageChange(pageNumber: number): void {\n        setFilter((filter) => ({ ...filter, offset: pageNumber }));\n    }\n\n    function pageSizeChange(pageSize: number): void {\n        setFilter((filter) => ({ ...filter, limit: pageSize, offset: 0 }));\n    }\n\n    const filterData = () => {\n        let result = dataSource;\n        if (filter.kw) {\n            result = dataSource.filter(x => x.name.includes(filter.kw));\n        }\n\n        const step = filter.offset * filter.limit;\n        return result.filter((x, i) => i >= step && i < (step + filter.limit));\n    };\n\n    function closeDetailDialog() {\n        setDetailDialog((state) => ({\n            ...state,\n            onSave: null,\n            onClose: null,\n            open: false,\n        }));\n    }\n\n    function createItem(newForm: ArticleType) {\n        ArticleTypeDataService.creat({\n            category: newForm.category,\n            name: newForm.name,\n            parent_id: newForm.parent_id,\n        }).subscribe();\n    }\n\n    function saveItem(newForm: ArticleType) {\n        ArticleTypeDataService.edit({\n            id: newForm.id,\n            name: newForm.name,\n        }).subscribe();\n    }\n\n    function editItemDialog(item: ArticleType) {\n        setDetailDialog({\n            open: true,\n            title: `编辑${categoryList[filter.category]}`,\n            category: filter.category,\n            typeList: dataSource,\n            onClose: closeDetailDialog,\n            onSave: saveItem,\n            typeDetail: item,\n        });\n    }\n\n    function newItemDialog() {\n        setDetailDialog({\n            open: true,\n            title: `新增${categoryList[filter.category]}`,\n            category: filter.category,\n            typeList: dataSource,\n            onClose: closeDetailDialog,\n            onSave: createItem,\n            typeDetail: {\n                id: -1,\n                name: '',\n                parent_id: null,\n                category: filter.category,\n            },\n        });\n    }\n\n    return (\n        <Box sx={{ height: '100%', width: '100%', p: 1 }}>\n            <DataGrid\n                autoHeight\n                disableColumnMenu={true}\n                disableColumnFilter={true}\n                pagination\n                pageSize={filter.limit}\n                page={filter.offset}\n                rowCount={dataSource.length}\n                rowsPerPageOptions={[10, 20, 50, 100]}\n                onPageChange={pageChange}\n                onPageSizeChange={pageSizeChange}\n                components={{ Toolbar: FilterToolbar }}\n                componentsProps={{\n                    toolbar: {\n                        filter,\n                        setFilter,\n                    },\n                }}\n                columns={cols}\n                rows={filterData()}\n            />\n            <Fab\n                sx={{\n                    position: 'fixed',\n                    bottom: 16,\n                    right: 48,\n                }}\n                size='medium'\n                color='primary'\n                aria-label='add'\n                onClick={newItemDialog}\n            >\n                <AddIcon />\n            </Fab>\n            <CategoryDetailDialog {...detailDialog} />\n            <ConfirmDeleteDialog {...deleteDialog} />\n\n            <Portal channel={CHANNEL_APP_BAR_TITLE}>\n                 类型设置\n            </Portal>\n        </Box>\n    );\n};\n","import { Box } from '@mui/material';\nimport React from 'react';\n\nexport const PublicLayout: React.FC = (props) => {\n    return <Box\n        sx={{\n            marginTop: 8,\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'center',\n        }}\n    >\n        {props.children}\n    </Box>;\n};","import React, { useMemo, useState } from \"react\";\nimport {\n    Avatar,\n    Box,\n    Button,\n    Container,\n    TextField,\n    Typography,\n} from '@mui/material';\n\nimport LockOutlinedIcon from '@mui/icons-material/LockOutlined';\nimport { LoginService } from '../../services';\n\nexport const Login = () => {\n    const [codeState, setCodeState] = useState(new Date().valueOf());\n    const [loginForm, setLoginForm] = useState({\n        email: '',\n        password: '',\n        code: '',\n    });\n\n    function handleSubmit() {\n        LoginService.signIn(loginForm);\n    }\n\n    function updatedFormValue(key) {\n        return (e) => setLoginForm((state) => ({\n            ...state,\n            [key]: e.target.value,\n        }));\n    }\n\n    function refreshCode(): void {\n        setCodeState(new Date().valueOf());\n    }\n    const codeUrl = useMemo(() => {\n        return `/verify/code${codeState}`;\n    }, [codeState]);\n\n    return (\n        <Container maxWidth='xs'>\n            <Box\n                sx={{\n                    marginTop: 8,\n                    display: 'flex',\n                    flexDirection: 'column',\n                    alignItems: 'center',\n                }}\n            >\n                <Avatar sx={{ m: 1, bgcolor: 'secondary.main' }}>\n                    <LockOutlinedIcon />\n                </Avatar>\n                <Typography component='h1' variant='h5'>\n                    登录\n                </Typography>\n                <Box component='form' onSubmit={handleSubmit} noValidate sx={{ mt: 1 }}>\n                    <TextField\n                        margin='normal'\n                        required\n                        fullWidth\n                        id='email'\n                        label='电子邮箱'\n                        name='email'\n                        autoComplete='email'\n                        autoFocus\n                        value={loginForm.email}\n                        onChange={updatedFormValue('email')}\n                    />\n                    <TextField\n                        margin='normal'\n                        required\n                        fullWidth\n                        name='password'\n                        label='密码'\n                        type='password'\n                        id='password'\n                        autoComplete='current-password'\n                        value={loginForm.password}\n                        onChange={updatedFormValue('password')}\n                    />\n                    <TextField\n                        margin='normal'\n                        required\n                        fullWidth\n                        name='code'\n                        label='验证码'\n                        id='code'\n                        value={loginForm.code}\n                        onChange={updatedFormValue('code')}\n                        InputProps={{\n                            endAdornment: <img src={codeUrl} onClick={refreshCode} alt='验证码' />,\n                        }}\n                    />\n                    <Button\n                        type='submit'\n                        fullWidth\n                        variant='contained'\n                        sx={{ mt: 3, mb: 2 }}\n                    >\n                        登录\n                    </Button>\n                </Box>\n            </Box>\n        </Container>\n    );\n};","import React from 'react';\nimport { Box } from '@mui/material';\nimport { Route, Switch } from 'react-router-dom';\nimport { AuthLayout } from '../layout';\nimport { Products } from '../pages/products';\nimport { ProductDetail } from '../pages/products/detail';\nimport { Applications } from '../pages/applications';\nimport { ApplicationDetail } from '../pages/applications/detail';\nimport { News } from '../pages/news';\nimport { NewsDetail } from '../pages/news/detail';\nimport { Others } from '../pages/others';\nimport { OtherDetail } from '../pages/others/detail';\nimport { Settings } from '../pages/settings';\nimport { PublicLayout } from '../layout/public-layout';\nimport { Login } from '../pages/login';\n\nexport const RouterConfig = () => {\n    return (\n        <Box>\n            <PublicLayout>\n                <Switch>\n                    <Route path={'/admin/login'} exact={true}>\n                        <Login />\n                    </Route>\n                </Switch>\n            </PublicLayout>\n            <AuthLayout>\n                <Switch>\n                    <Route path={'/admin/settings'} exact={true}>\n                        <Settings />\n                    </Route>\n                    <Route path={'/admin/products'} exact={true}>\n                        <Products />\n                    </Route>\n                    <Route path={'/admin/products/create'} exact={true}>\n                        <ProductDetail />\n                    </Route>\n                    <Route path={'/admin/products/detail/:id'} exact={true}>\n                        <ProductDetail />\n                    </Route>\n                    <Route path={'/admin/applications'} exact={true}>\n                        <Applications />\n                    </Route>\n                    <Route path={'/admin/applications/create'} exact={true}>\n                        <ApplicationDetail />\n                    </Route>\n                    <Route path={'/admin/applications/detail/:id'} exact={true}>\n                        <ApplicationDetail />\n                    </Route>\n                    <Route path={'/admin/news'} exact={true}>\n                        <News />\n                    </Route>\n                    <Route path={'/admin/news/create'} exact={true}>\n                        <NewsDetail />\n                    </Route>\n                    <Route path={'/admin/news/detail/:id'} exact={true}>\n                        <NewsDetail />\n                    </Route>\n                    <Route path={'/admin/others'} exact={true}>\n                        <Others />\n                    </Route>\n                    <Route path={'/admin/others/create'} exact={true}>\n                        <OtherDetail />\n                    </Route>\n                    <Route path={'/admin/others/detail/:id'} exact={true}>\n                        <OtherDetail />\n                    </Route>\n                </Switch>\n            </AuthLayout>\n        </Box>\n    );\n};\n","import React from 'react';\nimport { CssBaseline, ThemeProvider } from '@mui/material';\nimport theme from './theme';\nimport { RouterConfig } from './route';\n\nexport const App = (props) => {\n    return (\n        <ThemeProvider theme={theme}>\n            <CssBaseline />\n            <RouterConfig />\n        </ThemeProvider>\n    );\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { App } from \"./App\";\nimport { loadCSRFToken } from \"./utils\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\nif (process.env.NODE_ENV !== \"production\") {\n  // const worker = require('./mocks').default\n  // worker.start()\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n  reportWebVitals();\n}\n\n/**\n * Next we will register the CSRF Token as a common header with Axios so that\n * all outgoing HTTP requests automatically have it attached. This is just\n * a simple convenience so we don't have to attach every token manually.\n */\nlet token: HTMLInputElement = document.body.querySelector(\"input[name=\\\"_token\\\"]\");\n\nif (token) {\n  loadCSRFToken(token.value);\n} else {\n  console.error(\"CSRF token not found: https://laravel.com/docs/csrf#csrf-x-csrf-token\");\n}\n"],"sourceRoot":""}