{"version":3,"sources":["theme/index.ts","services/loading-state-service.ts","utils/request.ts","services/article-data-service.ts","services/article-type-data-service.ts","services/file-upload-service.ts","services/action-service.ts","services/login-service.tsx","services/portal-message-service.ts","services/user-service.ts","components/portal/index.tsx","layout/app-bar.tsx","layout/menu.tsx","layout/auth-layout.tsx","layout/public-layout.tsx","components/table/quick-filter-toolbar.tsx","components/dialog/confirm-delete-dialog.tsx","pages/products/index.tsx","components/form/upload-adaptor-plugin.ts","pages/products/components/edit-form.tsx","components/form/action-menu.tsx","pages/products/detail/index.tsx","pages/applications/index.tsx","pages/applications/components/edit-form.tsx","pages/applications/detail/index.tsx","pages/news/index.tsx","pages/news/components/edit-form.tsx","pages/news/detail/index.tsx","pages/others/index.tsx","pages/others/components/edit-form.tsx","pages/others/detail/index.tsx","pages/settings/components/filter-toolbar.tsx","pages/settings/components/category-detail-dialog.tsx","pages/settings/index.tsx","pages/login/index.tsx","route/index.tsx","App.tsx","index.tsx"],"names":["theme","createTheme","palette","primary","main","secondary","error","red","A400","zhCN","coreZhCN","loadingSubject","BehaviorSubject","loading","this","next","asObservable","axiosInstance","axios","create","timeout","headers","withCredentials","request","url","method","config","of","pipe","tap","LoadingStateService","setLoading","mergeMap","Object","assign","map","resp","data","catchError","throwError","finalize","postFormData","post","getList","params","getDetail","id","edit","delete","publish","withdraw","category","creat","postImage","form","postVideo","actionSubject","Subject","save","handleAction","action","filter","x","signIn","email","password","code","encryptPwd","MD5","toString","signOut","_portalMessageSubject","message","type","body","getUserInfo","Portal","children","channel","useEffect","PortalMessageService","CHANNEL_APP_BAR_TITLE","StyleAppBar","styled","MuiAppBar","shouldForwardProp","prop","open","zIndex","drawer","transition","transitions","easing","sharp","duration","leavingScreen","marginLeft","enteringScreen","AppBar","toggleDrawer","useState","title","setTitle","titleSubscription","onMessage","subscribe","newTitle","unsubscribe","position","Toolbar","sx","pr","IconButton","edge","color","onClick","marginRight","Typography","component","variant","noWrap","flexGrow","Button","LoginService","window","location","reload","openedMixin","width","marginTop","overflowX","DrawerHeader","display","alignItems","justifyContent","padding","spacing","mixins","toolbar","Drawer","MuiDrawer","flexShrink","whiteSpace","boxSizing","breakpoints","up","closedMixin","AppMenu","Divider","List","to","ListItem","ListItemIcon","ListItemText","AuthLayout","openDrawer","setOpenDrawer","Box","height","overflow","flexDirection","Container","maxWidth","Paper","mt","mb","PublicLayout","props","InlineSearchBox","flexWrap","down","borderBottom","divider","filterSubject","QuickFilterToolbar","inputRef","useRef","filterSubscription","debounceTime","value","setFilter","kw","offset","TextField","defaultValue","onChange","e","target","placeholder","InputProps","startAdornment","fontSize","endAdornment","size","style","visibility","current","ConfirmDeleteDialog","onClose","onConfirm","Dialog","DialogTitle","DialogContent","dividers","DialogContentText","DialogActions","autoFocus","Products","limit","dataSource","setDataSource","totalSize","setTotalSize","deleteDialog","setDeleteDialog","history","useHistory","snackBar","useSnackbar","ArticleDataService","errcode","list","total","console","enqueueSnackbar","err","cols","field","headerName","sortable","renderCell","flex","row","name","Link","item","p","autoHeight","disableColumnMenu","disableColumnFilter","pagination","pageSize","page","rowCount","rowsPerPageOptions","onPageChange","pageNumber","onPageSizeChange","components","componentsProps","columns","rows","Fab","bottom","right","push","MyUploadAdapter","loader","_uploadTask","upload","formData","FormData","file","then","append","lastValueFrom","FileUploadService","default","catch","abort","UploadAdaptorPlugin","editor","plugins","get","createUploadAdapter","EditForm","detail","formDetail","setFormDetail","categoryList","setCategoryList","selectedRootCategory","setSelectedRootCategory","ArticleTypeDataService","type_id","find","parent_id","saveAction","ActionService","switchMap","content","summary","covers","img","errmessage","updateInputValue","key","state","Grid","container","xs","select","minWidth","mr","label","targetCategory","MenuItem","fullWidth","htmlFor","accept","files","length","Math","ceil","random","article_id","ImageList","minHeight","rowHeight","index","ImageListItem","src","srcSet","alt","ImageListItemBar","actionPosition","actionIcon","coverIndex","splice","extraPlugins","ClassicEditor","event","rawContent","getData","log","ActionMenu","status","isCreate","anchorEl","setAnchorEl","closeMenu","handleSave","undefined","disableElevation","currentTarget","endIcon","anchorOrigin","vertical","horizontal","transformOrigin","MenuListProps","PaperProps","ProductDetail","read_cnt","created_at","updated_at","setDetail","useRouteMatch","actionSubscription","parseInt","info","pl","goBack","Applications","ApplicationDetail","News","NewsDetail","Others","SelectProps","readOnly","OtherDetail","FilterToolbar","handleKWChange","m","entries","CategoryDetailDialog","typeList","onSave","typeDetail","required","margin","Settings","detailDialog","setDetailDialog","Date","valueOf","fetchFlag","setFetchFlag","typeListSubscription","closeDetailDialog","saveItem","filterData","result","includes","step","i","saveObserver","createItem","newForm","paginationMode","Login","codeState","setCodeState","loginForm","setLoginForm","errorForm","setErrorForm","snakeBar","updatedFormValue","codeUrl","useMemo","Avatar","bgcolor","onSubmit","preventDefault","newState","noValidate","autoComplete","helperText","RouterConfig","auth","setAuth","useInfoSubscription","UserService","overflowY","path","exact","App","ThemeProvider","CssBaseline","maxSnack","ReactDOM","render","StrictMode","document","getElementById","token","querySelector","defaults","common","loadCSRFToken"],"mappings":"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","file":"static/js/main.a8e421b2.chunk.js","sourcesContent":["import {red} from '@mui/material/colors';\nimport {createTheme} from '@mui/material/styles';\nimport { zhCN } from '@mui/x-data-grid'\nimport { zhCN as coreZhCN } from '@mui/material/locale'\n\n// A custom theme for this app\nconst theme = createTheme({\n        palette: {\n            primary: {\n                main: '#556cd6',\n            },\n            secondary: {\n                main: '#19857b',\n            },\n            error: {\n                main: red.A400,\n            },\n        },\n    },\n    zhCN,\n    coreZhCN\n);\n\nexport default theme;","import { BehaviorSubject, Observable } from 'rxjs'\n\nclass LoadingStateService {\n    loadingSubject = new BehaviorSubject(false)\n\n    setLoading(loading: boolean) {\n        this.loadingSubject.next(loading)\n    }\n\n    subscribe(): Observable<boolean> {\n        return this.loadingSubject.asObservable()\n    }\n}\n\nexport default new LoadingStateService()","import { catchError, finalize, map, mergeMap, of, tap, throwError } from 'rxjs';\nimport axios, { AxiosRequestConfig, AxiosResponse, Method } from 'axios';\nimport { LoadingStateService } from '../services';\n\nconst defaultRequestConfig = {\n    'Content-Type': 'application/json; charset=utf-8',\n    'X-Requested-With': 'XMLHttpRequest',\n};\n\nconst axiosInstance = axios.create({\n    timeout: 6000,\n    headers: defaultRequestConfig,\n    withCredentials: true,\n});\n\nexport function loadCSRFToken(token) {\n    axiosInstance.defaults.headers.common['X-CSRF-TOKEN'] = token;\n}\n\nexport const request = <T>(url: string, method: Method, config: AxiosRequestConfig = {}) => {\n    return of({}).pipe(\n        tap(() => LoadingStateService.setLoading(true)),\n        mergeMap(() =>\n            axiosInstance.request<T>(\n                Object.assign({}, config, {\n                    url,\n                    method,\n                })\n            )\n        ),\n        map((resp) => resp.data),\n        catchError((error) => {\n            return throwError(error);\n        }),\n        finalize(() => LoadingStateService.setLoading(false))\n    );\n};\n\nexport const postFormData = <T>(\n    url: string,\n    data: FormData,\n    config: AxiosRequestConfig = {\n        headers: {\n            'Content-Type': 'multipart/form-data',\n        },\n    }\n) => {\n    return of({}).pipe(\n        tap(() => LoadingStateService.setLoading(true)),\n        mergeMap(() => axios.post<FormData, AxiosResponse<T>>(url, data, config)),\n        map((resp) => resp.data),\n        catchError((error) => {\n            return throwError(error);\n        }),\n        finalize(() => LoadingStateService.setLoading(false))\n    );\n};\n","import { request } from '../utils';\nimport {\n    ArticleCreateRequest,\n    ArticleDetailResponse,\n    ArticleEditRequest,\n    ArticleFilter,\n    ArticleListResponse,\n    VoidResponse,\n} from '../models';\n\nclass ArticleDataService {\n    getList = (params: ArticleFilter) => {\n        return request<ArticleListResponse>(`/admin/article/list`, 'GET', {\n            params,\n        });\n    };\n\n    getDetail = (id: number) => {\n        return request<ArticleDetailResponse>(`/admin/article/info`, 'GET', {\n            params: {\n                id,\n            },\n        });\n    };\n\n    create = (data: ArticleCreateRequest) => {\n\n        return request<VoidResponse>(`/admin/article/add`, 'POST', {\n            data,\n        });\n    };\n    edit = (data: ArticleEditRequest) => {\n        return request<VoidResponse>(`/admin/article/edit`, 'POST', {\n            data,\n        });\n    };\n\n    delete = (id: number) => {\n        return request<void>(`/admin/article/del`, 'POST', {\n            data: {\n                id,\n            },\n        });\n    };\n\n    publish = (id: number) => {\n        return request<void>(`/admin/article/publish`, 'POST', {\n            params: {\n                id,\n            },\n        });\n    };\n    withdraw = (id: number) => {\n        return request<void>(`/admin/article/withdraw`, 'POST', {\n            params: {\n                id,\n            },\n        });\n    };\n}\n\nexport default new ArticleDataService();","import { request } from '../utils';\nimport { ArticleTypeCreateRequest, ArticleTypeEditRequest, ArticleTypeListResponse } from '../models';\n\nclass ArticleTypeDataService {\n    getList = (category: number) => {\n        return request<ArticleTypeListResponse>(`/admin/article/type/list`, 'GET', {\n            params: {\n                category,\n            },\n        });\n    };\n\n    creat = (data: ArticleTypeCreateRequest) => {\n        return request<void>(`/admin/article/type/add`, 'POST', {\n            data,\n        });\n    };\n    edit = (data: ArticleTypeEditRequest) => {\n        return request<void>(`/admin/article/type/edit`, 'POST', {\n            data,\n        });\n    };\n\n    delete = (id: number) => {\n        return request<void>(`/admin/article/type/del`, 'POST', {\n            data: {\n                id,\n            },\n        });\n    };\n}\n\nexport default new ArticleTypeDataService();","import { postFormData } from '../utils';\nimport { FileUploadResponse } from '../models';\nimport { Observable } from 'rxjs';\n\nclass FileUploadService {\n    postImage: (form: FormData) => Observable<FileUploadResponse> = (form) => {\n        return postFormData<FileUploadResponse>(`/admin/upload/image`, form);\n    }\n\n    postVideo = (form) => {\n        return postFormData<FileUploadResponse>(`/admin/upload/video`, form);\n    }\n}\n\nexport default new FileUploadService();","import { filter, Observable, Subject } from 'rxjs';\n\nclass ActionService {\n    private actionSubject = new Subject<string>();\n\n    save = (): void => {\n        this.actionSubject.next('save');\n    };\n\n    publish = (): void => {\n        this.actionSubject.next('publish');\n    };\n    withdraw = (): void => {\n        this.actionSubject.next('withdraw');\n    };\n\n    handleAction = (action: string): Observable<string> => {\n        return this.actionSubject.pipe(filter(x => x === action));\n    };\n}\n\nexport default new ActionService();","import { request } from '../utils';\nimport { LoginResponse } from '../models';\nimport MD5 from 'crypto-js/md5';\n\nclass LoginService {\n    signIn = ({ email, password, code }) => {\n        const encryptPwd = MD5(password).toString();\n\n        return request<LoginResponse>(`/admin/login`, 'POST', {\n            data: {\n                email,\n                password: encryptPwd,\n                code,\n            },\n        });\n    };\n    signOut = () => {\n        return request<void>(`/admin/logout`, 'GET');\n    };\n}\n\nexport default new LoginService();\n","import { BehaviorSubject, filter, map, Observable } from 'rxjs';\nimport { ReactElement, ReactNode } from 'react';\n\nclass PortalMessageService {\n    private _portalMessageSubject = new BehaviorSubject<{ type: string, body: ReactElement | ReactNode }>(null);\n\n    publish(message: { type: string, body: ReactElement | ReactNode }): void {\n        this._portalMessageSubject.next(message);\n    }\n\n    onMessage(type): Observable<ReactElement | ReactNode> {\n        return this._portalMessageSubject.pipe(filter(x => x?.type === type), map(x => x.body));\n    }\n}\n\nexport default new PortalMessageService();","import { request } from \"../utils\";\nimport { UserInfoResponse } from \"../models\";\n\nclass UserService {\n    getUserInfo = () => {\n        return request<UserInfoResponse>(`/admin/self/user/info`, \"GET\");\n    };\n}\n\nexport default new UserService();\n","import React, { useEffect } from 'react';\nimport { PortalMessageService } from '../../services';\n\nexport const Portal: React.FC<{ channel: string }> = ({ children, channel }) => {\n    useEffect(() => {\n        PortalMessageService.publish({\n            type: channel,\n            body: children,\n        });\n    }, [children, channel]);\n\n    return null;\n};\n\nexport const CHANNEL_APP_BAR_TITLE = 'appBarTitle';\n","import React, { useEffect, useState } from 'react';\nimport { Button, IconButton, styled, Toolbar, Typography } from '@mui/material';\nimport MuiAppBar, { AppBarProps as MuiAppBarProps } from '@mui/material/AppBar';\nimport MenuIcon from '@mui/icons-material/Menu';\nimport { LoginService, PortalMessageService } from '../services';\nimport { CHANNEL_APP_BAR_TITLE } from '../components/portal';\n\ninterface AppBarProps extends MuiAppBarProps {\n    open?: boolean;\n}\n\nconst StyleAppBar = styled(MuiAppBar, {\n    shouldForwardProp: (prop) => prop !== 'open',\n})<AppBarProps>(({ theme, open }) => ({\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create(['width', 'margin'], {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen,\n    }),\n    ...(open && {\n        marginLeft: '200px',\n        // width: `calc(100% - 240px)`,\n        transition: theme.transitions.create(['width', 'margin'], {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.enteringScreen,\n        }),\n    }),\n}));\n\nexport const AppBar: React.FC<{ open; toggleDrawer }> = ({ open, toggleDrawer }) => {\n    const [title, setTitle] = useState(null);\n\n    useEffect(() => {\n        const titleSubscription = PortalMessageService.onMessage(CHANNEL_APP_BAR_TITLE).subscribe((newTitle) => {\n            setTitle(newTitle);\n        });\n\n        return () => {\n            titleSubscription.unsubscribe();\n        };\n    }, []);\n\n    const handleSignOut = () => {\n        LoginService.signOut().subscribe({\n            next: () => {\n                window.location.reload();\n            }\n        });\n    }\n\n    return (\n        <StyleAppBar position='absolute' open={open}>\n            <Toolbar\n                sx={{\n                    pr: '24px', // keep right padding when drawer closed\n                }}>\n                <IconButton\n                    edge='start'\n                    color='inherit'\n                    aria-label='open drawer'\n                    onClick={toggleDrawer}\n                    sx={{\n                        marginRight: '36px',\n                        // ...(open && { display: 'none' }),\n                    }}>\n                    <MenuIcon />\n                </IconButton>\n                <Typography component='h1' variant='h6' color='inherit' noWrap sx={{ flexGrow: 1 }}>\n                    {title}\n                </Typography>\n\n                <Button onClick={handleSignOut} sx={{ color: '#fff' }} variant=\"text\">\n                    注销\n                </Button>\n            </Toolbar>\n        </StyleAppBar>\n    );\n};\n","import React from \"react\";\nimport {\n    Divider,\n    List, ListItem, ListItemIcon,\n    ListItemText,\n    styled\n} from \"@mui/material\";\nimport MuiDrawer from \"@mui/material/Drawer\";\nimport WidgetsIcon from '@mui/icons-material/Widgets';\nimport TrendingUpIcon from '@mui/icons-material/TrendingUp';\nimport AnalyticsIcon from '@mui/icons-material/Analytics';\nimport ApiIcon from '@mui/icons-material/Api';\nimport SettingsIcon from \"@mui/icons-material/Settings\";\nimport { Link } from \"react-router-dom\";\n\nconst drawerWidth = 200;\n\nconst openedMixin = (theme) => ({\n    width: drawerWidth,\n    marginTop: '64px',\n    transition: theme.transitions.create(\"width\", {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.enteringScreen\n    }),\n    overflowX: \"hidden\"\n});\n\nconst closedMixin = (theme) => ({\n    transition: theme.transitions.create(\"width\", {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen\n    }),\n    marginTop: '64px',\n    overflowX: \"hidden\",\n    width: `calc(${theme.spacing(6)} + 1px)`,\n    [theme.breakpoints.up(\"sm\")]: {\n        width: `calc(${theme.spacing(7)} + 1px)`\n    }\n});\n\nexport const DrawerHeader = styled(\"div\")(({ theme }) => ({\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"flex-end\",\n    padding: theme.spacing(-1, 1),\n    // necessary for content to be below app bar\n    ...theme.mixins.toolbar\n}));\n\nconst Drawer = styled(MuiDrawer)(\n  ({ theme, open }) => ({\n      width: drawerWidth,\n      flexShrink: 0,\n      whiteSpace: \"nowrap\",\n      boxSizing: \"border-box\",\n      ...(open && {\n          width: drawerWidth,\n          transition: theme.transitions.create(\"width\", {\n              easing: theme.transitions.easing.sharp,\n              duration: theme.transitions.duration.enteringScreen\n          }),\n          overflowX: \"hidden\",\n          \"& .MuiDrawer-paper\": openedMixin(theme)\n      }),\n      ...(!open && {\n          transition: theme.transitions.create(\"width\", {\n              easing: theme.transitions.easing.sharp,\n              duration: theme.transitions.duration.leavingScreen\n          }),\n          overflowX: \"hidden\",\n          width: `calc(${theme.spacing(7)} + 1px)`,\n          [theme.breakpoints.up(\"sm\")]: {\n              width: `calc(${theme.spacing(9)} + 1px)`\n          },\n          \"& .MuiDrawer-paper\": closedMixin(theme)\n      })\n  })\n);\n\nexport const AppMenu: React.FC<{ open; toggleDrawer }> = ({ open, toggleDrawer }) => {\n\n    return <Drawer variant=\"permanent\" open={open}>\n{/*\n        <DrawerHeader>\n            <IconButton onClick={toggleDrawer}>\n                <ChevronLeftIcon />\n            </IconButton>\n        </DrawerHeader>\n*/}\n        <Divider />\n        <List>\n            <div>\n                {/*<ListSubheader inset>稿件管理</ListSubheader>*/}\n                <Link to={\"/admin/products\"}>\n                    <ListItem>\n                        <ListItemIcon>\n                            <WidgetsIcon />\n                        </ListItemIcon>\n                        <ListItemText primary=\"产品中心\" />\n                    </ListItem>\n                </Link>\n\n\n                <Link to={\"/admin/applications\"}>\n                    <ListItem>\n                        <ListItemIcon>\n                            <TrendingUpIcon />\n                        </ListItemIcon>\n                        <ListItemText primary=\"行业应用\" />\n                    </ListItem>\n                </Link>\n\n                <Link to={\"/admin/news\"}>\n                    <ListItem>\n                        <ListItemIcon>\n                            <AnalyticsIcon />\n                        </ListItemIcon>\n                        <ListItemText primary=\"新闻中心\" />\n                    </ListItem>\n                </Link>\n\n                <Link to={\"/admin/others\"}>\n                    <ListItem>\n                        <ListItemIcon>\n                            <ApiIcon />\n                        </ListItemIcon>\n                        <ListItemText primary=\"其他\" />\n                    </ListItem>\n                </Link>\n            </div>\n        </List>\n        <Divider />\n        <List>\n            <div>\n\n                <Link to={\"/admin/settings\"}>\n                    <ListItem>\n                        <ListItemIcon>\n                            <SettingsIcon />\n                        </ListItemIcon>\n                        <ListItemText primary=\"稿件类型管理\" />\n                    </ListItem>\n                </Link>\n            </div>\n        </List>\n    </Drawer>;\n};","import React, { FC, Fragment, useState } from \"react\";\nimport { Box, Container, Paper } from \"@mui/material\";\n\nimport { AppBar } from \"./app-bar\";\nimport { AppMenu, DrawerHeader } from \"./menu\";\n\nexport const AuthLayout: FC = ({ children }) => {\n    const [openDrawer, setOpenDrawer] = useState(true);\n\n    const toggleDrawer = () => {\n        setOpenDrawer(!openDrawer);\n    };\n\n    return (\n      <Fragment>\n          <AppBar open={openDrawer} toggleDrawer={toggleDrawer} />\n          <AppMenu open={openDrawer} toggleDrawer={toggleDrawer} />\n          <Box\n            component=\"main\"\n            sx={{\n                flexGrow: 1,\n                height: \"100vh\",\n                overflow: \"auto\",\n                display: \"flex\",\n                flexDirection: \"column\",\n                marginLeft: \"64px\",\n                transition: (theme) => theme.transitions.create(\"width\", {\n                    easing: theme.transitions.easing.sharp,\n                    duration: theme.transitions.duration.leavingScreen\n                }),\n                ...(openDrawer && {\n                    marginLeft: \"200px\",\n                    transition: (theme) => theme.transitions.create(\"width\", {\n                        easing: theme.transitions.easing.sharp,\n                        duration: theme.transitions.duration.enteringScreen\n                    })\n                })\n            }}>\n              <DrawerHeader />\n              <Container maxWidth=\"lg\">\n                  <Paper sx={{ mt: 4, mb: 4, height: \"100%\" }}>\n                      {children}\n                  </Paper>\n              </Container>\n          </Box>\n      </Fragment>\n    );\n};\n","import { Box } from '@mui/material';\nimport React from 'react';\n\nexport const PublicLayout: React.FC = (props) => {\n    return <Box\n        sx={{\n            // marginTop: 8,\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'center',\n        }}\n    >\n        {props.children}\n    </Box>;\n};","import React, { useEffect, useRef } from 'react';\nimport { IconButton, InputProps, styled, TextField } from '@mui/material';\nimport SearchIcon from '@mui/icons-material/Search';\nimport ClearIcon from '@mui/icons-material/Clear';\nimport { FilterModel } from '../../models';\nimport { debounceTime, Subject, tap } from 'rxjs';\n\nconst InlineSearchBox = styled('div')(({ theme }) => ({\n    padding: theme.spacing(0.5, 0.5, 0),\n    justifyContent: 'space-between',\n    display: 'flex',\n    alignItems: 'flex-start',\n    flexWrap: 'wrap',\n    '& MuiTextField-root': {\n        [theme.breakpoints.down('xs')]: {\n            width: '100%',\n        },\n        margin: theme.spacing(1, 0.5, 1.5),\n        '& .MuiSvgIcon-root': {\n            marginRight: theme.spacing(0.5),\n        },\n        '& .MuiInput-underline:before': {\n            borderBottom: `1px solid ${theme.palette.divider}`,\n        },\n    },\n}));\n\nconst filterSubject = new Subject();\n\nexport const QuickFilterToolbar: React.FC<QuickFilterToolbarProps> = (props) => {\n        const inputRef = useRef(null);\n        const clearFilter = () => {\n            inputRef.current.value = '';\n            filterSubject.next('');\n        }\n        const onChange = (e) => {\n            filterSubject.next(e?.target.value);\n        }\n\n        useEffect(() => {\n            const filterSubscription = filterSubject.pipe(debounceTime(1500), tap((value) => {\n                props.setFilter((filter) => ({ ...filter, kw: value, offset: 0 }));\n            })).subscribe();\n\n            return () => {\n                filterSubscription.unsubscribe();\n            };\n        }, [props]);\n\n        return (\n            <InlineSearchBox>\n                <TextField\n                    inputRef={inputRef}\n                    variant='standard'\n                    defaultValue={props.value}\n                    onChange={onChange}\n                    placeholder='关键字查找'\n                    InputProps={{\n                        startAdornment: <SearchIcon fontSize='small' />,\n                        endAdornment: (\n                            <IconButton\n                                title='Clear'\n                                aria-label='Clear'\n                                size='small'\n                                style={{ visibility: props.value ? 'visible' : 'hidden' }}\n                                onClick={clearFilter}\n                            >\n                                <ClearIcon fontSize='small' />\n                            </IconButton>\n                        ),\n                    }}\n                />\n            </InlineSearchBox>\n        );\n    }\n;\n\ninterface QuickFilterToolbarProps extends InputProps {\n    setFilter: (filterState) => Partial<FilterModel>,\n};","import React from 'react';\nimport { Button, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle } from '@mui/material';\n\nexport interface ConfirmDeleteDialogProps {\n    open: boolean,\n    message?: string,\n    onClose?: () => void,\n    onConfirm?: () => void,\n}\n\nexport const ConfirmDeleteDialog: React.FC<ConfirmDeleteDialogProps> = ({ open, message, onClose, onConfirm }) => {\n\n    return <Dialog\n        maxWidth='xs'\n        open={open}\n    >\n        <DialogTitle>确认删除</DialogTitle>\n        <DialogContent dividers>\n            {message && <DialogContentText>\n                确认删除?\n            </DialogContentText>}\n        </DialogContent>\n        <DialogActions>\n            <Button autoFocus onClick={onClose}>\n                取消\n            </Button>\n            <Button color='warning' onClick={onConfirm}>确认</Button>\n        </DialogActions>\n    </Dialog>;\n\n};","import React, { useEffect, useState } from 'react';\nimport { DataGrid, GridColDef, GridRenderCellParams, GridRowModel } from '@mui/x-data-grid';\n\nimport { ArticleDataService } from '../../services';\nimport { Article, ArticleFilter } from '../../models';\nimport { Box, Fab, IconButton, Typography } from '@mui/material';\nimport { QuickFilterToolbar } from '../../components/table';\nimport AddIcon from '@mui/icons-material/Add';\nimport EditIcon from '@mui/icons-material/Edit';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport { useHistory } from 'react-router';\nimport { tap } from 'rxjs';\nimport { ConfirmDeleteDialog, ConfirmDeleteDialogProps } from '../../components/dialog/confirm-delete-dialog';\nimport { CHANNEL_APP_BAR_TITLE, Portal } from '../../components/portal';\nimport { useSnackbar } from 'notistack';\nimport { Link } from 'react-router-dom';\n\nexport const Products: React.FC = () => {\n    const [filter, setFilter] = useState<ArticleFilter>({ kw: '', limit: 20, offset: 0, category: 1 });\n    const [dataSource, setDataSource] = useState<Article[]>([]);\n    const [totalSize, setTotalSize] = useState<number>(1);\n    const [deleteDialog, setDeleteDialog] = useState<ConfirmDeleteDialogProps>({ open: false });\n\n    const history = useHistory();\n    const snackBar = useSnackbar();\n\n    useEffect(() => {\n        ArticleDataService.getList(filter).subscribe({\n            next: ({ errcode, data }) => {\n                if (errcode === 0) {\n                    setDataSource(data.list);\n                    setTotalSize(data.total);\n                } else {\n                    console.error('fetch products error', errcode);\n                    snackBar.enqueueSnackbar('获取产品列表失败', {\n                        variant: 'error',\n                    });\n                }\n            }, error: (err) => {\n                console.error('fetch products error', err);\n                snackBar.enqueueSnackbar('获取产品列表失败', {\n                    variant: 'error',\n                });\n            },\n        });\n    }, [filter, snackBar]);\n\n    function confirmDelete(item: GridRowModel) {\n        setDeleteDialog({\n            open: true, message: `确认删除产品信息: \"${item.title}\"?`,\n            onClose(): void {\n                setDeleteDialog({ open: false });\n            },\n            onConfirm: function(): void {\n                ArticleDataService.delete(item.id).pipe(\n                    tap(() => {\n                        setFilter({ ...filter });\n                        setDeleteDialog({ open: false });\n\n                        snackBar.enqueueSnackbar('删除产品成功', {\n                            variant: 'success',\n                        });\n                    }),\n                ).subscribe({\n                    error: (err) => {\n                        snackBar.enqueueSnackbar(' 删除产品失败', {\n                            variant: 'error',\n                        });\n                    },\n                });\n            },\n        });\n\n    }\n\n    const cols: GridColDef[] = [\n        {\n            field: 'id',\n            headerName: '稿件Id',\n            sortable: false,\n            renderCell: (params: GridRenderCellParams) => (\n                <Link to={`/admin/products/detail/${params.value}`}>{params.value}</Link>),\n        },\n        {\n            field: 'title',\n            headerName: '标题',\n            flex: 1,\n            sortable: false,\n        },\n        {\n            field: 'type_id',\n            headerName: '类型',\n            sortable: false,\n            renderCell: (params) => (\n                <Typography>{params.row.type?.name ?? ''}</Typography>\n            ),\n        },\n        {\n            field: 'status',\n            headerName: '状态',\n            sortable: false,\n            renderCell: (params) => (\n                <Typography>{params.value === 0 ? '草稿' : '已发布'}</Typography>\n            ),\n        },\n        {\n            field: 'read_cnt',\n            headerName: '阅读次数',\n            sortable: false,\n        },\n        {\n            field: 'created_at',\n            headerName: '创建时间',\n            flex: 1,\n            sortable: false,\n        },\n        {\n            field: 'category',\n            headerName: '操作',\n            sortable: false,\n            renderCell: (params: GridRenderCellParams) => {\n                return (\n                    <>\n                        <IconButton component={Link} to={`/admin/products/detail/${params.row.id}`}>\n                            <EditIcon />\n                        </IconButton>\n                        <IconButton onClick={() => confirmDelete(params.row)}>\n                            <DeleteIcon />\n                        </IconButton>\n                    </>\n                );\n            },\n        },\n    ];\n\n    function pageChange(pageNumber: number): void {\n        setFilter((filter) => ({ ...filter, offset: pageNumber }));\n    }\n\n    function pageSizeChange(pageSize: number): void {\n        setFilter((filter) => ({ ...filter, limit: pageSize, offset: 0 }));\n    }\n\n    function createItem() {\n        history.push('/admin/products/create');\n    }\n\n    return (\n        <Box sx={{ height: '100%', width: '100%', p: 1 }}>\n            <DataGrid\n                autoHeight\n                disableColumnMenu={true}\n                disableColumnFilter={true}\n                pagination\n                pageSize={filter.limit}\n                page={filter.offset}\n                rowCount={totalSize}\n                rowsPerPageOptions={[10, 20, 50, 100]}\n                onPageChange={pageChange}\n                onPageSizeChange={pageSizeChange}\n                components={{ Toolbar: QuickFilterToolbar }}\n                componentsProps={{\n                    toolbar: {\n                        value: filter.kw,\n                        setFilter,\n                    },\n                }}\n                columns={cols}\n                rows={dataSource}\n            />\n            <Fab\n                sx={{\n                    position: 'fixed',\n                    bottom: 16,\n                    right: 48,\n                }}\n                size='medium'\n                color='primary'\n                aria-label='add'\n                onClick={createItem}\n            >\n                <AddIcon />\n            </Fab>\n            <ConfirmDeleteDialog {...deleteDialog} />\n            <Portal channel={CHANNEL_APP_BAR_TITLE}>\n                产品中心\n            </Portal>\n        </Box>\n    );\n};\n","import { FileUploadService } from '../../services';\nimport { lastValueFrom, Subscription } from 'rxjs';\n\nclass MyUploadAdapter {\n    private loader: any;\n    private _uploadTask: Subscription;\n\n    constructor(loader) {\n        this.loader = loader;\n    }\n\n    upload = () => {\n        const formData = new FormData();\n        return this.loader.file.then((file) => {\n            formData.append('file', file);\n            return lastValueFrom(FileUploadService.postImage(formData)).then((resp) => {\n                if (resp.errcode !== 0) {\n                    return { default: 'https://33333.cdn.cke-cs.com/rc1DFuFpHqcR3Mah6y0e/images/a941c59ff780060b51d398434c99fe9f229615b4227f5434.png' };\n                }\n                return { default: resp.data.url };\n            }).catch(() => {\n                return { default: 'https://33333.cdn.cke-cs.com/rc1DFuFpHqcR3Mah6y0e/images/a941c59ff780060b51d398434c99fe9f229615b4227f5434.png' };\n            });\n        });\n    };\n\n    abort = () => {\n        this._uploadTask.unsubscribe();\n    };\n}\n\nexport function UploadAdaptorPlugin(editor) {\n    editor.plugins.get('FileRepository').createUploadAdapter = (loader) => {\n        return new MyUploadAdapter(loader);\n    };\n};","import React, { ChangeEvent, useEffect, useState } from 'react';\nimport { Box, Button, Grid, IconButton, ImageList, ImageListItem, ImageListItemBar, MenuItem, Paper, TextField, Typography } from '@mui/material';\nimport CancelIcon from '@mui/icons-material/Cancel';\nimport { Article, ArticleType, ArticleTypeListResponse } from '../../../models';\nimport { CKEditor } from '@ckeditor/ckeditor5-react';\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\nimport { ActionService, ArticleDataService, ArticleTypeDataService, FileUploadService } from '../../../services';\nimport { UploadAdaptorPlugin } from '../../../components/form/upload-adaptor-plugin';\nimport { switchMap } from 'rxjs';\nimport { useHistory } from 'react-router';\nimport { useSnackbar } from 'notistack';\n\nexport const EditForm: React.FC<{ detail: Article }> = ({ detail }) => {\n    const [formDetail, setFormDetail] = useState<Article>(detail);\n    const [categoryList, setCategoryList] = useState<ArticleType[]>([]);\n    const [selectedRootCategory, setSelectedRootCategory] = useState<ArticleType>(null);\n    const history = useHistory();\n    const snackBar = useSnackbar();\n\n    useEffect(() => {\n        setFormDetail(detail);\n    }, [detail]);\n\n    useEffect(() => {\n        ArticleTypeDataService.getList(1).subscribe({\n            next: (resp: ArticleTypeListResponse) => {\n                const categoryList = resp.data.list;\n                setCategoryList(categoryList);\n            },\n            error: (err) => {\n                console.error('fail to fetch article type list', err);\n                snackBar.enqueueSnackbar('获取产品类型信息失败', {\n                    variant: 'error',\n                });\n            },\n        });\n    }, [snackBar]);\n    useEffect(() => {\n        if (formDetail.type_id >= 0) {\n            const selectedRootCategory = categoryList.find((x) => x.id === formDetail.type?.parent_id);\n            setSelectedRootCategory(selectedRootCategory);\n        }\n    }, [categoryList, formDetail.type_id, formDetail.type]);\n\n    useEffect(() => {\n        const saveAction = ActionService.handleAction('save')\n            .pipe(\n                switchMap(() => {\n                    return !formDetail.id\n                        ? ArticleDataService.create({\n                            category: 1,\n                            content: formDetail.content,\n                            summary: formDetail.summary,\n                            title: formDetail.title,\n                            type_id: formDetail.type_id,\n                            covers: formDetail.covers.map((x) => x.img),\n                        })\n                        : ArticleDataService.edit({\n                            content: formDetail.content,\n                            id: formDetail.id,\n                            summary: formDetail.summary,\n                            title: formDetail.title,\n                            type_id: formDetail.type_id,\n                            covers: formDetail.covers.map((x) => x.img),\n                        });\n                })\n            )\n            .subscribe({\n                next: (resp) => {\n                    if (resp.errcode === 0) {\n                        history.push('/admin/products');\n                        snackBar.enqueueSnackbar('保存产品信息成功', {\n                            variant: 'success',\n                        });\n                    } else {\n                        console.error('fail to save product', resp.errmessage);\n                        snackBar.enqueueSnackbar('保存产品失败', {\n                            variant: 'error',\n                        });\n                    }\n                },\n                error: (error) => {\n                    console.error('fail to save product', error);\n                    snackBar.enqueueSnackbar('保存产品失败', {\n                        variant: 'error',\n                    });\n                },\n            });\n\n        return () => {\n            saveAction.unsubscribe();\n        };\n    }, [formDetail, snackBar, history]);\n\n    const rootCategoryList: () => ArticleType[] = () => {\n        return categoryList.filter((x) => !x.parent_id);\n    };\n    const childCategoryList: () => ArticleType[] = () => {\n        return !selectedRootCategory ? [] : categoryList.filter((x) => x.parent_id === selectedRootCategory.id);\n    };\n\n    function updateInputValue(key: string): (e: ChangeEvent<HTMLInputElement>) => void {\n        return (e) => {\n            const value = e.target.value;\n            setFormDetail((state) => ({\n                ...state,\n                [key]: value,\n            }));\n        };\n    }\n\n    function handleRootCategoryChange(e) {\n        const targetCategory = categoryList.find((x) => x.id === e.target.value);\n        setSelectedRootCategory(targetCategory);\n    }\n\n    function handleChildCategoryChange(e) {\n        const targetCategory = categoryList.find((x) => x.id === e.target.value);\n        setFormDetail((state) => ({\n            ...state,\n            type: targetCategory,\n            type_id: targetCategory.id,\n        }));\n    }\n\n    function handleCoverUpload(e) {\n        const files = e.target.files;\n        if (files && files.length > 0) {\n            const formData = new FormData();\n            formData.append('file', files[0]);\n\n            FileUploadService.postImage(formData).subscribe({\n                next: (resp) => {\n                    if (resp.errcode === 0) {\n                        setFormDetail((state) => {\n                            const covers = state.covers ?? [];\n                            covers.push({\n                                id: -Math.ceil(Math.random() * 1000),\n                                article_id: formDetail.id,\n                                img: resp.data.url,\n                            });\n\n                            return {\n                                ...state,\n                                covers,\n                            };\n                        });\n                    } else {\n                        console.error('fail to upload image', resp.errmessage);\n                        snackBar.enqueueSnackbar(' 上传封面失败', {\n                            variant: 'error',\n                        });\n                    }\n                },\n                error: (err) => {\n                    console.error('fail to upload image', err);\n                    snackBar.enqueueSnackbar(' 上传封面失败', {\n                        variant: 'error',\n                    });\n                },\n            });\n        }\n    }\n\n    function handleDeleteCover(coverIndex): void {\n        setFormDetail((state) => {\n            const covers = state.covers ?? [];\n            covers.splice(coverIndex, 1);\n\n            return {\n                ...state,\n                covers,\n            };\n        });\n    }\n\n    function handleContentUpdate(event, editor): void {\n        const rawContent = editor.getData();\n\n        setFormDetail((state) => ({\n            ...state,\n            content: rawContent,\n        }));\n        console.log('editor update >>>', rawContent);\n    }\n\n    function clearSelectedFile(e) {\n        e.target.value = null;\n    }\n\n    return (\n        <Box sx={{ '& .MuiTextField-root': { mt: 1, mb: 1 } }} component='form'>\n            <Grid container>\n                <Grid item xs={12}>\n                    <TextField\n                        select\n                        sx={{ minWidth: '200px', mr: 1 }}\n                        id='product-category-root'\n                        label='产品类型'\n                        value={selectedRootCategory?.id ?? ''}\n                        onChange={handleRootCategoryChange}>\n                        {rootCategoryList().map((x) => {\n                            return (\n                                <MenuItem key={`cate-${x.id}`} value={x.id}>\n                                    {x.name}\n                                </MenuItem>\n                            );\n                        })}\n                    </TextField>\n                    <TextField\n                        select\n                        sx={{ minWidth: '200px' }}\n                        id='product-category-child'\n                        onChange={handleChildCategoryChange}\n                        value={formDetail.type_id > 0 ? formDetail.type_id : ''}\n                        label='子类型'>\n                        {childCategoryList().map((x) => {\n                            return (\n                                <MenuItem key={x.id} value={x.id}>\n                                    {x.name}\n                                </MenuItem>\n                            );\n                        })}\n                    </TextField>\n                </Grid>\n                <Grid item xs={12}>\n                    <TextField\n                        fullWidth\n                        label='标题'\n                        value={formDetail?.title ?? ''}\n                        onChange={updateInputValue('title')}\n                    />\n                </Grid>\n                <Grid item xs={12}>\n                    <TextField\n                        fullWidth\n                        label='摘要'\n                        rows='4'\n                        value={formDetail?.summary ?? ''}\n                        onChange={updateInputValue('summary')}\n                    />\n                </Grid>\n                <Grid item xs={12}>\n                    <Paper sx={{ mt: 1, p: 1, width: '100%' }} variant='outlined'>\n                        <Grid container>\n                            <Grid item xs={1}>\n                                <Typography variant='subtitle1'>封面</Typography>\n                            </Grid>\n                            <Grid item container xs justifyContent='flex-end'>\n                                <label htmlFor='upload-cover'>\n                                    <input\n                                        style={{ display: 'none' }}\n                                        accept='image/*'\n                                        id='upload-cover'\n                                        type='file'\n                                        onChange={handleCoverUpload}\n                                        onClick={clearSelectedFile}\n                                    />\n                                    <Button variant='contained' component='span'>\n                                        添加封面\n                                    </Button>\n                                </label>\n                            </Grid>\n                            <Grid item xs={12}>\n                                <ImageList sx={{ minHeight: '160px', width: '100%' }} cols={5} rowHeight={164}>\n                                    {formDetail.covers?.map((item, index) => (\n                                        <ImageListItem key={item.id}>\n                                            <img src={`${item.img}`} srcSet={`${item.img}`} loading='lazy' alt={''} />\n                                            <ImageListItemBar\n                                                position=\"top\"\n                                                actionPosition=\"right\"\n                                                actionIcon={\n                                                    <IconButton onClick={() => handleDeleteCover(index)} sx={{ color: 'red' }} >\n                                                        <CancelIcon />\n                                                    </IconButton>\n                                                }\n                                            />\n                                        </ImageListItem>\n                                    )) ?? <div />}\n                                </ImageList>\n                            </Grid>\n                        </Grid>\n                    </Paper>\n                </Grid>\n                <Grid item container xs={12}>\n                    <Paper sx={{ mt: 1, p: 1, width: '100%' }} variant='outlined'>\n                        <Grid container>\n                            <Grid item xs={1}>\n                                <Typography variant='subtitle1'>内容</Typography>\n                            </Grid>\n                            <Grid\n                                item\n                                sx={{\n                                    height: '420px',\n                                    '& .ck-editor__main, & .ck-content': { height: '380px' },\n                                }}\n                                xs={12}>\n                                <CKEditor\n                                    config={{\n                                        extraPlugins: [UploadAdaptorPlugin],\n                                    }}\n                                    editor={ClassicEditor}\n                                    data={formDetail.content}\n                                    onChange={handleContentUpdate}\n                                />\n                            </Grid>\n                        </Grid>\n                    </Paper>\n                </Grid>\n            </Grid>\n        </Box>\n    );\n};\n","import React, { useState } from 'react';\nimport { Button } from '@mui/material';\nimport KeyboardArrowDownIcon from '@mui/icons-material/KeyboardArrowDown';\nimport Menu from '@mui/material/Menu';\nimport MenuItem from '@mui/material/MenuItem';\nimport { ActionService } from '../../services';\n\nexport const ActionMenu: React.FC<{ status: number, isCreate: boolean }> = ({ status, isCreate }) => {\n    const [anchorEl, setAnchorEl] = useState(null);\n\n    function handleOpen(e) {\n        setAnchorEl(e.currentTarget);\n    }\n\n    function closeMenu() {\n        setAnchorEl(null);\n    }\n\n    function handleSave() {\n        ActionService.save();\n        closeMenu();\n    }\n\n    function handlePublish() {\n        ActionService.publish();\n        closeMenu();\n    }\n\n    function handleWithdraw() {\n        ActionService.withdraw();\n        closeMenu();\n    }\n\n    return <div>\n        <Button\n            id='action-button'\n            aria-controls='action-menu'\n            aria-haspopup='true'\n            aria-expanded={anchorEl ? 'true' : undefined}\n            variant='contained'\n            color={!status ? 'info' : 'success'}\n            disableElevation\n            onClick={handleOpen}\n            endIcon={<KeyboardArrowDownIcon />}\n        >\n            {isCreate ? '新增' : status === 0 ? '草稿' : '已发布'}\n        </Button>\n        <Menu\n            id='action-menu'\n            open={!!anchorEl}\n            anchorEl={anchorEl}\n            anchorOrigin={{\n                vertical: 'bottom',\n                horizontal: 'right',\n            }}\n            transformOrigin={{\n                vertical: 'top',\n                horizontal: 'right',\n            }} MenuListProps={{\n            'aria-labelledby': 'long-button',\n        }}\n            onClose={closeMenu}\n            PaperProps={{\n                style: {\n                    width: '160px',\n                },\n            }}\n        >\n            {\n                isCreate ?\n                    <MenuItem key='edit' onClick={handleSave}>\n                        保存\n                    </MenuItem>\n                    : [\n                        <MenuItem key='edit' onClick={handleSave}>\n                            保存\n                        </MenuItem>,\n                        <MenuItem key='publish' onClick={handlePublish}>\n                            发布\n                        </MenuItem>,\n                        <MenuItem key='withdraw' onClick={handleWithdraw}>\n                            撤稿\n                        </MenuItem>,\n                    ]\n            }\n        </Menu>\n    </div>;\n}\n","import React, { useEffect, useState } from 'react';\nimport { Article } from '../../../models';\nimport { useHistory, useRouteMatch } from 'react-router';\nimport { ActionService, ArticleDataService } from '../../../services';\nimport { Button, Grid } from '@mui/material';\n\nimport { EditForm } from '../components/edit-form';\nimport { ActionMenu } from '../../../components/form/action-menu';\nimport { CHANNEL_APP_BAR_TITLE, Portal } from '../../../components/portal';\nimport { useSnackbar } from 'notistack';\nimport { switchMap } from 'rxjs';\n\nexport const ProductDetail: React.FC = (props) => {\n    const [detail, setDetail] = useState<Article>({\n        id: 0,\n        category: 1,\n        content: '',\n        covers: [],\n        read_cnt: 0,\n        status: 0,\n        summary: '',\n        title: '',\n        type_id: -1,\n        created_at: '',\n        updated_at: '',\n    });\n\n    const snackBar = useSnackbar();\n    const history = useHistory();\n    const { params } = useRouteMatch<{ id: string }>();\n    const { id } = params;\n\n    useEffect(() => {\n        let actionSubscription = id\n            ? [\n                  ArticleDataService.getDetail(parseInt(id)).subscribe({\n                      next: (resp) => setDetail(resp.data.info),\n                      error: (err) => {\n                          console.error('fail to fetch product detail', err);\n                          snackBar.enqueueSnackbar(' 获取产品信息失败', {\n                              variant: 'error',\n                          });\n                      },\n                  }),\n\n                  ActionService.handleAction('withdraw')\n                      .pipe(switchMap(() => ArticleDataService.withdraw(parseInt(id))))\n                      .subscribe({\n                          next: () => {\n                              history.push('/admin/products');\n                              snackBar.enqueueSnackbar(' 撤稿成功', {\n                                  variant: 'success',\n                              });\n                          },\n                          error: (err) => {\n                              console.error('fail to publish', err);\n                              snackBar.enqueueSnackbar(' 撤稿失败', {\n                                  variant: 'error',\n                              });\n                          },\n                      }),\n                  ActionService.handleAction('publish')\n                      .pipe(switchMap(() => ArticleDataService.publish(parseInt(id))))\n                      .subscribe({\n                          next: () => {\n                              history.push('/admin/products');\n                              snackBar.enqueueSnackbar(' 发布成功', {\n                                  variant: 'success',\n                              });\n                          },\n                          error: (err) => {\n                              console.error('fail to publish', err);\n                              snackBar.enqueueSnackbar(' 发布失败', {\n                                  variant: 'error',\n                              });\n                          },\n                      }),\n              ]\n            : [];\n\n        return () => {\n            if (actionSubscription.length > 0) {\n                for (const subscription of actionSubscription) {\n                    subscription.unsubscribe();\n                }\n            }\n        };\n    }, [id, snackBar, history]);\n\n    function goBack() {\n        history.goBack();\n    }\n\n    return (\n        <>\n            <Grid container spacing={2} sx={{ pr: 2, pl: 1 }}>\n                <Grid container item xs={12}>\n                    <Grid item xs={1} sx={{ pl: 1 }}>\n                        <Button variant='outlined' onClick={goBack}>\n                            返回\n                        </Button>\n                    </Grid>\n                    <Grid item container justifyContent='flex-end' xs>\n                        <ActionMenu status={detail?.status} isCreate={detail?.id === 0} />\n                    </Grid>\n                </Grid>\n                <Grid item xs={12}>\n                    <EditForm detail={detail} />\n                </Grid>\n            </Grid>\n            <Portal channel={CHANNEL_APP_BAR_TITLE}>产品中心</Portal>\n        </>\n    );\n};\n","import React, { useEffect, useState } from 'react';\nimport { DataGrid, GridColDef, GridRenderCellParams, GridRowModel } from '@mui/x-data-grid';\nimport { useHistory } from 'react-router';\nimport { Link } from 'react-router-dom';\n\nimport { ArticleDataService } from '../../services';\nimport { Article, ArticleFilter } from '../../models';\nimport { Box, Fab, IconButton, Typography } from '@mui/material';\nimport { QuickFilterToolbar } from '../../components/table';\nimport AddIcon from '@mui/icons-material/Add';\nimport { ConfirmDeleteDialog, ConfirmDeleteDialogProps } from '../../components/dialog/confirm-delete-dialog';\nimport { tap } from 'rxjs';\nimport EditIcon from '@mui/icons-material/Edit';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport { CHANNEL_APP_BAR_TITLE, Portal } from '../../components/portal';\nimport { useSnackbar } from 'notistack';\n\nexport const Applications = () => {\n    const [filter, setFilter] = useState<ArticleFilter>({ kw: '', limit: 20, offset: 0, category: 2 });\n    const [dataSource, setDataSource] = useState<Article[]>([]);\n    const [totalSize, setTotalSize] = useState<number>(0);\n    const [deleteDialog, setDeleteDialog] = useState<ConfirmDeleteDialogProps>({ open: false });\n    const history = useHistory();\n    const snackBar = useSnackbar();\n\n    useEffect(() => {\n        ArticleDataService.getList(filter).subscribe({\n            next: ({ errcode, data }) => {\n                if (errcode === 0) {\n                    setDataSource(data.list);\n                    setTotalSize(data.total);\n                } else {\n                    console.error('fail to fetch application list', errcode);\n                    snackBar.enqueueSnackbar(' 获取行业应用列表失败', {\n                        variant: 'error',\n                    });\n                }\n            }, error: (err) => {\n                console.error('fail to fetch application list', err);\n                snackBar.enqueueSnackbar(' 获取行业应用列表失败', {\n                    variant: 'error',\n                });\n            },\n        });\n    }, [filter, snackBar]);\n\n    function confirmDelete(item: GridRowModel) {\n        setDeleteDialog({\n            open: true, message: `确认删除行业应用信息: \"${item.title}\"?`,\n            onClose(): void {\n                setDeleteDialog({ open: false });\n            },\n            onConfirm(): void {\n                ArticleDataService.delete(item.id).pipe(\n                    tap(() => {\n                        setFilter({ ...filter });\n                        setDeleteDialog({ open: false });\n\n                        snackBar.enqueueSnackbar(' 删除行业应用成功', {\n                            variant: 'success',\n                        });\n                    }),\n                ).subscribe({\n                    error: (err) => {\n                        console.error('fail to delete application', err);\n                        snackBar.enqueueSnackbar(' 删除行业应用失败', {\n                            variant: 'error',\n                        });\n                    },\n                });\n            },\n        });\n    }\n\n    const cols: GridColDef[] = [\n        {\n            field: 'id',\n            headerName: '稿件Id',\n            sortable: false,\n            renderCell: (params: GridRenderCellParams) => {\n                return (<Link to={`/admin/applications/detail/${params.value}`}>{params.value}</Link>);\n            },\n        },\n        {\n            field: 'title',\n            headerName: '标题',\n            flex: 1,\n            sortable: false,\n        },\n        {\n            field: 'type_id',\n            headerName: '类型',\n            sortable: false,\n            renderCell: (params) => <Typography>{params.row.type?.name ?? ''}</Typography>,\n        },\n        {\n            field: 'status',\n            headerName: '状态',\n            sortable: false,\n            renderCell: (params) => <Typography>{params.value === 0 ? '草稿' : '已发布'}</Typography>,\n        },\n        {\n            field: 'read_cnt',\n            headerName: '阅读次数',\n            sortable: false,\n        },\n        {\n            field: 'created_at',\n            headerName: '创建时间',\n            flex: 1,\n            sortable: false,\n        },\n        {\n            field: 'category',\n            headerName: '操作',\n            sortable: false,\n            renderCell: (params: GridRenderCellParams) => {\n                return (\n                    <>\n                        <IconButton component={Link} to={`/admin/applications/detail/${params.row.id}`}>\n                            <EditIcon />\n                        </IconButton>\n                        <IconButton onClick={() => confirmDelete(params.row)}>\n                            <DeleteIcon />\n                        </IconButton>\n                    </>\n                );\n            },\n        },\n    ];\n\n    function pageChange(pageNumber: number): void {\n        setFilter((filter) => ({ ...filter, offset: pageNumber }));\n    }\n\n    function pageSizeChange(pageSize: number): void {\n        setFilter((filter) => ({ ...filter, limit: pageSize, offset: 0 }));\n    }\n\n    function createItem() {\n        history.push('/admin/applications/create');\n    }\n\n    return (<Box sx={{ height: '100%', width: '100%', p: 1 }}>\n            <DataGrid\n                autoHeight\n                disableColumnMenu={true}\n                disableColumnFilter={true}\n                pagination\n                pageSize={filter.limit}\n                page={filter.offset}\n                rowCount={totalSize}\n                rowsPerPageOptions={[10, 20, 50, 100]}\n                onPageChange={pageChange}\n                onPageSizeChange={pageSizeChange}\n                components={{ Toolbar: QuickFilterToolbar }}\n                componentsProps={{\n                    toolbar: {\n                        value: filter.kw,\n                        setFilter,\n                    },\n                }}\n                columns={cols}\n                rows={dataSource}\n            />\n            <Fab\n                sx={{\n                    position: 'fixed',\n                    bottom: 16,\n                    right: 48,\n                }}\n                size='medium'\n                color='primary'\n                aria-label='add'\n                onClick={createItem}\n            >\n                <AddIcon />\n            </Fab>\n            <ConfirmDeleteDialog {...deleteDialog} />\n            <Portal channel={CHANNEL_APP_BAR_TITLE}>\n                行业应用\n            </Portal>\n        </Box>\n    );\n};","import React, { ChangeEvent, useEffect, useState } from 'react';\nimport { Box, Button, Grid, IconButton, ImageList, ImageListItem, ImageListItemBar, MenuItem, Paper, TextField, Typography } from '@mui/material';\nimport CancelIcon from '@mui/icons-material/Cancel';\nimport { Article, ArticleType, ArticleTypeListResponse } from '../../../models';\nimport { CKEditor } from '@ckeditor/ckeditor5-react';\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\nimport { ActionService, ArticleDataService, ArticleTypeDataService, FileUploadService } from '../../../services';\nimport { UploadAdaptorPlugin } from '../../../components/form/upload-adaptor-plugin';\nimport { switchMap } from 'rxjs';\nimport { useHistory } from 'react-router';\nimport { useSnackbar } from 'notistack';\n\nexport const EditForm: React.FC<{ detail: Article }> = ({ detail }) => {\n    const [formDetail, setFormDetail] = useState<Article>(detail);\n    const [categoryList, setCategoryList] = useState<ArticleType[]>([]);\n\n    const history = useHistory();\n    const snackBar = useSnackbar();\n\n    useEffect(() => {\n        ArticleTypeDataService.getList(2).subscribe((resp: ArticleTypeListResponse) => {\n            const categoryList = resp.data.list;\n            setCategoryList(categoryList);\n        });\n    }, []);\n    useEffect(() => setFormDetail(detail), [detail]);\n\n    useEffect(() => {\n        const saveAction = ActionService.handleAction('save')\n            .pipe(\n                switchMap(() => {\n                    return !formDetail.id\n                        ? ArticleDataService.create({\n                            category: 2,\n                            content: formDetail.content,\n                            summary: formDetail.summary,\n                            title: formDetail.title,\n                            type_id: formDetail.type_id,\n                            covers: formDetail.covers.map((x) => x.img),\n                        })\n                        : ArticleDataService.edit({\n                            content: formDetail.content,\n                            id: formDetail.id,\n                            summary: formDetail.summary,\n                            title: formDetail.title,\n                            type_id: formDetail.type_id,\n                            covers: formDetail.covers.map((x) => x.img),\n                        });\n                }),\n            )\n            .subscribe({\n                next: (resp) => {\n                    if (resp.errcode === 0) {\n                        history.push('/admin/applications');\n\n                        snackBar.enqueueSnackbar('  保存行业信息成功', {\n                            variant: 'success',\n                        });\n                    } else {\n                        console.error('fail to fetch application list', resp.errmessage);\n                        snackBar.enqueueSnackbar(' 保存行业信息失败', {\n                            variant: 'error',\n                        });\n                    }\n                },\n                error: (err) => {\n                    console.error('fail to fetch application list', err);\n                    snackBar.enqueueSnackbar(' 保存行业信息失败', {\n                        variant: 'error',\n                    });\n                },\n            });\n\n        return () => {\n            saveAction.unsubscribe();\n        };\n    }, [formDetail, snackBar, history]);\n\n    function updateInputValue(key: string): (e: ChangeEvent<HTMLInputElement>) => void {\n        return (e) => {\n            const value = e.target.value;\n            setFormDetail((state) => ({\n                ...state,\n                [key]: value,\n            }));\n        };\n    }\n\n    function handleCategoryChange(e) {\n        const targetCategory = categoryList.find((x) => x.id === e.target.value);\n        setFormDetail((state) => ({\n            ...state,\n            type: targetCategory,\n            type_id: targetCategory.id,\n        }));\n    }\n\n    function handleCoverUpload(e) {\n        const files = e.target.files;\n        if (files && files.length > 0) {\n            const formData = new FormData();\n            formData.append('file', files[0]);\n\n            FileUploadService.postImage(formData).subscribe({\n                next: (resp) => {\n                    if (resp.errcode === 0) {\n\n                        setFormDetail((state) => {\n                            const covers = state.covers ?? [];\n                            covers.push({\n                                id: -Math.ceil(Math.random() * 1000),\n                                article_id: formDetail.id,\n                                img: resp.data.url,\n                            });\n\n                            return {\n                                ...state,\n                                covers,\n                            };\n                        });\n                    } else {\n                        console.error('fail to upload cover', resp.errmessage);\n                        snackBar.enqueueSnackbar(' 上传封面失败', {\n                            variant: 'error',\n                        });\n                    }\n                }, error: err => {\n\n                    console.error('fail to upload cover', err);\n                    snackBar.enqueueSnackbar(' 上传封面失败', {\n                        variant: 'error',\n                    });\n                },\n            });\n        }\n    }\n\n    function handleDeleteCover(coverIndex): void {\n        setFormDetail((state) => {\n            const covers = state.covers ?? [];\n            covers.splice(coverIndex, 1);\n\n            return {\n                ...state,\n                covers,\n            };\n        });\n    }\n\n    function handleContentUpdate(event, editor): void {\n        const rawContent = editor.getData();\n\n        setFormDetail((state) => ({\n            ...state,\n            content: rawContent,\n        }));\n        console.log('editor update >>>', rawContent);\n    }\n\n    function clearSelectedFile(e) {\n        e.target.value = null;\n    }\n\n    return (\n        <Box sx={{ '& .MuiTextField-root': { mt: 1, mb: 1 } }} component='form'>\n            <Grid container>\n                <Grid item xs={12}>\n                    <TextField\n                        select\n                        sx={{ minWidth: '200px' }}\n                        id='application-category'\n                        onChange={handleCategoryChange}\n                        value={formDetail.type_id > 0 ? formDetail.type_id : ''}\n                        label='应用类型'>\n                        {categoryList.map((x) => {\n                            return (\n                                <MenuItem key={x.id} value={x.id}>\n                                    {x.name}\n                                </MenuItem>\n                            );\n                        })}\n                    </TextField>\n                </Grid>\n                <Grid item xs={12}>\n                    <TextField\n                        fullWidth\n                        label='标题'\n                        value={formDetail.title}\n                        onChange={updateInputValue('title')}\n                    />\n                </Grid>\n                <Grid item xs={12}>\n                    <TextField\n                        fullWidth\n                        label='摘要'\n                        rows='4'\n                        value={formDetail.summary}\n                        onChange={updateInputValue('summary')}\n                    />\n                </Grid>\n                <Grid item xs={12}>\n                    <Paper sx={{ mt: 1, p: 1, width: '100%' }} variant='outlined'>\n                        <Grid container>\n                            <Grid item xs={1}>\n                                <Typography variant='subtitle1'>封面</Typography>\n                            </Grid>\n                            <Grid item container xs justifyContent='flex-end'>\n                                <label htmlFor='upload-cover'>\n                                    <input\n                                        style={{ display: 'none' }}\n                                        accept='image/*'\n                                        id='upload-cover'\n                                        type='file'\n                                        onChange={handleCoverUpload}\n                                        onClick={clearSelectedFile}\n                                    />\n                                    <Button variant='contained' component='span'>\n                                        添加封面\n                                    </Button>\n                                </label>\n                            </Grid>\n                            <Grid item xs={12}>\n                                <ImageList sx={{ minHeight: '160px', width: '100%' }} cols={5} rowHeight={164}>\n                                    {formDetail.covers?.map((item, index) => (\n                                        <ImageListItem key={item.id}>\n                                            <img src={`${item.img}`} srcSet={`${item.img}`} loading='lazy' alt={''} />\n                                            <ImageListItemBar\n                                                position=\"top\"\n                                                actionPosition=\"right\"\n                                                actionIcon={\n                                                    <IconButton onClick={() => handleDeleteCover(index)} sx={{ color: 'red' }} >\n                                                        <CancelIcon />\n                                                    </IconButton>\n                                                }\n                                            />\n                                        </ImageListItem>\n                                    )) ?? <div />}\n                                </ImageList>\n                            </Grid>\n                        </Grid>\n                    </Paper>\n                </Grid>\n                <Grid item container xs={12}>\n                    <Paper sx={{ mt: 1, p: 1, width: '100%' }} variant='outlined'>\n                        <Grid container>\n                            <Grid item xs={1}>\n                                <Typography variant='subtitle1'>内容</Typography>\n                            </Grid>\n                            <Grid\n                                item\n                                sx={{\n                                    height: '420px',\n                                    '& .ck-editor__main, & .ck-content': { height: '380px' },\n                                }}\n                                xs={12}>\n                                <CKEditor\n                                    config={{\n                                        extraPlugins: [UploadAdaptorPlugin],\n                                    }}\n                                    editor={ClassicEditor}\n                                    data={formDetail.content}\n                                    onChange={handleContentUpdate}\n                                />\n                            </Grid>\n                        </Grid>\n                    </Paper>\n                </Grid>\n            </Grid>\n        </Box>\n    );\n};\n","import React, { useEffect, useState } from 'react';\nimport { Article } from '../../../models';\nimport { useHistory, useRouteMatch } from 'react-router';\nimport { ActionService, ArticleDataService } from '../../../services';\nimport { Button, Grid } from '@mui/material';\n\nimport { EditForm } from '../components/edit-form';\nimport { ActionMenu } from '../../../components/form/action-menu';\nimport { useSnackbar } from 'notistack';\nimport { switchMap } from 'rxjs';\n\nexport const ApplicationDetail: React.FC = (props) => {\n    const [detail, setDetail] = useState<Article>({\n        id: 0,\n        category: 2,\n        content: '',\n        covers: [],\n        read_cnt: 0,\n        status: 0,\n        summary: '',\n        title: '',\n        type_id: -1,\n        created_at: '',\n        updated_at: '',\n    });\n\n    const snackBar = useSnackbar();\n    const history = useHistory();\n    const { params } = useRouteMatch<{ id: string }>();\n    const { id } = params;\n\n    useEffect(() => {\n        let actionSubscription = id\n            ? [\n                  ArticleDataService.getDetail(parseInt(id)).subscribe({\n                      next: (resp) => setDetail(resp.data.info),\n                      error: (err) => {\n                          console.error('fail to fetch application list', err);\n                          snackBar.enqueueSnackbar(' 获取应用详情失败', {\n                              variant: 'error',\n                          });\n                      },\n                  }),\n                  ActionService.handleAction('withdraw')\n                      .pipe(switchMap(() => ArticleDataService.withdraw(parseInt(id))))\n                      .subscribe({\n                          next: () => {\n                              history.push('/admin/applications');\n                              snackBar.enqueueSnackbar(' 撤稿成功', {\n                                  variant: 'success',\n                              });\n                          },\n                          error: (err) => {\n                              console.error('fail to publish', err);\n                              snackBar.enqueueSnackbar(' 撤稿失败', {\n                                  variant: 'error',\n                              });\n                          },\n                      }),\n                  ActionService.handleAction('publish')\n                      .pipe(switchMap(() => ArticleDataService.publish(parseInt(id))))\n                      .subscribe({\n                          next: () => {\n                              history.push('/admin/applications');\n                              snackBar.enqueueSnackbar(' 发布成功', {\n                                  variant: 'success',\n                              });\n                          },\n                          error: (err) => {\n                              console.error('fail to publish', err);\n                              snackBar.enqueueSnackbar(' 发布失败', {\n                                  variant: 'error',\n                              });\n                          },\n                      }),\n              ]\n            : [];\n\n        return () => {\n            if (actionSubscription.length > 0) {\n                for (const subscription of actionSubscription) {\n                    subscription.unsubscribe();\n                }\n            }\n        };\n    }, [id, snackBar, history]);\n\n    function goBack() {\n        history.goBack();\n    }\n\n    return (\n        <Grid container spacing={2} sx={{ pr: 2, pl: 1 }}>\n            <Grid container item xs={12}>\n                <Grid item xs={1} sx={{ pl: 1 }}>\n                    <Button variant='outlined' onClick={goBack}>\n                        返回\n                    </Button>\n                </Grid>\n                <Grid item container justifyContent='flex-end' xs>\n                    <ActionMenu status={detail?.status} isCreate={detail?.id === 0} />\n                </Grid>\n            </Grid>\n            <Grid item xs={12}>\n                <EditForm detail={detail} />\n            </Grid>\n        </Grid>\n    );\n};\n","import React, { useEffect, useState } from 'react';\nimport { DataGrid, GridColDef, GridRenderCellParams, GridRowModel } from '@mui/x-data-grid';\nimport { useHistory } from 'react-router';\nimport { Link } from 'react-router-dom';\n\nimport { ArticleDataService } from '../../services';\nimport { Article, ArticleFilter } from '../../models';\nimport { Box, Fab, IconButton, Typography } from '@mui/material';\nimport { QuickFilterToolbar } from '../../components/table';\nimport AddIcon from '@mui/icons-material/Add';\nimport { tap } from 'rxjs';\nimport EditIcon from '@mui/icons-material/Edit';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport { ConfirmDeleteDialog, ConfirmDeleteDialogProps } from '../../components/dialog/confirm-delete-dialog';\nimport { CHANNEL_APP_BAR_TITLE, Portal } from '../../components/portal';\nimport { useSnackbar } from 'notistack';\n\nexport const News = () => {\n    const [filter, setFilter] = useState<ArticleFilter>({ kw: '', limit: 20, offset: 0, category: 3 });\n    const [dataSource, setDataSource] = useState<Article[]>([]);\n    const [totalSize, setTotalSize] = useState<number>(0);\n    const [deleteDialog, setDeleteDialog] = useState<ConfirmDeleteDialogProps>({ open: false });\n    const history = useHistory();\n    const snackBar = useSnackbar();\n\n    useEffect(() => {\n        ArticleDataService.getList(filter).subscribe({\n            next: ({ errcode, data }) => {\n                if (errcode === 0) {\n                    setDataSource(data.list);\n                    setTotalSize(data.total);\n                } else {\n                    console.error('fail to fetch news list', errcode);\n                    snackBar.enqueueSnackbar(' 获取新闻列表失败', {\n                        variant: 'error',\n                    });\n                }\n            },\n            error: (err) => {\n                console.error('fail to fetch news list', err);\n                snackBar.enqueueSnackbar(' 获取新闻列表失败', {\n                    variant: 'error',\n                });\n            },\n        });\n    }, [filter, snackBar]);\n\n    function confirmDelete(item: GridRowModel) {\n        setDeleteDialog({\n            open: true,\n            message: `确认删除新闻信息: \"${item.title}\"?`,\n            onClose(): void {\n                setDeleteDialog({ open: false });\n            },\n            onConfirm(): void {\n                ArticleDataService.delete(item.id)\n                    .pipe(\n                        tap(() => {\n                            setFilter({ ...filter });\n                            setDeleteDialog({ open: false });\n\n                            snackBar.enqueueSnackbar(' 删除新闻成功', {\n                                variant: 'success',\n                            });\n                        })\n                    )\n                    .subscribe({\n                        error: (err) => {\n                            console.error('fail to delete news', err);\n                            snackBar.enqueueSnackbar(' 删除新闻失败', {\n                                variant: 'error',\n                            });\n                        },\n                    });\n            },\n        });\n    }\n\n    const cols: GridColDef[] = [\n        {\n            field: 'id',\n            headerName: '稿件Id',\n            sortable: false,\n            renderCell: (params: GridRenderCellParams) => {\n                return <Link to={`/admin/news/detail/${params.value}`}>{params.value}</Link>;\n            },\n        },\n        {\n            field: 'title',\n            headerName: '标题',\n            flex: 1,\n            sortable: false,\n        },\n        {\n            field: 'type_id',\n            headerName: '类型',\n            sortable: false,\n            renderCell: (params) => <Typography>{params.row.type?.name ?? ''}</Typography>,\n        },\n        {\n            field: 'status',\n            headerName: '状态',\n            sortable: false,\n            renderCell: (params) => <Typography>{params.value === 0 ? '草稿' : '已发布'}</Typography>,\n        },\n        {\n            field: 'read_cnt',\n            headerName: '阅读次数',\n            sortable: false,\n        },\n        {\n            field: 'created_at',\n            headerName: '创建时间',\n            flex: 1,\n            sortable: false,\n        },\n        {\n            field: 'category',\n            headerName: '操作',\n            sortable: false,\n            renderCell: (params: GridRenderCellParams) => {\n                return (\n                    <>\n                        <IconButton component={Link} to={`/admin/news/detail/${params.row.id}`}>\n                            <EditIcon />\n                        </IconButton>\n                        <IconButton onClick={() => confirmDelete(params.row)}>\n                            <DeleteIcon />\n                        </IconButton>\n                    </>\n                );\n            },\n        },\n    ];\n\n    function pageChange(pageNumber: number): void {\n        setFilter((filter) => ({ ...filter, offset: pageNumber }));\n    }\n\n    function pageSizeChange(pageSize: number): void {\n        setFilter((filter) => ({ ...filter, limit: pageSize, offset: 0 }));\n    }\n\n    function createItem() {\n        history.push('/admin/news/create');\n    }\n\n    return (\n        <Box sx={{ height: '100%', width: '100%', p: 1 }}>\n            <DataGrid\n                autoHeight\n                disableColumnMenu={true}\n                disableColumnFilter={true}\n                pagination\n                pageSize={filter.limit}\n                page={filter.offset}\n                rowCount={totalSize}\n                rowsPerPageOptions={[10, 20, 50, 100]}\n                onPageChange={pageChange}\n                onPageSizeChange={pageSizeChange}\n                components={{ Toolbar: QuickFilterToolbar }}\n                componentsProps={{\n                    toolbar: {\n                        value: filter.kw,\n                        setFilter,\n                    },\n                }}\n                columns={cols}\n                rows={dataSource}\n            />\n            <Fab\n                sx={{\n                    position: 'fixed',\n                    bottom: 16,\n                    right: 48,\n                }}\n                size='medium'\n                color='primary'\n                aria-label='add'\n                onClick={createItem}>\n                <AddIcon />\n            </Fab>\n            <ConfirmDeleteDialog {...deleteDialog} />\n            <Portal channel={CHANNEL_APP_BAR_TITLE}>新闻中心</Portal>\n        </Box>\n    );\n};\n","import React, { ChangeEvent, useEffect, useState } from 'react';\nimport { Box, Button, Grid, IconButton, ImageList, ImageListItem, ImageListItemBar, MenuItem, Paper, TextField, Typography } from '@mui/material';\nimport CancelIcon from '@mui/icons-material/Cancel';\nimport { Article, ArticleType, ArticleTypeListResponse } from '../../../models';\nimport { CKEditor } from '@ckeditor/ckeditor5-react';\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\nimport { ActionService, ArticleDataService, ArticleTypeDataService, FileUploadService } from '../../../services';\nimport { UploadAdaptorPlugin } from '../../../components/form/upload-adaptor-plugin';\nimport { switchMap } from 'rxjs';\nimport { useHistory } from 'react-router';\nimport { useSnackbar } from 'notistack';\n\nexport const EditForm: React.FC<{ detail: Article }> = ({ detail }) => {\n    const [formDetail, setFormDetail] = useState<Article>(detail);\n    const [categoryList, setCategoryList] = useState<ArticleType[]>([]);\n    const history = useHistory();\n    const snackBar = useSnackbar();\n\n    useEffect(() => {\n        ArticleTypeDataService.getList(3).subscribe((resp: ArticleTypeListResponse) => {\n            const categoryList = resp.data.list;\n            setCategoryList(categoryList);\n        });\n    }, []);\n    useEffect(() => setFormDetail(detail), [detail]);\n\n    useEffect(() => {\n        const saveAction = ActionService.handleAction('save')\n            .pipe(\n                switchMap(() => {\n                    return !formDetail.id\n                        ? ArticleDataService.create({\n                            category: 3,\n                            content: formDetail.content,\n                            summary: formDetail.summary,\n                            title: formDetail.title,\n                            type_id: formDetail.type_id,\n                            covers: formDetail.covers.map((x) => x.img),\n                        })\n                        : ArticleDataService.edit({\n                            content: formDetail.content,\n                            id: formDetail.id,\n                            summary: formDetail.summary,\n                            title: formDetail.title,\n                            type_id: formDetail.type_id,\n                            covers: formDetail.covers.map((x) => x.img),\n                        });\n                }),\n            )\n            .subscribe({\n                next: (resp) => {\n                    if (resp.errcode === 0) {\n                        history.push('/admin/news');\n\n                        snackBar.enqueueSnackbar(' 保存新闻成功', {\n                            variant: 'success',\n                        });\n                    } else {\n                        console.error('fail to save news ', resp.errmessage);\n                        snackBar.enqueueSnackbar(' 保存新闻失败', {\n                            variant: 'error',\n                        });\n                    }\n                },\n                error: (err) => {\n                    console.error('fail to save news ', err);\n                    snackBar.enqueueSnackbar(' 保存新闻失败', {\n                        variant: 'error',\n                    });\n                },\n            });\n\n        return () => {\n            saveAction.unsubscribe();\n        };\n    }, [formDetail, snackBar, history]);\n\n    function updateInputValue(key: string): (e: ChangeEvent<HTMLInputElement>) => void {\n        return (e) => {\n            const value = e.target.value;\n            setFormDetail((state) => ({\n                ...state,\n                [key]: value,\n            }));\n        };\n    }\n\n    function handleCategoryChange(e) {\n        const targetCategory = categoryList.find((x) => x.id === e.target.value);\n        setFormDetail((state) => ({\n            ...state,\n            type: targetCategory,\n            type_id: targetCategory.id,\n        }));\n    }\n\n    function handleCoverUpload(e) {\n        const files = e.target.files;\n        if (files && files.length > 0) {\n            const formData = new FormData();\n            formData.append('file', files[0]);\n\n            FileUploadService.postImage(formData).subscribe({\n                next: (resp) => {\n                    if (resp.errcode === 0) {\n\n                        setFormDetail((state) => {\n                            const covers = state.covers ?? [];\n                            covers.push({\n                                id: -Math.ceil(Math.random() * 1000),\n                                article_id: formDetail.id,\n                                img: resp.data.url,\n                            });\n\n                            return {\n                                ...state,\n                                covers,\n                            };\n                        });\n                    } else {\n                        console.error('fail to upload cover', resp.errmessage);\n                        snackBar.enqueueSnackbar(' 上传封面失败', {\n                            variant: 'error',\n                        });\n                    }\n                }, error: err => {\n                    console.error('fail to upload cover', err);\n                    snackBar.enqueueSnackbar(' 上传封面失败', {\n                        variant: 'error',\n                    });\n                },\n            });\n        }\n    }\n\n    function handleDeleteCover(coverIndex): void {\n        setFormDetail((state) => {\n            const covers = state.covers ?? [];\n            covers.splice(coverIndex, 1);\n\n            return {\n                ...state,\n                covers,\n            };\n        });\n    }\n\n    function handleContentUpdate(event, editor): void {\n        const rawContent = editor.getData();\n\n        setFormDetail((state) => ({\n            ...state,\n            content: rawContent,\n        }));\n        console.log('editor update >>>', rawContent);\n    }\n\n    function clearSelectedFile(e) {\n        e.target.value = null;\n    }\n\n    return (\n        <Box sx={{ '& .MuiTextField-root': { mt: 1, mb: 1 } }} component='form'>\n            <Grid container>\n                <Grid item xs={12}>\n                    <TextField\n                        select\n                        sx={{ minWidth: '200px' }}\n                        id='news-category'\n                        onChange={handleCategoryChange}\n                        value={formDetail.type_id > 0 ? formDetail.type_id : ''}\n                        label='新闻类型'>\n                        {categoryList.map((x) => {\n                            return (\n                                <MenuItem key={x.id} value={x.id}>\n                                    {x.name}\n                                </MenuItem>\n                            );\n                        })}\n                    </TextField>\n                </Grid>\n                <Grid item xs={12}>\n                    <TextField\n                        fullWidth\n                        label='标题'\n                        value={formDetail.title}\n                        onChange={updateInputValue('title')}\n                    />\n                </Grid>\n                <Grid item xs={12}>\n                    <TextField\n                        fullWidth\n                        label='摘要'\n                        rows='4'\n                        value={formDetail.summary}\n                        onChange={updateInputValue('summary')}\n                    />\n                </Grid>\n                <Grid item xs={12}>\n                    <Paper sx={{ mt: 1, p: 1, width: '100%' }} variant='outlined'>\n                        <Grid container>\n                            <Grid item xs={1}>\n                                <Typography variant='subtitle1'>封面</Typography>\n                            </Grid>\n                            <Grid item container xs justifyContent='flex-end'>\n                                <label htmlFor='upload-cover'>\n                                    <input\n                                        style={{ display: 'none' }}\n                                        accept='image/*'\n                                        id='upload-cover'\n                                        type='file'\n                                        onChange={handleCoverUpload}\n                                        onClick={clearSelectedFile}\n                                    />\n                                    <Button variant='contained' component='span'>\n                                        添加封面\n                                    </Button>\n                                </label>\n                            </Grid>\n                            <Grid item xs={12}>\n                                <ImageList sx={{ minHeight: '160px', width: '100%' }} cols={5} rowHeight={164}>\n                                    {formDetail.covers?.map((item, index) => (\n                                        <ImageListItem key={item.id}>\n                                            <img src={`${item.img}`} srcSet={`${item.img}`} loading='lazy' alt={''} />\n                                            <ImageListItemBar\n                                                position=\"top\"\n                                                actionPosition=\"right\"\n                                                actionIcon={\n                                                    <IconButton onClick={() => handleDeleteCover(index)} sx={{ color: 'red' }} >\n                                                        <CancelIcon />\n                                                    </IconButton>\n                                                }\n                                            />\n                                        </ImageListItem>\n                                    )) ?? <div />}\n                                </ImageList>\n                            </Grid>\n                        </Grid>\n                    </Paper>\n                </Grid>\n                <Grid item container xs={12}>\n                    <Paper sx={{ mt: 1, p: 1, width: '100%' }} variant='outlined'>\n                        <Grid container>\n                            <Grid item xs={1}>\n                                <Typography variant='subtitle1'>内容</Typography>\n                            </Grid>\n                            <Grid\n                                item\n                                sx={{\n                                    height: '420px',\n                                    '& .ck-editor__main, & .ck-content': { height: '380px' },\n                                }}\n                                xs={12}>\n                                <CKEditor\n                                    config={{\n                                        extraPlugins: [UploadAdaptorPlugin],\n                                    }}\n                                    editor={ClassicEditor}\n                                    data={formDetail.content}\n                                    onChange={handleContentUpdate}\n                                />\n                            </Grid>\n                        </Grid>\n                    </Paper>\n                </Grid>\n            </Grid>\n        </Box>\n    );\n};\n","import React, { useEffect, useState } from 'react';\nimport { Article } from '../../../models';\nimport { useHistory, useRouteMatch } from 'react-router';\nimport { ActionService, ArticleDataService } from '../../../services';\nimport { Button, Grid } from '@mui/material';\n\nimport { EditForm } from '../components/edit-form';\nimport { ActionMenu } from '../../../components/form/action-menu';\nimport { useSnackbar } from 'notistack';\nimport { switchMap } from 'rxjs';\n\nexport const NewsDetail: React.FC = (props) => {\n    const [detail, setDetail] = useState<Article>(\n        {\n            id: 0,\n            category: 3,\n            content: '',\n            covers: [],\n            read_cnt: 0,\n            status: 0,\n            summary: '',\n            title: '',\n            type_id: -1,\n            created_at: '',\n            updated_at: '',\n        },\n    );\n\n    const snackBar = useSnackbar();\n    const history = useHistory();\n    const { params } = useRouteMatch<{ id: string }>();\n    const { id } = params;\n\n    useEffect(() => {\n        let actionSubscription = id ? [\n            ArticleDataService.getDetail(parseInt(id)).subscribe({\n                next: (resp) => setDetail(resp.data.info), error: (err) => {\n                    console.error('fail to fetch product detail', err);\n                    snackBar.enqueueSnackbar(' 获取新闻详情失败', {\n                        variant: 'error',\n                    });\n                },\n            }),\n            ActionService.handleAction('withdraw').pipe(\n                switchMap(() => ArticleDataService.withdraw(parseInt(id))),\n            ).subscribe({\n                next: () => {\n                    history.push('/admin/news');\n                    snackBar.enqueueSnackbar(' 撤稿成功', {\n                        variant: 'success',\n                    });\n                },\n                error: (err) => {\n                    console.error('fail to publish', err);\n                    snackBar.enqueueSnackbar(' 撤稿失败', {\n                        variant: 'error',\n                    });\n                },\n            }),\n\n            ActionService.handleAction('publish').pipe(\n                switchMap(() => ArticleDataService.publish(parseInt(id))),\n            ).subscribe({\n                next: () => {\n                    history.push('/admin/news');\n                    snackBar.enqueueSnackbar(' 发布成功', {\n                        variant: 'success',\n                    });\n                },\n                error: (err) => {\n                    console.error('fail to publish', err);\n                    snackBar.enqueueSnackbar(' 发布失败', {\n                        variant: 'error',\n                    });\n                },\n            }),\n        ] : [];\n\n        return () => {\n            if (actionSubscription.length > 0) {\n                for (const subscription of actionSubscription) {\n                    subscription.unsubscribe();\n                }\n            }\n        };\n    }, [id, snackBar, history]);\n\n    function goBack() {\n        history.goBack();\n    }\n\n    return <Grid container spacing={2} sx={{ pr: 2, pl: 1 }}>\n        <Grid container item xs={12}>\n            <Grid item xs={1} sx={{ pl: 1 }}>\n                <Button variant='outlined' onClick={goBack}>返回</Button>\n            </Grid>\n            <Grid item container justifyContent='flex-end' xs>\n                <ActionMenu status={detail?.status} isCreate={detail?.id === 0} />\n            </Grid>\n        </Grid>\n        <Grid item xs={12}>\n            <EditForm detail={detail} />\n        </Grid>\n    </Grid>;\n};","import React, { useEffect, useState } from 'react';\nimport { DataGrid, GridColDef, GridRenderCellParams, GridRowModel } from '@mui/x-data-grid';\nimport { useHistory } from 'react-router';\nimport { Link } from 'react-router-dom';\nimport { Box, Fab, IconButton, Typography } from '@mui/material';\n\nimport { ArticleDataService } from '../../services';\nimport { Article, ArticleFilter } from '../../models';\nimport { QuickFilterToolbar } from '../../components/table';\nimport AddIcon from '@mui/icons-material/Add';\nimport { ConfirmDeleteDialog, ConfirmDeleteDialogProps } from '../../components/dialog/confirm-delete-dialog';\nimport { tap } from 'rxjs';\nimport EditIcon from '@mui/icons-material/Edit';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport { CHANNEL_APP_BAR_TITLE, Portal } from '../../components/portal';\nimport { useSnackbar } from 'notistack';\n\nexport const Others = () => {\n    const [filter, setFilter] = useState<ArticleFilter>({ kw: '', limit: 20, offset: 0, category: 0 });\n    const [dataSource, setDataSource] = useState<Article[]>([]);\n    const [totalSize, setTotalSize] = useState<number>(0);\n    const [deleteDialog, setDeleteDialog] = useState<ConfirmDeleteDialogProps>({ open: false });\n    const history = useHistory();\n    const snackBar = useSnackbar();\n\n    useEffect(() => {\n        ArticleDataService.getList(filter).subscribe({\n            next: ({ errcode, data }) => {\n                if (errcode === 0) {\n                    setDataSource(data.list);\n                    setTotalSize(data.total);\n                } else {\n                    console.error('fail to fetch others list', errcode);\n                    snackBar.enqueueSnackbar(' 获取其他列表失败', {\n                        variant: 'error',\n                    });\n                }\n            },\n            error: (err) => {\n                console.error('fail to fetch others list', err);\n                snackBar.enqueueSnackbar(' 获取其他列表失败', {\n                    variant: 'error',\n                });\n            },\n        });\n    }, [filter, snackBar]);\n\n    function confirmDelete(item: GridRowModel) {\n        setDeleteDialog({\n            open: true,\n            message: `确认删除其他信息: \"${item.title}\"?`,\n            onClose(): void {\n                setDeleteDialog({ open: false });\n            },\n            onConfirm(): void {\n                ArticleDataService.delete(item.id)\n                    .pipe(\n                        tap(() => {\n                            setFilter({ ...filter });\n                            setDeleteDialog({ open: false });\n\n                            snackBar.enqueueSnackbar(' 删除其他信息成功', {\n                                variant: 'success',\n                            });\n                        })\n                    )\n                    .subscribe({\n                        error: (err) => {\n                            console.error('fail to fetch others list', err);\n                            snackBar.enqueueSnackbar(' 删除其他信息失败', {\n                                variant: 'error',\n                            });\n                        },\n                    });\n            },\n        });\n    }\n\n    const cols: GridColDef[] = [\n        {\n            field: 'id',\n            headerName: '稿件Id',\n            sortable: false,\n            renderCell: (params: GridRenderCellParams) => {\n                return (\n                    <Link to={`/admin/others/detail/${params.value}`} color='primary'>\n                        {params.value}\n                    </Link>\n                );\n            },\n        },\n        {\n            field: 'title',\n            headerName: '标题',\n            flex: 1,\n            sortable: false,\n        },\n        {\n            field: 'type_id',\n            headerName: '类型',\n            sortable: false,\n            renderCell: (params) => <Typography>{params.row.type?.name ?? ''}</Typography>,\n        },\n        {\n            field: 'status',\n            headerName: '状态',\n            sortable: false,\n            renderCell: (params) => <Typography>{params.value === 0 ? '草稿' : '已发布'}</Typography>,\n        },\n        {\n            field: 'read_cnt',\n            headerName: '阅读次数',\n            sortable: false,\n        },\n        {\n            field: 'created_at',\n            headerName: '创建时间',\n            flex: 1,\n            sortable: false,\n        },\n        {\n            field: 'category',\n            headerName: '操作',\n            sortable: false,\n            renderCell: (params: GridRenderCellParams) => {\n                return (\n                    <>\n                        <IconButton component={Link} to={`/admin/others/detail/${params.row.id}`}>\n                            <EditIcon />\n                        </IconButton>\n                        <IconButton onClick={() => confirmDelete(params.row)}>\n                            <DeleteIcon />\n                        </IconButton>\n                    </>\n                );\n            },\n        },\n    ];\n\n    function pageChange(pageNumber: number): void {\n        setFilter((filter) => ({ ...filter, offset: pageNumber }));\n    }\n\n    function pageSizeChange(pageSize: number): void {\n        setFilter((filter) => ({ ...filter, limit: pageSize, offset: 0 }));\n    }\n\n    function createItem() {\n        history.push('/admin/others/create');\n    }\n\n    return (\n        <Box sx={{ height: '100%', width: '100%', p: 1 }}>\n            <DataGrid\n                autoHeight\n                disableColumnMenu={true}\n                disableColumnFilter={true}\n                pagination\n                pageSize={filter.limit}\n                page={filter.offset}\n                rowCount={totalSize}\n                rowsPerPageOptions={[10, 20, 50, 100]}\n                onPageChange={pageChange}\n                onPageSizeChange={pageSizeChange}\n                components={{ Toolbar: QuickFilterToolbar }}\n                componentsProps={{\n                    toolbar: {\n                        value: filter.kw,\n                        setFilter,\n                    },\n                }}\n                columns={cols}\n                rows={dataSource}\n            />\n            <Fab\n                sx={{\n                    position: 'fixed',\n                    bottom: 16,\n                    right: 48,\n                }}\n                size='medium'\n                color='primary'\n                aria-label='add'\n                onClick={createItem}>\n                <AddIcon />\n            </Fab>\n            <ConfirmDeleteDialog {...deleteDialog} />\n            <Portal channel={CHANNEL_APP_BAR_TITLE}>其他</Portal>\n        </Box>\n    );\n};\n","import React, { ChangeEvent, useEffect, useState } from 'react';\nimport { Box, Button, Grid, IconButton, ImageList, ImageListItem, ImageListItemBar, MenuItem, Paper, TextField, Typography } from '@mui/material';\nimport CancelIcon from '@mui/icons-material/Cancel';\nimport { Article } from '../../../models';\nimport { CKEditor } from '@ckeditor/ckeditor5-react';\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\nimport { ActionService, ArticleDataService, FileUploadService } from '../../../services';\nimport { UploadAdaptorPlugin } from '../../../components/form/upload-adaptor-plugin';\nimport { switchMap } from 'rxjs';\nimport { useHistory } from 'react-router';\nimport { useSnackbar } from 'notistack';\n\nexport const EditForm: React.FC<{ detail: Article }> = ({ detail }) => {\n    const [formDetail, setFormDetail] = useState<Article>(detail);\n    const history = useHistory();\n    const snackBar = useSnackbar();\n\n    useEffect(() => setFormDetail(detail), [detail]);\n\n    useEffect(() => {\n        const saveAction = ActionService.handleAction('save')\n            .pipe(\n                switchMap(() => {\n                    return !formDetail.id\n                        ? ArticleDataService.create({\n                              category: 0,\n                              content: formDetail.content,\n                              summary: formDetail.summary,\n                              title: formDetail.title,\n                              type_id: formDetail.type_id,\n                              covers: formDetail.covers.map((x) => x.img),\n                          })\n                        : ArticleDataService.edit({\n                              content: formDetail.content,\n                              id: formDetail.id,\n                              summary: formDetail.summary,\n                              title: formDetail.title,\n                              type_id: formDetail.type_id,\n                              covers: formDetail.covers.map((x) => x.img),\n                          });\n                })\n            )\n            .subscribe({\n                next: (resp) => {\n                    if (resp.errcode === 0) {\n                        history.push('/admin/others');\n                        snackBar.enqueueSnackbar('保存其他信息成功', {\n                            variant: 'success',\n                        });\n                    } else {\n                        console.error('fail to save others', resp.errmessage);\n                        snackBar.enqueueSnackbar(' 保存其他信息失败', {\n                            variant: 'error',\n                        });\n                    }\n                },\n                error: (err) => {\n                    console.error('fail to save others', err);\n                    snackBar.enqueueSnackbar(' 保存其他信息失败', {\n                        variant: 'error',\n                    });\n                },\n            });\n\n        return () => {\n            saveAction.unsubscribe();\n        };\n    }, [formDetail, snackBar, history]);\n\n    function updateInputValue(key: string): (e: ChangeEvent<HTMLInputElement>) => void {\n        return (e) => {\n            const value = e.target.value;\n            setFormDetail((state) => ({\n                ...state,\n                [key]: value,\n            }));\n        };\n    }\n\n    function handleCoverUpload(e) {\n        const files = e.target.files;\n        if (files && files.length > 0) {\n            const formData = new FormData();\n            formData.append('file', files[0]);\n\n            FileUploadService.postImage(formData).subscribe({\n                next: (resp) => {\n                    if (resp.errcode === 0) {\n                        setFormDetail((state) => {\n                            const covers = state.covers ?? [];\n                            covers.push({\n                                id: -Math.ceil(Math.random() * 1000),\n                                article_id: formDetail.id,\n                                img: resp.data.url,\n                            });\n\n                            return {\n                                ...state,\n                                covers,\n                            };\n                        });\n                    } else {\n                        console.error('fail to upload cover', resp.errmessage);\n                        snackBar.enqueueSnackbar(' 上传封面失败', {\n                            variant: 'error',\n                        });\n                    }\n                },\n                error: (err) => {\n                    console.error('fail to upload cover', err);\n                    snackBar.enqueueSnackbar(' 上传封面失败', {\n                        variant: 'error',\n                    });\n                },\n            });\n        }\n    }\n\n    function handleDeleteCover(coverIndex): void {\n        setFormDetail((state) => {\n            const covers = state.covers ?? [];\n            covers.splice(coverIndex, 1);\n\n            return {\n                ...state,\n                covers,\n            };\n        });\n    }\n\n    function handleContentUpdate(event, editor): void {\n        const rawContent = editor.getData();\n\n        setFormDetail((state) => ({\n            ...state,\n            content: rawContent,\n        }));\n        console.log('editor update >>>', rawContent);\n    }\n\n    function clearSelectedFile(e) {\n        e.target.value = null;\n    }\n\n    return (\n        <Box sx={{ '& .MuiTextField-root': { mt: 1, mb: 1 } }} component='form'>\n            <Grid container>\n                <Grid item xs={12}>\n                    <TextField\n                        select\n                        sx={{ minWidth: '200px', mr: 1 }}\n                        id='other-category-root'\n                        label='类型'\n                        value={'0'}\n                        SelectProps={{\n                            readOnly: true,\n                        }}>\n                        <MenuItem key='0' value='0'>\n                            其他\n                        </MenuItem>\n                    </TextField>\n                </Grid>\n                <Grid item xs={12}>\n                    <TextField fullWidth label='标题' value={formDetail.title} onChange={updateInputValue('title')} />\n                </Grid>\n                <Grid item xs={12}>\n                    <TextField\n                        fullWidth\n                        label='摘要'\n                        rows='4'\n                        value={formDetail.summary}\n                        onChange={updateInputValue('summary')}\n                    />\n                </Grid>\n                <Grid item xs={12}>\n                    <Paper sx={{ mt: 1, p: 1, width: '100%' }} variant='outlined'>\n                        <Grid container>\n                            <Grid item xs={1}>\n                                <Typography variant='subtitle1'>封面</Typography>\n                            </Grid>\n                            <Grid item container xs justifyContent='flex-end'>\n                                <label htmlFor='upload-cover'>\n                                    <input\n                                        style={{ display: 'none' }}\n                                        accept='image/*'\n                                        id='upload-cover'\n                                        type='file'\n                                        onChange={handleCoverUpload}\n                                        onClick={clearSelectedFile}\n                                    />\n                                    <Button variant='contained' component='span'>\n                                        添加封面\n                                    </Button>\n                                </label>\n                            </Grid>\n                            <Grid item xs={12}>\n                                <ImageList sx={{ minHeight: '160px', width: '100%' }} cols={5} rowHeight={164}>\n                                    {formDetail.covers?.map((item, index) => (\n                                        <ImageListItem key={item.id}>\n                                            <img src={`${item.img}`} alt={''} />\n                                            <ImageListItemBar\n                                                position=\"top\"\n                                                actionPosition=\"right\"\n                                                actionIcon={\n                                                    <IconButton onClick={() => handleDeleteCover(index)} sx={{ color: 'red' }} >\n                                                        <CancelIcon />\n                                                    </IconButton>\n                                                }\n                                            />\n                                        </ImageListItem>\n                                    )) ?? <div />}\n                                </ImageList>\n                            </Grid>\n                        </Grid>\n                    </Paper>\n                </Grid>\n                <Grid item container xs={12}>\n                    <Paper sx={{ mt: 1, p: 1, width: '100%' }} variant='outlined'>\n                        <Grid container>\n                            <Grid item xs={1}>\n                                <Typography variant='subtitle1'>内容</Typography>\n                            </Grid>\n                            <Grid\n                                item\n                                sx={{\n                                    height: '420px',\n                                    '& .ck-editor__main, & .ck-content': { height: '380px' },\n                                }}\n                                xs={12}>\n                                <CKEditor\n                                    config={{\n                                        extraPlugins: [UploadAdaptorPlugin],\n                                    }}\n                                    editor={ClassicEditor}\n                                    data={formDetail.content}\n                                    onChange={handleContentUpdate}\n                                />\n                            </Grid>\n                        </Grid>\n                    </Paper>\n                </Grid>\n            </Grid>\n        </Box>\n    );\n};\n","import React, { useEffect, useState } from 'react';\nimport { Article } from '../../../models';\nimport { useHistory, useRouteMatch } from 'react-router';\nimport { ActionService, ArticleDataService } from '../../../services';\nimport { Button, Grid } from '@mui/material';\n\nimport { EditForm } from '../components/edit-form';\nimport { ActionMenu } from '../../../components/form/action-menu';\nimport { useSnackbar } from 'notistack';\nimport { switchMap } from 'rxjs';\n\nexport const OtherDetail: React.FC = (props) => {\n    const [detail, setDetail] = useState<Article>({\n        id: 0,\n        category: 0,\n        content: '',\n        covers: [],\n        read_cnt: 0,\n        status: 0,\n        summary: '',\n        title: '',\n        type_id: 0,\n        created_at: '',\n        updated_at: '',\n    });\n\n    const snackBar = useSnackbar();\n    const history = useHistory();\n    const { params } = useRouteMatch<{ id: string }>();\n    const { id } = params;\n\n    useEffect(() => {\n        let actionSubscription = id\n            ? [\n                  ArticleDataService.getDetail(parseInt(id)).subscribe({\n                      next: (resp) => setDetail(resp.data.info),\n                      error: (err) => {\n                          console.error('fail to fetch others detail', err);\n                          snackBar.enqueueSnackbar(' 获取其他详细信息失败', {\n                              variant: 'error',\n                          });\n                      },\n                  }),\n                  ActionService.handleAction('withdraw')\n                      .pipe(switchMap(() => ArticleDataService.withdraw(parseInt(id))))\n                      .subscribe({\n                          next: () => {\n                              history.push('/admin/others');\n                              snackBar.enqueueSnackbar(' 撤稿成功', {\n                                  variant: 'success',\n                              });\n                          },\n                          error: (err) => {\n                              console.error('fail to publish', err);\n                              snackBar.enqueueSnackbar(' 撤稿失败', {\n                                  variant: 'error',\n                              });\n                          },\n                      }),\n\n                  ActionService.handleAction('publish')\n                      .pipe(switchMap(() => ArticleDataService.publish(parseInt(id))))\n                      .subscribe({\n                          next: () => {\n                              history.push('/admin/others');\n                              snackBar.enqueueSnackbar(' 发布成功', {\n                                  variant: 'success',\n                              });\n                          },\n                          error: (err) => {\n                              console.error('fail to publish', err);\n                              snackBar.enqueueSnackbar(' 发布失败', {\n                                  variant: 'error',\n                              });\n                          },\n                      }),\n              ]\n            : [];\n\n        return () => {\n            if (actionSubscription.length > 0) {\n                for (const subscription of actionSubscription) {\n                    subscription.unsubscribe();\n                }\n            }\n        };\n    }, [id, snackBar, history]);\n\n    function goBack() {\n        history.goBack();\n    }\n\n    return (\n        <Grid container spacing={2} sx={{ pr: 2, pl: 1 }}>\n            <Grid container item xs={12}>\n                <Grid item xs={1} sx={{ pl: 1 }}>\n                    <Button variant='outlined' onClick={goBack}>\n                        返回\n                    </Button>\n                </Grid>\n                <Grid item container justifyContent='flex-end' xs>\n                    <ActionMenu status={detail?.status} isCreate={detail?.id === 0} />\n                </Grid>\n            </Grid>\n            <Grid item xs={12}>\n                <EditForm detail={detail} />\n            </Grid>\n        </Grid>\n    );\n};\n","import { Grid, IconButton, MenuItem, TextField } from '@mui/material';\nimport SearchIcon from '@mui/icons-material/Search';\nimport ClearIcon from '@mui/icons-material/Clear';\nimport React from 'react';\n\nexport const categoryList = {\n    1: '产品类型',\n    2: '应用类型',\n    3: '新闻类型',\n};\n\nexport const FilterToolbar: React.FC<{ filter, setFilter }> = ({ filter, setFilter }) => {\n    function handleFilterTypeChange(e) {\n        setFilter({\n            limit: filter.limit,\n            offset: 0,\n            category: e.target.value,\n            kw: '',\n        });\n    }\n\n    function handleKWChange(e) {\n        setFilter((state) => ({\n            ...state,\n            offset: 0,\n            kw: e.target?.value ?? '',\n        }));\n    }\n\n    return <Grid container spacing={1} sx={{ m: 1 }}>\n        <Grid item xs={2}>\n            <TextField\n                select\n                fullWidth\n                id='category-filter'\n                label='类型'\n                value={filter.category}\n                onChange={handleFilterTypeChange}\n            >\n                {\n                    Object.entries(categoryList).map(([key, value]) => {\n                        return <MenuItem key={`category-${key}`} value={parseInt(key)}>\n                            {value}\n                        </MenuItem>;\n                    })\n                }\n            </TextField>\n        </Grid>\n        <Grid item xs={3} sx={{ display: 'flex', alignItems: 'center' }}>\n            <TextField\n                variant='standard'\n                value={filter.kw}\n                onChange={handleKWChange}\n                placeholder='关键字查找'\n                InputProps={{\n                    startAdornment: <SearchIcon fontSize='small' />,\n                    endAdornment: (\n                        <IconButton\n                            title='Clear'\n                            aria-label='Clear'\n                            size='small'\n                            style={{ visibility: filter.kw ? 'visible' : 'hidden' }}\n                            onClick={handleKWChange}\n                        >\n                            <ClearIcon fontSize='small' />\n                        </IconButton>\n                    ),\n                }}\n            />\n        </Grid>\n    </Grid>;\n};\n","import React, { useEffect, useState } from \"react\";\nimport { ArticleType } from \"../../../models\";\nimport { Button, Dialog, DialogActions, DialogContent, DialogTitle, MenuItem, TextField } from \"@mui/material\";\n\nexport interface CategoryDetailDialogProps {\n    category: number;\n    title: string;\n    typeList: ArticleType[];\n    open: boolean;\n    typeDetail?: ArticleType;\n    onSave?: (form: ArticleType) => void;\n    onClose?: () => void;\n}\n\nexport const CategoryDetailDialog: React.FC<CategoryDetailDialogProps> = ({\n                                                                              category,\n                                                                              title,\n                                                                              open,\n                                                                              typeList,\n                                                                              onSave,\n                                                                              onClose,\n                                                                              typeDetail\n                                                                          }) => {\n    const [formDetail, setFormDetail] = useState<ArticleType>(typeDetail);\n    useEffect(() => {\n        setFormDetail(typeDetail);\n    }, [typeDetail]);\n\n    function handleClose() {\n        onClose && onClose();\n    }\n\n    function handleSubmit() {\n        onSave && onSave(formDetail);\n    }\n\n    function handleNameChange(e) {\n        setFormDetail((state) => ({\n            ...state,\n            name: e.target.value\n        }));\n    }\n\n    function handleParentIdChange(e) {\n        setFormDetail((state) => ({\n            ...state,\n            parent_id: e.target.value\n        }));\n    }\n\n    return (\n      <Dialog open={open}>\n          <DialogTitle>{title}</DialogTitle>\n          {open &&\n          <DialogContent>\n            <TextField\n              autoFocus\n              required\n              margin=\"dense\"\n              id=\"name\"\n              label=\"名称\"\n              type=\"text\"\n              value={formDetail?.name ?? \"\"}\n              fullWidth\n              onChange={handleNameChange}\n            />\n              {category === 1 && (\n                <TextField\n                  select\n                  autoFocus\n                  margin=\"dense\"\n                  id=\"parent_id\"\n                  label=\"父级类型\"\n                  type=\"text\"\n                  value={formDetail?.parent_id ?? \"\"}\n                  fullWidth\n                  onChange={handleParentIdChange}\n                  SelectProps={{\n                      readOnly: formDetail?.id >= 0\n                  }}>\n                    <MenuItem key=\"empty\" value={\"\"}>\n                        无\n                    </MenuItem>\n                    {typeList.map((x) => {\n                        return (\n                          <MenuItem key={x.id} value={x.id}>\n                              {x.name}\n                          </MenuItem>\n                        );\n                    })}\n                </TextField>\n              )}\n          </DialogContent>\n          }\n          <DialogActions>\n              <Button onClick={handleClose}>取消</Button>\n              <Button variant=\"contained\" onClick={handleSubmit}>\n                  保存\n              </Button>\n          </DialogActions>\n      </Dialog>\n    );\n};\n","import React, { useEffect, useState } from \"react\";\nimport { DataGrid, GridColDef, GridRenderEditCellParams } from \"@mui/x-data-grid\";\n\nimport { ArticleTypeDataService } from \"../../services\";\nimport { ArticleFilter, ArticleType } from \"../../models\";\nimport { Box, Fab, IconButton } from \"@mui/material\";\nimport AddIcon from \"@mui/icons-material/Add\";\nimport EditIcon from \"@mui/icons-material/Edit\";\nimport DeleteIcon from \"@mui/icons-material/Delete\";\nimport { categoryList, FilterToolbar } from \"./components/filter-toolbar\";\nimport { CategoryDetailDialog, CategoryDetailDialogProps } from \"./components/category-detail-dialog\";\nimport { ConfirmDeleteDialog, ConfirmDeleteDialogProps } from \"../../components/dialog/confirm-delete-dialog\";\nimport { tap } from \"rxjs\";\nimport { CHANNEL_APP_BAR_TITLE, Portal } from \"../../components/portal\";\nimport { useSnackbar } from \"notistack\";\n\nexport const Settings = () => {\n    const [filter, setFilter] = useState<ArticleFilter>({ kw: \"\", limit: 20, offset: 0, category: 1 });\n    const [dataSource, setDataSource] = useState<ArticleType[]>([]);\n    const [detailDialog, setDetailDialog] = useState<CategoryDetailDialogProps>({\n        open: false,\n        category: -1,\n        typeList: [],\n        title: \"\"\n    });\n    const [deleteDialog, setDeleteDialog] = useState<ConfirmDeleteDialogProps>({\n        open: false\n    });\n    const [fetchFlag, setFetchFlag] = useState(new Date().valueOf());\n    const snackBar = useSnackbar();\n\n    useEffect(() => {\n        const typeListSubscription = ArticleTypeDataService.getList(filter.category).subscribe(({ errcode, data }) => {\n            if (errcode === 0) {\n                setDataSource(data.list);\n            } else {\n                snackBar.enqueueSnackbar(\"获取类型列表失败\", {\n                    variant: \"error\"\n                });\n            }\n        });\n\n        return () => {\n            typeListSubscription.unsubscribe();\n        };\n    }, [filter.category, snackBar, fetchFlag]);\n\n    function deleteItem(item: ArticleType) {\n        setDeleteDialog({\n            open: true,\n            message: `确认删除\"${item.name}\"?`,\n            onClose(): void {\n                setDeleteDialog({ open: false });\n            },\n            onConfirm(): void {\n                ArticleTypeDataService.delete(item.id)\n                  .pipe(\n                    tap(() => {\n                        setDeleteDialog({ open: false });\n                        setFetchFlag(new Date().valueOf());\n                    })\n                  )\n                  .subscribe();\n            }\n        });\n    }\n\n    const cols: GridColDef[] = [\n        {\n            field: \"id\",\n            headerName: \"类型Id\",\n            sortable: false\n        },\n        {\n            field: \"name\",\n            headerName: \"名称\",\n            flex: 1,\n            sortable: false\n        },\n        {\n            field: \"parent_id\",\n            headerName: \"父类型id\",\n            sortable: false\n        },\n        {\n            field: \"category\",\n            headerName: \"操作\",\n            flex: 1,\n            sortable: false,\n            renderCell: (params: GridRenderEditCellParams) => {\n                return (\n                  <>\n                      <IconButton onClick={() => editItemDialog(params.row)}>\n                          <EditIcon />\n                      </IconButton>\n                      <IconButton onClick={() => deleteItem(params.row)}>\n                          <DeleteIcon />\n                      </IconButton>\n                  </>\n                );\n            }\n        }\n    ];\n\n    function pageChange(pageNumber: number): void {\n        setFilter((filter) => ({ ...filter, offset: pageNumber }));\n    }\n\n    function pageSizeChange(pageSize: number): void {\n        setFilter((filter) => ({ ...filter, limit: pageSize, offset: 0 }));\n    }\n\n    const filterData = () => {\n        let result = dataSource;\n        if (filter.kw) {\n            result = dataSource.filter((x) => x.name.includes(filter.kw));\n        }\n\n        const step = filter.offset * filter.limit;\n        return result.filter((x, i) => i >= step && i < step + filter.limit);\n    };\n\n    function closeDetailDialog() {\n        setDetailDialog((state) => ({\n            ...state,\n            onSave: null,\n            onClose: null,\n            open: false\n        }));\n    }\n\n    const saveObserver = {\n        next: (resp) => {\n            if (resp.errcode === 0) {\n                setDetailDialog(null);\n                setFetchFlag(new Date().valueOf());\n            } else {\n                console.error(\"保存类型失败\", resp.errmessage);\n                snackBar.enqueueSnackbar(\"保存失败\", {\n                    variant: \"error\"\n                });\n            }\n        },\n        error: (error) => {\n            console.error(\"保存类型失败\", error);\n            snackBar.enqueueSnackbar(\"保存失败\", {\n                variant: \"error\"\n            });\n        }\n    };\n\n    function createItem(newForm: ArticleType) {\n        ArticleTypeDataService.creat({\n            category: newForm.category,\n            name: newForm.name,\n            parent_id: newForm.parent_id\n        }).subscribe(saveObserver);\n    }\n\n    function saveItem(newForm: ArticleType) {\n        ArticleTypeDataService.edit({\n            id: newForm.id,\n            name: newForm.name\n        }).subscribe(saveObserver);\n    }\n\n    function editItemDialog(item: ArticleType) {\n        setDetailDialog({\n            open: true,\n            title: `编辑${categoryList[filter.category]}`,\n            category: filter.category,\n            typeList: dataSource,\n            onClose: closeDetailDialog,\n            onSave: saveItem,\n            typeDetail: item\n        });\n    }\n\n    function newItemDialog() {\n        setDetailDialog({\n            open: true,\n            title: `新增${categoryList[filter.category]}`,\n            category: filter.category,\n            typeList: dataSource,\n            onClose: closeDetailDialog,\n            onSave: createItem,\n            typeDetail: {\n                id: -1,\n                name: \"\",\n                parent_id: null,\n                category: filter.category\n            }\n        });\n    }\n\n    return (\n      <Box sx={{ height: \"100%\", width: \"100%\", p: 1 }}>\n          <DataGrid\n            autoHeight\n            disableColumnMenu={true}\n            disableColumnFilter={true}\n            pagination\n            pageSize={filter.limit}\n            page={filter.offset}\n            rowCount={filterData().length}\n            paginationMode=\"server\"\n            rowsPerPageOptions={[10, 20, 50, 100]}\n            onPageChange={pageChange}\n            onPageSizeChange={pageSizeChange}\n            components={{ Toolbar: FilterToolbar }}\n            componentsProps={{\n                toolbar: {\n                    filter,\n                    setFilter\n                }\n            }}\n            columns={cols}\n            rows={filterData()}\n          />\n          <Fab\n            sx={{\n                position: \"fixed\",\n                bottom: 16,\n                right: 48\n            }}\n            size=\"medium\"\n            color=\"primary\"\n            aria-label=\"add\"\n            onClick={newItemDialog}>\n              <AddIcon />\n          </Fab>\n          <CategoryDetailDialog {...detailDialog} />\n          <ConfirmDeleteDialog {...deleteDialog} />\n\n          <Portal channel={CHANNEL_APP_BAR_TITLE}>类型设置</Portal>\n      </Box>\n    );\n};\n","import React, { useMemo, useState } from 'react';\nimport { Avatar, Box, Button, Container, TextField, Typography } from '@mui/material';\n\nimport LockOutlinedIcon from '@mui/icons-material/LockOutlined';\nimport { LoginService } from '../../services';\nimport { useHistory } from 'react-router';\nimport { useSnackbar } from 'notistack';\n\nexport const Login = () => {\n    const [codeState, setCodeState] = useState(new Date().valueOf());\n    const [loginForm, setLoginForm] = useState({\n        email: '',\n        password: '',\n        code: '',\n    });\n    const [errorForm, setErrorForm] = useState({\n        email: false,\n        password: false,\n        code: false,\n        summary: '',\n    });\n    const history = useHistory();\n    const snakeBar = useSnackbar();\n\n    function handleSubmit(e) {\n        e.preventDefault();\n\n        if (loginForm.email && loginForm.password && loginForm.code) {\n            setErrorForm({\n                email: false,\n                code: false,\n                password: false,\n                summary: '',\n            });\n            LoginService.signIn(loginForm).subscribe({\n                next: (resp) => {\n                    if (resp.errcode === 0) {\n                        history.push('/');\n                        window.location.reload();\n                    } else {\n                        setErrorForm({\n                            ...errorForm,\n                            summary: resp.errmessage,\n                        });\n                        setCodeState(new Date().valueOf())\n                    }\n                },\n                error: (err) => {\n                    snakeBar.enqueueSnackbar('登录失败', {\n                        variant: 'error',\n                    });\n                    setCodeState(new Date().valueOf())\n                },\n            });\n        } else {\n            const newState = {\n                email: !loginForm.email,\n                password: !loginForm.password,\n                code: !loginForm.code,\n            };\n            setErrorForm({ ...errorForm, ...newState });\n        }\n    }\n\n    function updatedFormValue(key) {\n        return (e) => {\n            setErrorForm({\n                ...errorForm,\n                [key]: !e.target?.value,\n            });\n\n            setLoginForm((state) => ({\n                ...state,\n                [key]: e.target.value,\n            }));\n        };\n    }\n\n    function refreshCode(): void {\n        setCodeState(new Date().valueOf());\n    }\n\n    const codeUrl = useMemo(() => {\n        return `/verify/code?state=${codeState}`;\n    }, [codeState]);\n\n    return (\n        <Container maxWidth='xs'>\n            <Box\n                sx={{\n                    marginTop: 8,\n                    display: 'flex',\n                    flexDirection: 'column',\n                    alignItems: 'center',\n                }}>\n                <Avatar sx={{ m: 1, bgcolor: 'secondary.main' }}>\n                    <LockOutlinedIcon />\n                </Avatar>\n                <Typography component='h1' variant='h5'>\n                    登录\n                </Typography>\n                <Box component='form' onSubmit={handleSubmit} noValidate sx={{ mt: 1 }}>\n                    <TextField\n                        margin='normal'\n                        required\n                        fullWidth\n                        id='email'\n                        label='电子邮箱'\n                        name='email'\n                        autoComplete='email'\n                        autoFocus\n                        value={loginForm.email}\n                        onChange={updatedFormValue('email')}\n                        error={errorForm.email}\n                        helperText={errorForm.email && '请输入电子邮箱'}\n                    />\n                    <TextField\n                        margin='normal'\n                        required\n                        fullWidth\n                        name='password'\n                        label='密码'\n                        type='password'\n                        id='password'\n                        autoComplete='current-password'\n                        value={loginForm.password}\n                        onChange={updatedFormValue('password')}\n                        error={errorForm.password}\n                        helperText={errorForm.password && '请输入密码'}\n                    />\n                    <TextField\n                        margin='normal'\n                        required\n                        fullWidth\n                        name='code'\n                        label='验证码'\n                        id='code'\n                        value={loginForm.code}\n                        onChange={updatedFormValue('code')}\n                        InputProps={{\n                            endAdornment: <img src={codeUrl} onClick={refreshCode} alt='验证码' />,\n                        }}\n                        error={errorForm.code}\n                        helperText={errorForm.code && '请输入验证码'}\n                    />\n                    {errorForm.summary && (\n                        <Typography variant='overline' color={'red'}>\n                            {errorForm.summary}\n                        </Typography>\n                    )}\n                    <Button type='submit' fullWidth variant='contained' sx={{ mt: 3, mb: 2 }}>\n                        登录\n                    </Button>\n                </Box>\n            </Box>\n        </Container>\n    );\n};\n","import React, { useEffect, useState } from \"react\";\nimport { Box } from \"@mui/material\";\nimport { Redirect, Route, Switch } from \"react-router-dom\";\nimport { AuthLayout, PublicLayout } from \"../layout\";\nimport { Products } from \"../pages/products\";\nimport { ProductDetail } from \"../pages/products/detail\";\nimport { Applications } from \"../pages/applications\";\nimport { ApplicationDetail } from \"../pages/applications/detail\";\nimport { News } from \"../pages/news\";\nimport { NewsDetail } from \"../pages/news/detail\";\nimport { Others } from \"../pages/others\";\nimport { OtherDetail } from \"../pages/others/detail\";\nimport { Settings } from \"../pages/settings\";\nimport { Login } from \"../pages/login\";\nimport { useHistory } from \"react-router\";\nimport { UserService } from \"../services\";\n\nexport const RouterConfig = () => {\n    const history = useHistory();\n    const [auth, setAuth] = useState(null);\n\n    useEffect(() => {\n        const useInfoSubscription = UserService.getUserInfo().subscribe({\n            next: (resp) => {\n                if (resp.errcode === 401) {\n                    history.push(\"/admin/login\");\n                    setAuth(false);\n                } else {\n                    setAuth(true);\n                }\n            },\n            error: (error) => {\n                console.error(\"fail to get user info\", error);\n                history.push(\"/admin/login\");\n                setAuth(false);\n            }\n        });\n\n        return () => {\n            useInfoSubscription.unsubscribe();\n        };\n    }, [history, auth]);\n\n    return (\n      <Box sx={{\n          height: '100vh',\n          overflowY: 'auto',\n      }}>\n          <Switch>\n              <Route path={\"/admin/login\"} exact={true}>\n                  <PublicLayout>\n                      <Login />\n                  </PublicLayout>\n              </Route>\n          </Switch>\n          {\n              auth &&\n              <AuthLayout>\n                <Switch>\n                  <Route path={\"/\"} exact={true}>\n                    <Redirect to={\"/admin/products\"} />\n                  </Route>\n                  <Route path={\"/admin/settings\"} exact={true}>\n                    <Settings />\n                  </Route>\n                  <Route path={\"/admin/products\"} exact={true}>\n                    <Products />\n                  </Route>\n                  <Route path={\"/admin/products/create\"} exact={true}>\n                    <ProductDetail />\n                  </Route>\n                  <Route path={\"/admin/products/detail/:id\"} exact={true}>\n                    <ProductDetail />\n                  </Route>\n                  <Route path={\"/admin/applications\"} exact={true}>\n                    <Applications />\n                  </Route>\n                  <Route path={\"/admin/applications/create\"} exact={true}>\n                    <ApplicationDetail />\n                  </Route>\n                  <Route path={\"/admin/applications/detail/:id\"} exact={true}>\n                    <ApplicationDetail />\n                  </Route>\n                  <Route path={\"/admin/news\"} exact={true}>\n                    <News />\n                  </Route>\n                  <Route path={\"/admin/news/create\"} exact={true}>\n                    <NewsDetail />\n                  </Route>\n                  <Route path={\"/admin/news/detail/:id\"} exact={true}>\n                    <NewsDetail />\n                  </Route>\n                  <Route path={\"/admin/others\"} exact={true}>\n                    <Others />\n                  </Route>\n                  <Route path={\"/admin/others/create\"} exact={true}>\n                    <OtherDetail />\n                  </Route>\n                  <Route path={\"/admin/others/detail/:id\"} exact={true}>\n                    <OtherDetail />\n                  </Route>\n                </Switch>\n              </AuthLayout>\n          }\n      </Box>\n    );\n};\n","import React from 'react';\nimport { CssBaseline, ThemeProvider } from '@mui/material';\nimport theme from './theme';\nimport { RouterConfig } from './route';\nimport { SnackbarProvider } from 'notistack';\n\nexport const App = (props) => {\n    return (\n        <ThemeProvider theme={theme}>\n            <CssBaseline />\n            <SnackbarProvider\n                maxSnack={3}\n                anchorOrigin={{\n                    vertical: 'top',\n                    horizontal: 'right',\n                }}>\n                <RouterConfig />\n            </SnackbarProvider>\n        </ThemeProvider>\n    );\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { HashRouter } from \"react-router-dom\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { App } from \"./App\";\nimport { loadCSRFToken } from \"./utils\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <HashRouter>\n      <App />\n    </HashRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\nif (process.env.NODE_ENV !== \"production\") {\n  // const worker = require('./mocks').default\n  // worker.start()\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n  reportWebVitals();\n}\n\n/**\n * Next we will register the CSRF Token as a common header with Axios so that\n * all outgoing HTTP requests automatically have it attached. This is just\n * a simple convenience so we don't have to attach every token manually.\n */\nlet token: HTMLInputElement = document.body.querySelector(\"input[name=\\\"_token\\\"]\");\n\nif (token) {\n  loadCSRFToken(token.value);\n} else {\n  console.error(\"CSRF token not found: https://laravel.com/docs/csrf#csrf-x-csrf-token\");\n}\n"],"sourceRoot":""}