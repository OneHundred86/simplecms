{"version":3,"sources":["theme/index.ts","services/loading-state-service.ts","utils/request.ts","services/article-data-service.ts","services/article-type-data-service.ts","services/file-upload-service.ts","services/action-service.ts","services/login-service.tsx","services/portal-message-service.ts","services/user-service.ts","components/portal/index.tsx","layout/app-bar.tsx","layout/menu.tsx","layout/auth-layout.tsx","layout/public-layout.tsx","components/table/quick-filter-toolbar.tsx","components/dialog/confirm-delete-dialog.tsx","pages/products/index.tsx","components/form/upload-adaptor-plugin.ts","pages/products/components/edit-form.tsx","components/form/action-menu.tsx","pages/products/detail/index.tsx","pages/applications/index.tsx","pages/applications/components/edit-form.tsx","pages/applications/detail/index.tsx","pages/news/index.tsx","pages/news/components/edit-form.tsx","pages/news/detail/index.tsx","pages/others/index.tsx","pages/others/components/edit-form.tsx","pages/others/detail/index.tsx","pages/settings/components/filter-toolbar.tsx","pages/settings/components/category-detail-dialog.tsx","pages/settings/index.tsx","pages/login/index.tsx","route/index.tsx","App.tsx","index.tsx"],"names":["theme","createTheme","palette","primary","main","secondary","error","red","A400","loadingSubject","BehaviorSubject","loading","this","next","asObservable","axiosInstance","axios","create","timeout","headers","withCredentials","request","url","method","config","of","pipe","tap","LoadingStateService","setLoading","mergeMap","Object","assign","map","resp","data","catchError","throwError","finalize","postFormData","post","getList","params","getDetail","id","edit","delete","publish","withdraw","category","creat","postImage","form","postVideo","actionSubject","Subject","save","handleAction","action","filter","x","signIn","email","password","code","encryptPwd","MD5","toString","console","log","signOut","_portalMessageSubject","message","type","body","getUserInfo","Portal","children","channel","useEffect","PortalMessageService","CHANNEL_APP_BAR_TITLE","StyleAppBar","styled","MuiAppBar","shouldForwardProp","prop","open","zIndex","drawer","transition","transitions","easing","sharp","duration","leavingScreen","marginLeft","enteringScreen","AppBar","toggleDrawer","useState","title","setTitle","titleSubscription","onMessage","subscribe","newTitle","unsubscribe","position","Toolbar","sx","pr","IconButton","edge","color","onClick","marginRight","Typography","component","variant","noWrap","flexGrow","openedMixin","width","marginTop","overflowX","DrawerHeader","display","alignItems","justifyContent","padding","spacing","mixins","toolbar","Drawer","MuiDrawer","flexShrink","whiteSpace","boxSizing","breakpoints","up","closedMixin","AppMenu","Divider","List","to","ListItem","ListItemIcon","ListItemText","AuthLayout","openDrawer","setOpenDrawer","Box","height","overflow","flexDirection","Container","maxWidth","Paper","mt","mb","PublicLayout","props","InlineSearchBox","flexWrap","down","borderBottom","divider","filterSubject","QuickFilterToolbar","inputRef","useRef","filterSubscription","debounceTime","value","setFilter","kw","offset","TextField","defaultValue","onChange","e","target","placeholder","InputProps","startAdornment","fontSize","endAdornment","size","style","visibility","current","ConfirmDeleteDialog","onClose","onConfirm","Dialog","DialogTitle","DialogContent","dividers","DialogContentText","DialogActions","Button","autoFocus","Products","limit","dataSource","setDataSource","totalSize","setTotalSize","deleteDialog","setDeleteDialog","history","useHistory","snackBar","useSnackbar","ArticleDataService","errcode","list","total","enqueueSnackbar","err","cols","field","headerName","sortable","renderCell","row","name","Link","item","p","autoHeight","disableColumnMenu","disableColumnFilter","pagination","pageSize","page","rowCount","rowsPerPageOptions","onPageChange","pageNumber","onPageSizeChange","components","componentsProps","columns","rows","Fab","bottom","right","push","MyUploadAdapter","loader","_uploadTask","upload","formData","FormData","file","then","append","lastValueFrom","FileUploadService","default","catch","abort","UploadAdaptorPlugin","editor","plugins","get","createUploadAdapter","EditForm","detail","formDetail","setFormDetail","categoryList","setCategoryList","selectedRootCategory","setSelectedRootCategory","ArticleTypeDataService","type_id","find","parent_id","saveAction","ActionService","switchMap","content","summary","covers","img","errmessage","updateInputValue","key","state","Grid","container","xs","select","minWidth","mr","label","targetCategory","MenuItem","fullWidth","htmlFor","accept","files","length","Math","ceil","random","article_id","ImageList","minHeight","rowHeight","ImageListItem","src","srcSet","alt","extraPlugins","ClassicEditor","event","rawContent","getData","ActionMenu","status","isCreate","anchorEl","setAnchorEl","closeMenu","handleSave","undefined","disableElevation","currentTarget","endIcon","anchorOrigin","vertical","horizontal","transformOrigin","MenuListProps","PaperProps","ProductDetail","read_cnt","created_at","updated_at","setDetail","useRouteMatch","actionSubscription","parseInt","info","pl","goBack","Applications","ApplicationDetail","News","NewsDetail","Others","SelectProps","readOnly","OtherDetail","FilterToolbar","handleKWChange","m","entries","CategoryDetailDialog","typeList","onSave","typeDetail","required","margin","Settings","detailDialog","setDetailDialog","Date","valueOf","fetchFlag","setFetchFlag","typeListSubscription","closeDetailDialog","saveItem","saveObserver","createItem","newForm","result","includes","step","i","filterData","Login","codeState","setCodeState","loginForm","setLoginForm","errorForm","setErrorForm","snakeBar","updatedFormValue","codeUrl","useMemo","Avatar","bgcolor","onSubmit","preventDefault","LoginService","window","location","reload","newState","noValidate","autoComplete","helperText","RouterConfig","auth","setAuth","useInfoSubscription","UserService","overflowY","path","exact","App","ThemeProvider","CssBaseline","maxSnack","ReactDOM","render","StrictMode","document","getElementById","token","querySelector","defaults","common","loadCSRFToken"],"mappings":"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","file":"static/js/main.5224da78.chunk.js","sourcesContent":["import {red} from '@mui/material/colors';\nimport {createTheme} from '@mui/material/styles';\n\n// A custom theme for this app\nconst theme = createTheme({\n    palette: {\n        primary: {\n            main: '#556cd6',\n        },\n        secondary: {\n            main: '#19857b',\n        },\n        error: {\n            main: red.A400,\n        },\n    },\n});\n\nexport default theme;","import { BehaviorSubject, Observable } from 'rxjs'\n\nclass LoadingStateService {\n    loadingSubject = new BehaviorSubject(false)\n\n    setLoading(loading: boolean) {\n        this.loadingSubject.next(loading)\n    }\n\n    subscribe(): Observable<boolean> {\n        return this.loadingSubject.asObservable()\n    }\n}\n\nexport default new LoadingStateService()","import { catchError, finalize, map, mergeMap, of, tap, throwError } from 'rxjs';\nimport axios, { AxiosRequestConfig, AxiosResponse, Method } from 'axios';\nimport { LoadingStateService } from '../services';\n\nconst defaultRequestConfig = {\n    'Content-Type': 'application/json; charset=utf-8',\n    'X-Requested-With': 'XMLHttpRequest',\n};\n\nconst axiosInstance = axios.create({\n    timeout: 6000,\n    headers: defaultRequestConfig,\n    withCredentials: true,\n});\n\nexport function loadCSRFToken(token) {\n    axiosInstance.defaults.headers.common['X-CSRF-TOKEN'] = token;\n}\n\nexport const request = <T>(url: string, method: Method, config: AxiosRequestConfig = {}) => {\n    return of({}).pipe(\n        tap(() => LoadingStateService.setLoading(true)),\n        mergeMap(() =>\n            axiosInstance.request<T>(\n                Object.assign({}, config, {\n                    url,\n                    method,\n                })\n            )\n        ),\n        map((resp) => resp.data),\n        catchError((error) => {\n            return throwError(error);\n        }),\n        finalize(() => LoadingStateService.setLoading(false))\n    );\n};\n\nexport const postFormData = <T>(\n    url: string,\n    data: FormData,\n    config: AxiosRequestConfig = {\n        headers: {\n            'Content-Type': 'multipart/form-data',\n        },\n    }\n) => {\n    return of({}).pipe(\n        tap(() => LoadingStateService.setLoading(true)),\n        mergeMap(() => axios.post<FormData, AxiosResponse<T>>(url, data, config)),\n        map((resp) => resp.data),\n        catchError((error) => {\n            return throwError(error);\n        }),\n        finalize(() => LoadingStateService.setLoading(false))\n    );\n};\n","import { request } from '../utils';\nimport {\n    ArticleCreateRequest,\n    ArticleDetailResponse,\n    ArticleEditRequest,\n    ArticleFilter,\n    ArticleListResponse,\n    VoidResponse,\n} from '../models';\n\nclass ArticleDataService {\n    getList = (params: ArticleFilter) => {\n        return request<ArticleListResponse>(`/admin/article/list`, 'GET', {\n            params,\n        });\n    };\n\n    getDetail = (id: number) => {\n        return request<ArticleDetailResponse>(`/admin/article/info`, 'GET', {\n            params: {\n                id,\n            },\n        });\n    };\n\n    create = (data: ArticleCreateRequest) => {\n\n        return request<VoidResponse>(`/admin/article/add`, 'POST', {\n            data,\n        });\n    };\n    edit = (data: ArticleEditRequest) => {\n        return request<VoidResponse>(`/admin/article/edit`, 'POST', {\n            data,\n        });\n    };\n\n    delete = (id: number) => {\n        return request<void>(`/admin/article/del`, 'POST', {\n            data: {\n                id,\n            },\n        });\n    };\n\n    publish = (id: number) => {\n        return request<void>(`/admin/article/publish`, 'POST', {\n            params: {\n                id,\n            },\n        });\n    };\n    withdraw = (id: number) => {\n        return request<void>(`/admin/article/withdraw`, 'POST', {\n            params: {\n                id,\n            },\n        });\n    };\n}\n\nexport default new ArticleDataService();","import { request } from '../utils';\nimport { ArticleTypeCreateRequest, ArticleTypeEditRequest, ArticleTypeListResponse } from '../models';\n\nclass ArticleTypeDataService {\n    getList = (category: number) => {\n        return request<ArticleTypeListResponse>(`/admin/article/type/list`, 'GET', {\n            params: {\n                category,\n            },\n        });\n    };\n\n    creat = (data: ArticleTypeCreateRequest) => {\n        return request<void>(`/admin/article/type/add`, 'POST', {\n            data,\n        });\n    };\n    edit = (data: ArticleTypeEditRequest) => {\n        return request<void>(`/admin/article/type/edit`, 'POST', {\n            data,\n        });\n    };\n\n    delete = (id: number) => {\n        return request<void>(`/admin/article/type/del`, 'POST', {\n            data: {\n                id,\n            },\n        });\n    };\n}\n\nexport default new ArticleTypeDataService();","import { postFormData } from '../utils';\nimport { FileUploadResponse } from '../models';\nimport { Observable } from 'rxjs';\n\nclass FileUploadService {\n    postImage: (form: FormData) => Observable<FileUploadResponse> = (form) => {\n        return postFormData<FileUploadResponse>(`/admin/upload/image`, form);\n    }\n\n    postVideo = (form) => {\n        return postFormData<FileUploadResponse>(`/admin/upload/video`, form);\n    }\n}\n\nexport default new FileUploadService();","import { filter, Observable, Subject } from 'rxjs';\n\nclass ActionService {\n    private actionSubject = new Subject<string>();\n\n    save = (): void => {\n        this.actionSubject.next('save');\n    };\n\n    publish = (): void => {\n        this.actionSubject.next('publish');\n    };\n    withdraw = (): void => {\n        this.actionSubject.next('withdraw');\n    };\n\n    handleAction = (action: string): Observable<string> => {\n        return this.actionSubject.pipe(filter(x => x === action));\n    };\n}\n\nexport default new ActionService();","import { request } from '../utils';\nimport { LoginResponse } from '../models';\nimport MD5 from 'crypto-js/md5';\n\nclass LoginService {\n    signIn = ({ email, password, code }) => {\n        const encryptPwd = MD5(password).toString();\n        console.log('earo say the pwd', password, encryptPwd);\n\n        return request<LoginResponse>(`/admin/login`, 'POST', {\n            data: {\n                email,\n                password: encryptPwd,\n                code,\n            },\n        });\n    };\n    signOut = () => {\n        return request<void>(`/admin/sign`, 'GET');\n    };\n}\n\nexport default new LoginService();\n","import { BehaviorSubject, filter, map, Observable } from 'rxjs';\nimport { ReactElement, ReactNode } from 'react';\n\nclass PortalMessageService {\n    private _portalMessageSubject = new BehaviorSubject<{ type: string, body: ReactElement | ReactNode }>(null);\n\n    publish(message: { type: string, body: ReactElement | ReactNode }): void {\n        this._portalMessageSubject.next(message);\n    }\n\n    onMessage(type): Observable<ReactElement | ReactNode> {\n        return this._portalMessageSubject.pipe(filter(x => x?.type === type), map(x => x.body));\n    }\n}\n\nexport default new PortalMessageService();","import { request } from \"../utils\";\nimport { UserInfoResponse } from \"../models\";\n\nclass UserService {\n    getUserInfo = () => {\n        return request<UserInfoResponse>(`/admin/self/user/info`, \"GET\");\n    };\n}\n\nexport default new UserService();\n","import React, { useEffect } from 'react';\nimport { PortalMessageService } from '../../services';\n\nexport const Portal: React.FC<{ channel: string }> = ({ children, channel }) => {\n    useEffect(() => {\n        PortalMessageService.publish({\n            type: channel,\n            body: children,\n        });\n    }, [children, channel]);\n\n    return null;\n};\n\nexport const CHANNEL_APP_BAR_TITLE = 'appBarTitle';\n","import React, { useEffect, useState } from 'react';\nimport { IconButton, styled, Toolbar, Typography } from '@mui/material';\nimport MuiAppBar, { AppBarProps as MuiAppBarProps } from '@mui/material/AppBar';\nimport MenuIcon from '@mui/icons-material/Menu';\nimport { PortalMessageService } from '../services';\nimport { CHANNEL_APP_BAR_TITLE } from '../components/portal';\n\ninterface AppBarProps extends MuiAppBarProps {\n    open?: boolean;\n}\n\nconst StyleAppBar = styled(MuiAppBar, {\n    shouldForwardProp: (prop) => prop !== 'open',\n})<AppBarProps>(({ theme, open }) => ({\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create(['width', 'margin'], {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen,\n    }),\n    ...(open && {\n        marginLeft: '200px',\n        // width: `calc(100% - 240px)`,\n        transition: theme.transitions.create(['width', 'margin'], {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.enteringScreen,\n        }),\n    }),\n}));\n\nexport const AppBar: React.FC<{ open; toggleDrawer }> = ({ open, toggleDrawer }) => {\n    const [title, setTitle] = useState(null);\n\n    useEffect(() => {\n        const titleSubscription = PortalMessageService.onMessage(CHANNEL_APP_BAR_TITLE).subscribe((newTitle) => {\n            setTitle(newTitle);\n        });\n\n        return () => {\n            titleSubscription.unsubscribe();\n        };\n    }, []);\n\n    return (\n        <StyleAppBar position='absolute' open={open}>\n            <Toolbar\n                sx={{\n                    pr: '24px', // keep right padding when drawer closed\n                }}>\n                <IconButton\n                    edge='start'\n                    color='inherit'\n                    aria-label='open drawer'\n                    onClick={toggleDrawer}\n                    sx={{\n                        marginRight: '36px',\n                        // ...(open && { display: 'none' }),\n                    }}>\n                    <MenuIcon />\n                </IconButton>\n                <Typography component='h1' variant='h6' color='inherit' noWrap sx={{ flexGrow: 1 }}>\n                    {title}\n                </Typography>\n            </Toolbar>\n        </StyleAppBar>\n    );\n};\n","import React from \"react\";\nimport {\n    Divider,\n    List, ListItem, ListItemIcon,\n    ListItemText,\n    styled\n} from \"@mui/material\";\nimport MuiDrawer from \"@mui/material/Drawer\";\nimport WidgetsIcon from '@mui/icons-material/Widgets';\nimport TrendingUpIcon from '@mui/icons-material/TrendingUp';\nimport AnalyticsIcon from '@mui/icons-material/Analytics';\nimport ApiIcon from '@mui/icons-material/Api';\nimport SettingsIcon from \"@mui/icons-material/Settings\";\nimport { Link } from \"react-router-dom\";\n\nconst drawerWidth = 200;\n\nconst openedMixin = (theme) => ({\n    width: drawerWidth,\n    marginTop: '64px',\n    transition: theme.transitions.create(\"width\", {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.enteringScreen\n    }),\n    overflowX: \"hidden\"\n});\n\nconst closedMixin = (theme) => ({\n    transition: theme.transitions.create(\"width\", {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen\n    }),\n    marginTop: '64px',\n    overflowX: \"hidden\",\n    width: `calc(${theme.spacing(6)} + 1px)`,\n    [theme.breakpoints.up(\"sm\")]: {\n        width: `calc(${theme.spacing(7)} + 1px)`\n    }\n});\n\nexport const DrawerHeader = styled(\"div\")(({ theme }) => ({\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"flex-end\",\n    padding: theme.spacing(-1, 1),\n    // necessary for content to be below app bar\n    ...theme.mixins.toolbar\n}));\n\nconst Drawer = styled(MuiDrawer)(\n  ({ theme, open }) => ({\n      width: drawerWidth,\n      flexShrink: 0,\n      whiteSpace: \"nowrap\",\n      boxSizing: \"border-box\",\n      ...(open && {\n          width: drawerWidth,\n          transition: theme.transitions.create(\"width\", {\n              easing: theme.transitions.easing.sharp,\n              duration: theme.transitions.duration.enteringScreen\n          }),\n          overflowX: \"hidden\",\n          \"& .MuiDrawer-paper\": openedMixin(theme)\n      }),\n      ...(!open && {\n          transition: theme.transitions.create(\"width\", {\n              easing: theme.transitions.easing.sharp,\n              duration: theme.transitions.duration.leavingScreen\n          }),\n          overflowX: \"hidden\",\n          width: `calc(${theme.spacing(7)} + 1px)`,\n          [theme.breakpoints.up(\"sm\")]: {\n              width: `calc(${theme.spacing(9)} + 1px)`\n          },\n          \"& .MuiDrawer-paper\": closedMixin(theme)\n      })\n  })\n);\n\nexport const AppMenu: React.FC<{ open; toggleDrawer }> = ({ open, toggleDrawer }) => {\n\n    return <Drawer variant=\"permanent\" open={open}>\n{/*\n        <DrawerHeader>\n            <IconButton onClick={toggleDrawer}>\n                <ChevronLeftIcon />\n            </IconButton>\n        </DrawerHeader>\n*/}\n        <Divider />\n        <List>\n            <div>\n                {/*<ListSubheader inset>稿件管理</ListSubheader>*/}\n                <Link to={\"/admin/products\"}>\n                    <ListItem>\n                        <ListItemIcon>\n                            <WidgetsIcon />\n                        </ListItemIcon>\n                        <ListItemText primary=\"产品中心\" />\n                    </ListItem>\n                </Link>\n\n\n                <Link to={\"/admin/applications\"}>\n                    <ListItem>\n                        <ListItemIcon>\n                            <TrendingUpIcon />\n                        </ListItemIcon>\n                        <ListItemText primary=\"行业应用\" />\n                    </ListItem>\n                </Link>\n\n                <Link to={\"/admin/news\"}>\n                    <ListItem>\n                        <ListItemIcon>\n                            <AnalyticsIcon />\n                        </ListItemIcon>\n                        <ListItemText primary=\"新闻中心\" />\n                    </ListItem>\n                </Link>\n\n                <Link to={\"/admin/others\"}>\n                    <ListItem>\n                        <ListItemIcon>\n                            <ApiIcon />\n                        </ListItemIcon>\n                        <ListItemText primary=\"其他\" />\n                    </ListItem>\n                </Link>\n            </div>\n        </List>\n        <Divider />\n        <List>\n            <div>\n\n                <Link to={\"/admin/settings\"}>\n                    <ListItem>\n                        <ListItemIcon>\n                            <SettingsIcon />\n                        </ListItemIcon>\n                        <ListItemText primary=\"稿件类型管理\" />\n                    </ListItem>\n                </Link>\n            </div>\n        </List>\n    </Drawer>;\n};","import React, { FC, Fragment, useState } from \"react\";\nimport { Box, Container, Paper } from \"@mui/material\";\n\nimport { AppBar } from \"./app-bar\";\nimport { AppMenu, DrawerHeader } from \"./menu\";\n\nexport const AuthLayout: FC = ({ children }) => {\n    const [openDrawer, setOpenDrawer] = useState(true);\n\n    const toggleDrawer = () => {\n        setOpenDrawer(!openDrawer);\n    };\n\n    return (\n      <Fragment>\n          <AppBar open={openDrawer} toggleDrawer={toggleDrawer} />\n          <AppMenu open={openDrawer} toggleDrawer={toggleDrawer} />\n          <Box\n            component=\"main\"\n            sx={{\n                flexGrow: 1,\n                height: \"100vh\",\n                overflow: \"auto\",\n                display: \"flex\",\n                flexDirection: \"column\",\n                marginLeft: \"64px\",\n                transition: (theme) => theme.transitions.create(\"width\", {\n                    easing: theme.transitions.easing.sharp,\n                    duration: theme.transitions.duration.leavingScreen\n                }),\n                ...(openDrawer && {\n                    marginLeft: \"200px\",\n                    transition: (theme) => theme.transitions.create(\"width\", {\n                        easing: theme.transitions.easing.sharp,\n                        duration: theme.transitions.duration.enteringScreen\n                    })\n                })\n            }}>\n              <DrawerHeader />\n              <Container maxWidth=\"lg\">\n                  <Paper sx={{ mt: 4, mb: 4, height: \"100%\" }}>\n                      {children}\n                  </Paper>\n              </Container>\n          </Box>\n      </Fragment>\n    );\n};\n","import { Box } from '@mui/material';\nimport React from 'react';\n\nexport const PublicLayout: React.FC = (props) => {\n    return <Box\n        sx={{\n            // marginTop: 8,\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'center',\n        }}\n    >\n        {props.children}\n    </Box>;\n};","import React, { useEffect, useRef } from 'react';\nimport { IconButton, InputProps, styled, TextField } from '@mui/material';\nimport SearchIcon from '@mui/icons-material/Search';\nimport ClearIcon from '@mui/icons-material/Clear';\nimport { FilterModel } from '../../models';\nimport { debounceTime, Subject, tap } from 'rxjs';\n\nconst InlineSearchBox = styled('div')(({ theme }) => ({\n    padding: theme.spacing(0.5, 0.5, 0),\n    justifyContent: 'space-between',\n    display: 'flex',\n    alignItems: 'flex-start',\n    flexWrap: 'wrap',\n    '& MuiTextField-root': {\n        [theme.breakpoints.down('xs')]: {\n            width: '100%',\n        },\n        margin: theme.spacing(1, 0.5, 1.5),\n        '& .MuiSvgIcon-root': {\n            marginRight: theme.spacing(0.5),\n        },\n        '& .MuiInput-underline:before': {\n            borderBottom: `1px solid ${theme.palette.divider}`,\n        },\n    },\n}));\n\nconst filterSubject = new Subject();\n\nexport const QuickFilterToolbar: React.FC<QuickFilterToolbarProps> = (props) => {\n        const inputRef = useRef(null);\n        const clearFilter = () => {\n            inputRef.current.value = '';\n            filterSubject.next('');\n        }\n        const onChange = (e) => {\n            filterSubject.next(e?.target.value);\n        }\n\n        useEffect(() => {\n            const filterSubscription = filterSubject.pipe(debounceTime(1500), tap((value) => {\n                props.setFilter((filter) => ({ ...filter, kw: value, offset: 0 }));\n            })).subscribe();\n\n            return () => {\n                filterSubscription.unsubscribe();\n            };\n        }, [props]);\n\n        return (\n            <InlineSearchBox>\n                <TextField\n                    inputRef={inputRef}\n                    variant='standard'\n                    defaultValue={props.value}\n                    onChange={onChange}\n                    placeholder='关键字查找'\n                    InputProps={{\n                        startAdornment: <SearchIcon fontSize='small' />,\n                        endAdornment: (\n                            <IconButton\n                                title='Clear'\n                                aria-label='Clear'\n                                size='small'\n                                style={{ visibility: props.value ? 'visible' : 'hidden' }}\n                                onClick={clearFilter}\n                            >\n                                <ClearIcon fontSize='small' />\n                            </IconButton>\n                        ),\n                    }}\n                />\n            </InlineSearchBox>\n        );\n    }\n;\n\ninterface QuickFilterToolbarProps extends InputProps {\n    setFilter: (filterState) => Partial<FilterModel>,\n};","import React from 'react';\nimport { Button, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle } from '@mui/material';\n\nexport interface ConfirmDeleteDialogProps {\n    open: boolean,\n    message?: string,\n    onClose?: () => void,\n    onConfirm?: () => void,\n}\n\nexport const ConfirmDeleteDialog: React.FC<ConfirmDeleteDialogProps> = ({ open, message, onClose, onConfirm }) => {\n\n    return <Dialog\n        maxWidth='xs'\n        open={open}\n    >\n        <DialogTitle>确认删除</DialogTitle>\n        <DialogContent dividers>\n            {message && <DialogContentText>\n                确认删除?\n            </DialogContentText>}\n        </DialogContent>\n        <DialogActions>\n            <Button autoFocus onClick={onClose}>\n                取消\n            </Button>\n            <Button color='warning' onClick={onConfirm}>确认</Button>\n        </DialogActions>\n    </Dialog>;\n\n};","import React, { useEffect, useState } from 'react';\nimport { DataGrid, GridColDef, GridRenderCellParams, GridRowModel } from '@mui/x-data-grid';\n\nimport { ArticleDataService } from '../../services';\nimport { Article, ArticleFilter } from '../../models';\nimport { Box, Fab, IconButton, Typography } from '@mui/material';\nimport { QuickFilterToolbar } from '../../components/table';\nimport AddIcon from '@mui/icons-material/Add';\nimport EditIcon from '@mui/icons-material/Edit';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport { useHistory } from 'react-router';\nimport { tap } from 'rxjs';\nimport { ConfirmDeleteDialog, ConfirmDeleteDialogProps } from '../../components/dialog/confirm-delete-dialog';\nimport { CHANNEL_APP_BAR_TITLE, Portal } from '../../components/portal';\nimport { useSnackbar } from 'notistack';\nimport { Link } from 'react-router-dom';\n\nexport const Products: React.FC = () => {\n    const [filter, setFilter] = useState<ArticleFilter>({ kw: '', limit: 20, offset: 0, category: 1 });\n    const [dataSource, setDataSource] = useState<Article[]>([]);\n    const [totalSize, setTotalSize] = useState<number>(1);\n    const [deleteDialog, setDeleteDialog] = useState<ConfirmDeleteDialogProps>({ open: false });\n\n    const history = useHistory();\n    const snackBar = useSnackbar();\n\n    useEffect(() => {\n        ArticleDataService.getList(filter).subscribe({\n            next: ({ errcode, data }) => {\n                if (errcode === 0) {\n                    setDataSource(data.list);\n                    setTotalSize(data.total);\n                } else {\n                    console.error('fetch products error', errcode);\n                    snackBar.enqueueSnackbar('获取产品列表失败', {\n                        variant: 'error',\n                    });\n                }\n            }, error: (err) => {\n                console.error('fetch products error', err);\n                snackBar.enqueueSnackbar('获取产品列表失败', {\n                    variant: 'error',\n                });\n            },\n        });\n    }, [filter, snackBar]);\n\n    function confirmDelete(item: GridRowModel) {\n        setDeleteDialog({\n            open: true, message: `确认删除产品信息: \"${item.title}\"?`,\n            onClose(): void {\n                setDeleteDialog({ open: false });\n            },\n            onConfirm: function(): void {\n                ArticleDataService.delete(item.id).pipe(\n                    tap(() => {\n                        setFilter({ ...filter });\n                        setDeleteDialog({ open: false });\n\n                        snackBar.enqueueSnackbar('删除产品成功', {\n                            variant: 'success',\n                        });\n                    }),\n                ).subscribe({\n                    error: (err) => {\n                        snackBar.enqueueSnackbar(' 删除产品失败', {\n                            variant: 'error',\n                        });\n                    },\n                });\n            },\n        });\n\n    }\n\n    const cols: GridColDef[] = [\n        {\n            field: 'id',\n            headerName: '稿件Id',\n            sortable: false,\n            renderCell: (params: GridRenderCellParams) => (\n                <Link to={`/admin/products/detail/${params.value}`}>{params.value}</Link>),\n        },\n        {\n            field: 'title',\n            headerName: '标题',\n            sortable: false,\n        },\n        {\n            field: 'type_id',\n            headerName: '类型',\n            sortable: false,\n            renderCell: (params) => (\n                <Typography>{params.row.type?.name ?? ''}</Typography>\n            ),\n        },\n        {\n            field: 'status',\n            headerName: '状态',\n            sortable: false,\n            renderCell: (params) => (\n                <Typography>{params.value === 0 ? '草稿' : '已发布'}</Typography>\n            ),\n        },\n        {\n            field: 'read_cnt',\n            headerName: '阅读次数',\n            sortable: false,\n        },\n        {\n            field: 'created_time',\n            headerName: '创建时间',\n            sortable: false,\n        },\n        {\n            field: 'category',\n            headerName: '操作',\n            sortable: false,\n            renderCell: (params: GridRenderCellParams) => {\n                return (\n                    <>\n                        <IconButton component={Link} to={`/admin/products/detail/${params.row.id}`}>\n                            <EditIcon />\n                        </IconButton>\n                        <IconButton onClick={() => confirmDelete(params.row)}>\n                            <DeleteIcon />\n                        </IconButton>\n                    </>\n                );\n            },\n        },\n    ];\n\n    function pageChange(pageNumber: number): void {\n        setFilter((filter) => ({ ...filter, offset: pageNumber }));\n    }\n\n    function pageSizeChange(pageSize: number): void {\n        setFilter((filter) => ({ ...filter, limit: pageSize, offset: 0 }));\n    }\n\n    function createItem() {\n        history.push('/admin/products/create');\n    }\n\n    return (\n        <Box sx={{ height: '100%', width: '100%', p: 1 }}>\n            <DataGrid\n                autoHeight\n                disableColumnMenu={true}\n                disableColumnFilter={true}\n                pagination\n                pageSize={filter.limit}\n                page={filter.offset}\n                rowCount={totalSize}\n                rowsPerPageOptions={[10, 20, 50, 100]}\n                onPageChange={pageChange}\n                onPageSizeChange={pageSizeChange}\n                components={{ Toolbar: QuickFilterToolbar }}\n                componentsProps={{\n                    toolbar: {\n                        value: filter.kw,\n                        setFilter,\n                    },\n                }}\n                columns={cols}\n                rows={dataSource}\n            />\n            <Fab\n                sx={{\n                    position: 'fixed',\n                    bottom: 16,\n                    right: 48,\n                }}\n                size='medium'\n                color='primary'\n                aria-label='add'\n                onClick={createItem}\n            >\n                <AddIcon />\n            </Fab>\n            <ConfirmDeleteDialog {...deleteDialog} />\n            <Portal channel={CHANNEL_APP_BAR_TITLE}>\n                产品中心\n            </Portal>\n        </Box>\n    );\n};\n","import { FileUploadService } from '../../services';\nimport { lastValueFrom, Subscription } from 'rxjs';\n\nclass MyUploadAdapter {\n    private loader: any;\n    private _uploadTask: Subscription;\n\n    constructor(loader) {\n        this.loader = loader;\n    }\n\n    upload = () => {\n        const formData = new FormData();\n        return this.loader.file.then((file) => {\n            formData.append('file', file);\n            return lastValueFrom(FileUploadService.postImage(formData)).then((resp) => {\n                if (resp.errcode !== 0) {\n                    return { default: 'https://33333.cdn.cke-cs.com/rc1DFuFpHqcR3Mah6y0e/images/a941c59ff780060b51d398434c99fe9f229615b4227f5434.png' };\n                }\n                return { default: resp.data.url };\n            }).catch(() => {\n                return { default: 'https://33333.cdn.cke-cs.com/rc1DFuFpHqcR3Mah6y0e/images/a941c59ff780060b51d398434c99fe9f229615b4227f5434.png' };\n            });\n        });\n    };\n\n    abort = () => {\n        this._uploadTask.unsubscribe();\n    };\n}\n\nexport function UploadAdaptorPlugin(editor) {\n    editor.plugins.get('FileRepository').createUploadAdapter = (loader) => {\n        return new MyUploadAdapter(loader);\n    };\n};","import React, { ChangeEvent, useEffect, useState } from 'react';\nimport { Box, Button, Grid, ImageList, ImageListItem, MenuItem, Paper, TextField, Typography } from '@mui/material';\nimport { Article, ArticleType, ArticleTypeListResponse } from '../../../models';\nimport { CKEditor } from '@ckeditor/ckeditor5-react';\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\nimport { ActionService, ArticleDataService, ArticleTypeDataService, FileUploadService } from '../../../services';\nimport { UploadAdaptorPlugin } from '../../../components/form/upload-adaptor-plugin';\nimport { switchMap } from 'rxjs';\nimport { useHistory } from 'react-router';\nimport { useSnackbar } from 'notistack';\n\nexport const EditForm: React.FC<{ detail: Article }> = ({ detail }) => {\n    const [formDetail, setFormDetail] = useState<Article>(detail);\n    const [categoryList, setCategoryList] = useState<ArticleType[]>([]);\n    const [selectedRootCategory, setSelectedRootCategory] = useState<ArticleType>(null);\n    const history = useHistory();\n    const snackBar = useSnackbar();\n\n    useEffect(() => {\n        setFormDetail(detail);\n    }, [detail]);\n\n    useEffect(() => {\n        ArticleTypeDataService.getList(1).subscribe({\n            next: (resp: ArticleTypeListResponse) => {\n                const categoryList = resp.data.list;\n                setCategoryList(categoryList);\n            },\n            error: (err) => {\n                console.error('fail to fetch article type list', err);\n                snackBar.enqueueSnackbar('获取产品类型信息失败', {\n                    variant: 'error',\n                });\n            },\n        });\n    }, [snackBar]);\n    useEffect(() => {\n        if (formDetail.type_id >= 0) {\n            const selectedRootCategory = categoryList.find((x) => x.id === formDetail.type?.parent_id);\n            setSelectedRootCategory(selectedRootCategory);\n        }\n    }, [categoryList, formDetail.type_id, formDetail.type]);\n\n    useEffect(() => {\n        const saveAction = ActionService.handleAction('save')\n            .pipe(\n                switchMap(() => {\n                    return !formDetail.id\n                        ? ArticleDataService.create({\n                              category: 1,\n                              content: formDetail.content,\n                              summary: formDetail.summary,\n                              title: formDetail.title,\n                              type_id: formDetail.type_id,\n                              covers: formDetail.covers.map((x) => x.img),\n                          })\n                        : ArticleDataService.edit({\n                              content: formDetail.content,\n                              id: formDetail.id,\n                              summary: formDetail.summary,\n                              title: formDetail.title,\n                              type_id: formDetail.type_id,\n                              covers: formDetail.covers.map((x) => x.img),\n                          });\n                })\n            )\n            .subscribe({\n                next: (resp) => {\n                    if (resp.errcode === 0) {\n                        history.push('/admin/products');\n                        snackBar.enqueueSnackbar('保存产品信息成功', {\n                            variant: 'success',\n                        });\n                    } else {\n                        console.error('fail to save product', resp.errmessage);\n                        snackBar.enqueueSnackbar('保存产品失败', {\n                            variant: 'error',\n                        });\n                    }\n                },\n                error: (error) => {\n                    console.error('fail to save product', error);\n                    snackBar.enqueueSnackbar('保存产品失败', {\n                        variant: 'error',\n                    });\n                },\n            });\n\n        return () => {\n            saveAction.unsubscribe();\n        };\n    }, [formDetail, snackBar, history]);\n\n    const rootCategoryList: () => ArticleType[] = () => {\n        return categoryList.filter((x) => !x.parent_id);\n    };\n    const childCategoryList: () => ArticleType[] = () => {\n        return !selectedRootCategory ? [] : categoryList.filter((x) => x.parent_id === selectedRootCategory.id);\n    };\n\n    function updateInputValue(key: string): (e: ChangeEvent<HTMLInputElement>) => void {\n        return (e) => {\n            const value = e.target.value;\n            setFormDetail((state) => ({\n                ...state,\n                [key]: value,\n            }));\n        };\n    }\n\n    function handleRootCategoryChange(e) {\n        const targetCategory = categoryList.find((x) => x.id === e.target.value);\n        setSelectedRootCategory(targetCategory);\n    }\n\n    function handleChildCategoryChange(e) {\n        const targetCategory = categoryList.find((x) => x.id === e.target.value);\n        setFormDetail((state) => ({\n            ...state,\n            type: targetCategory,\n            type_id: targetCategory.id,\n        }));\n    }\n\n    function handleCoverUpload(e) {\n        const files = e.target.files;\n        if (files && files.length > 0) {\n            const formData = new FormData();\n            formData.append('file', files[0]);\n\n            FileUploadService.postImage(formData).subscribe({\n                next: (resp) => {\n                    if (resp.errcode === 0) {\n                        setFormDetail((state) => {\n                            const covers = state.covers ?? [];\n                            covers.push({\n                                id: -Math.ceil(Math.random() * 1000),\n                                article_id: formDetail.id,\n                                img: resp.data.url,\n                            });\n\n                            return {\n                                ...state,\n                                covers,\n                            };\n                        });\n                    } else {\n                        console.error('fail to upload image', resp.errmessage);\n                        snackBar.enqueueSnackbar(' 上传封面失败', {\n                            variant: 'error',\n                        });\n                    }\n                },\n                error: (err) => {\n                    console.error('fail to upload image', err);\n                    snackBar.enqueueSnackbar(' 上传封面失败', {\n                        variant: 'error',\n                    });\n                },\n            });\n        }\n    }\n\n    function handleContentUpdate(event, editor): void {\n        const rawContent = editor.getData();\n\n        setFormDetail((state) => ({\n            ...state,\n            content: rawContent,\n        }));\n        console.log('editor update >>>', rawContent);\n    }\n\n    function clearSelectedFile(e) {\n        e.target.value = null;\n    }\n\n    return (\n        <Box sx={{ '& .MuiTextField-root': { mt: 1, mb: 1 } }} component='form'>\n            <Grid container>\n                <Grid item xs={12}>\n                    <TextField\n                        select\n                        sx={{ minWidth: '200px', mr: 1 }}\n                        id='product-category-root'\n                        label='产品类型'\n                        value={selectedRootCategory?.id ?? ''}\n                        onChange={handleRootCategoryChange}>\n                        {rootCategoryList().map((x) => {\n                            return (\n                                <MenuItem key={`cate-${x.id}`} value={x.id}>\n                                    {x.name}\n                                </MenuItem>\n                            );\n                        })}\n                    </TextField>\n                    <TextField\n                        select\n                        sx={{ minWidth: '200px' }}\n                        id='product-category-child'\n                        onChange={handleChildCategoryChange}\n                        value={formDetail.type_id > 0 ? formDetail.type_id : ''}\n                        label='子类型'>\n                        {childCategoryList().map((x) => {\n                            return (\n                                <MenuItem key={x.id} value={x.id}>\n                                    {x.name}\n                                </MenuItem>\n                            );\n                        })}\n                    </TextField>\n                </Grid>\n                <Grid item xs={12}>\n                    <TextField\n                        fullWidth\n                        label='标题'\n                        value={formDetail?.title ?? ''}\n                        onChange={updateInputValue('title')}\n                    />\n                </Grid>\n                <Grid item xs={12}>\n                    <TextField\n                        fullWidth\n                        label='摘要'\n                        rows='4'\n                        value={formDetail?.summary ?? ''}\n                        onChange={updateInputValue('summary')}\n                    />\n                </Grid>\n                <Grid item xs={12}>\n                    <Paper sx={{ mt: 1, p: 1, width: '100%' }} variant='outlined'>\n                        <Grid container>\n                            <Grid item xs={1}>\n                                <Typography variant='subtitle1'>封面</Typography>\n                            </Grid>\n                            <Grid item container xs justifyContent='flex-end'>\n                                <label htmlFor='upload-cover'>\n                                    <input\n                                        style={{ display: 'none' }}\n                                        accept='image/*'\n                                        id='upload-cover'\n                                        type='file'\n                                        onChange={handleCoverUpload}\n                                        onClick={clearSelectedFile}\n                                    />\n                                    <Button variant='contained' component='span'>\n                                        添加封面\n                                    </Button>\n                                </label>\n                            </Grid>\n                            <Grid item xs={12}>\n                                <ImageList sx={{ minHeight: '160px', width: '100%' }} cols={5} rowHeight={164}>\n                                    {formDetail.covers?.map((item) => (\n                                        <ImageListItem key={item.id}>\n                                            <img src={`${item.img}`} srcSet={`${item.img}`} loading='lazy' alt={''} />\n                                        </ImageListItem>\n                                    )) ?? <div />}\n                                </ImageList>\n                            </Grid>\n                        </Grid>\n                    </Paper>\n                </Grid>\n                <Grid item container xs={12}>\n                    <Paper sx={{ mt: 1, p: 1, width: '100%' }} variant='outlined'>\n                        <Grid container>\n                            <Grid item xs={1}>\n                                <Typography variant='subtitle1'>内容</Typography>\n                            </Grid>\n                            <Grid\n                                item\n                                sx={{\n                                    height: '420px',\n                                    '& .ck-editor__main, & .ck-content': { height: '380px' },\n                                }}\n                                xs={12}>\n                                <CKEditor\n                                    config={{\n                                        extraPlugins: [UploadAdaptorPlugin],\n                                    }}\n                                    editor={ClassicEditor}\n                                    data={formDetail.content}\n                                    onChange={handleContentUpdate}\n                                />\n                            </Grid>\n                        </Grid>\n                    </Paper>\n                </Grid>\n            </Grid>\n        </Box>\n    );\n};\n","import React, { useState } from 'react';\nimport { Button } from '@mui/material';\nimport KeyboardArrowDownIcon from '@mui/icons-material/KeyboardArrowDown';\nimport Menu from '@mui/material/Menu';\nimport MenuItem from '@mui/material/MenuItem';\nimport { ActionService } from '../../services';\n\nexport const ActionMenu: React.FC<{ status: number, isCreate: boolean }> = ({ status, isCreate }) => {\n    const [anchorEl, setAnchorEl] = useState(null);\n\n    function handleOpen(e) {\n        setAnchorEl(e.currentTarget);\n    }\n\n    function closeMenu() {\n        setAnchorEl(null);\n    }\n\n    function handleSave() {\n        ActionService.save();\n        closeMenu();\n    }\n\n    function handlePublish() {\n        ActionService.publish();\n        closeMenu();\n    }\n\n    function handleWithdraw() {\n        ActionService.withdraw();\n        closeMenu();\n    }\n\n    return <div>\n        <Button\n            id='action-button'\n            aria-controls='action-menu'\n            aria-haspopup='true'\n            aria-expanded={anchorEl ? 'true' : undefined}\n            variant='contained'\n            color={!status ? 'info' : 'success'}\n            disableElevation\n            onClick={handleOpen}\n            endIcon={<KeyboardArrowDownIcon />}\n        >\n            {isCreate ? '新增' : status === 0 ? '草稿' : '已发布'}\n        </Button>\n        <Menu\n            id='action-menu'\n            open={!!anchorEl}\n            anchorEl={anchorEl}\n            anchorOrigin={{\n                vertical: 'bottom',\n                horizontal: 'right',\n            }}\n            transformOrigin={{\n                vertical: 'top',\n                horizontal: 'right',\n            }} MenuListProps={{\n            'aria-labelledby': 'long-button',\n        }}\n            onClose={closeMenu}\n            PaperProps={{\n                style: {\n                    width: '160px',\n                },\n            }}\n        >\n            {\n                isCreate ?\n                    <MenuItem key='edit' onClick={handleSave}>\n                        保存\n                    </MenuItem>\n                    : [\n                        <MenuItem key='edit' onClick={handleSave}>\n                            保存\n                        </MenuItem>,\n                        <MenuItem key='publish' onClick={handlePublish}>\n                            发布\n                        </MenuItem>,\n                        <MenuItem key='withdraw' onClick={handleWithdraw}>\n                            撤稿\n                        </MenuItem>,\n                    ]\n            }\n        </Menu>\n    </div>;\n}\n","import React, { useEffect, useState } from 'react';\nimport { Article } from '../../../models';\nimport { useHistory, useRouteMatch } from 'react-router';\nimport { ActionService, ArticleDataService } from '../../../services';\nimport { Button, Grid } from '@mui/material';\n\nimport { EditForm } from '../components/edit-form';\nimport { ActionMenu } from '../../../components/form/action-menu';\nimport { CHANNEL_APP_BAR_TITLE, Portal } from '../../../components/portal';\nimport { useSnackbar } from 'notistack';\nimport { switchMap } from 'rxjs';\n\nexport const ProductDetail: React.FC = (props) => {\n    const [detail, setDetail] = useState<Article>({\n        id: 0,\n        category: 1,\n        content: '',\n        covers: [],\n        read_cnt: 0,\n        status: 0,\n        summary: '',\n        title: '',\n        type_id: -1,\n        created_at: '',\n        updated_at: '',\n    });\n\n    const snackBar = useSnackbar();\n    const history = useHistory();\n    const { params } = useRouteMatch<{ id: string }>();\n    const { id } = params;\n\n    useEffect(() => {\n        let actionSubscription = id\n            ? [\n                  ArticleDataService.getDetail(parseInt(id)).subscribe({\n                      next: (resp) => setDetail(resp.data.info),\n                      error: (err) => {\n                          console.error('fail to fetch product detail', err);\n                          snackBar.enqueueSnackbar(' 获取产品信息失败', {\n                              variant: 'error',\n                          });\n                      },\n                  }),\n\n                  ActionService.handleAction('withdraw')\n                      .pipe(switchMap(() => ArticleDataService.withdraw(parseInt(id))))\n                      .subscribe({\n                          next: () => {\n                              history.push('/admin/products');\n                              snackBar.enqueueSnackbar(' 撤稿成功', {\n                                  variant: 'success',\n                              });\n                          },\n                          error: (err) => {\n                              console.error('fail to publish', err);\n                              snackBar.enqueueSnackbar(' 撤稿失败', {\n                                  variant: 'error',\n                              });\n                          },\n                      }),\n                  ActionService.handleAction('publish')\n                      .pipe(switchMap(() => ArticleDataService.publish(parseInt(id))))\n                      .subscribe({\n                          next: () => {\n                              history.push('/admin/products');\n                              snackBar.enqueueSnackbar(' 发布成功', {\n                                  variant: 'success',\n                              });\n                          },\n                          error: (err) => {\n                              console.error('fail to publish', err);\n                              snackBar.enqueueSnackbar(' 发布失败', {\n                                  variant: 'error',\n                              });\n                          },\n                      }),\n              ]\n            : [];\n\n        return () => {\n            if (actionSubscription.length > 0) {\n                for (const subscription of actionSubscription) {\n                    subscription.unsubscribe();\n                }\n            }\n        };\n    }, [id, snackBar, history]);\n\n    function goBack() {\n        history.goBack();\n    }\n\n    return (\n        <>\n            <Grid container spacing={2} sx={{ pr: 2, pl: 1 }}>\n                <Grid container item xs={12}>\n                    <Grid item xs={1} sx={{ pl: 1 }}>\n                        <Button variant='outlined' onClick={goBack}>\n                            返回\n                        </Button>\n                    </Grid>\n                    <Grid item container justifyContent='flex-end' xs>\n                        <ActionMenu status={detail?.status} isCreate={detail?.id === 0} />\n                    </Grid>\n                </Grid>\n                <Grid item xs={12}>\n                    <EditForm detail={detail} />\n                </Grid>\n            </Grid>\n            <Portal channel={CHANNEL_APP_BAR_TITLE}>产品中心</Portal>\n        </>\n    );\n};\n","import React, { useEffect, useState } from 'react';\nimport { DataGrid, GridColDef, GridRenderCellParams, GridRowModel } from '@mui/x-data-grid';\nimport { useHistory } from 'react-router';\nimport { Link } from 'react-router-dom';\n\nimport { ArticleDataService } from '../../services';\nimport { Article, ArticleFilter } from '../../models';\nimport { Box, Fab, IconButton, Typography } from '@mui/material';\nimport { QuickFilterToolbar } from '../../components/table';\nimport AddIcon from '@mui/icons-material/Add';\nimport { ConfirmDeleteDialog, ConfirmDeleteDialogProps } from '../../components/dialog/confirm-delete-dialog';\nimport { tap } from 'rxjs';\nimport EditIcon from '@mui/icons-material/Edit';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport { CHANNEL_APP_BAR_TITLE, Portal } from '../../components/portal';\nimport { useSnackbar } from 'notistack';\n\nexport const Applications = () => {\n    const [filter, setFilter] = useState<ArticleFilter>({ kw: '', limit: 20, offset: 0, category: 2 });\n    const [dataSource, setDataSource] = useState<Article[]>([]);\n    const [totalSize, setTotalSize] = useState<number>(0);\n    const [deleteDialog, setDeleteDialog] = useState<ConfirmDeleteDialogProps>({ open: false });\n    const history = useHistory();\n    const snackBar = useSnackbar();\n\n    useEffect(() => {\n        ArticleDataService.getList(filter).subscribe({\n            next: ({ errcode, data }) => {\n                if (errcode === 0) {\n                    setDataSource(data.list);\n                    setTotalSize(data.total);\n                } else {\n                    console.error('fail to fetch application list', errcode);\n                    snackBar.enqueueSnackbar(' 获取行业应用列表失败', {\n                        variant: 'error',\n                    });\n                }\n            }, error: (err) => {\n                console.error('fail to fetch application list', err);\n                snackBar.enqueueSnackbar(' 获取行业应用列表失败', {\n                    variant: 'error',\n                });\n            },\n        });\n    }, [filter, snackBar]);\n\n    function confirmDelete(item: GridRowModel) {\n        setDeleteDialog({\n            open: true, message: `确认删除行业应用信息: \"${item.title}\"?`,\n            onClose(): void {\n                setDeleteDialog({ open: false });\n            },\n            onConfirm(): void {\n                ArticleDataService.delete(item.id).pipe(\n                    tap(() => {\n                        setFilter({ ...filter });\n                        setDeleteDialog({ open: false });\n\n                        snackBar.enqueueSnackbar(' 删除行业应用成功', {\n                            variant: 'success',\n                        });\n                    }),\n                ).subscribe({\n                    error: (err) => {\n                        console.error('fail to delete application', err);\n                        snackBar.enqueueSnackbar(' 删除行业应用失败', {\n                            variant: 'error',\n                        });\n                    },\n                });\n            },\n        });\n    }\n\n    const cols: GridColDef[] = [\n        {\n            field: 'id',\n            headerName: '稿件Id',\n            sortable: false,\n            renderCell: (params: GridRenderCellParams) => {\n                return (<Link to={`/admin/applications/detail/${params.value}`}>{params.value}</Link>);\n            },\n        },\n        {\n            field: 'title',\n            headerName: '标题',\n            sortable: false,\n        },\n        {\n            field: 'type_id',\n            headerName: '类型',\n            sortable: false,\n            renderCell: (params) => <Typography>{params.row.type?.name ?? ''}</Typography>,\n        },\n        {\n            field: 'status',\n            headerName: '状态',\n            sortable: false,\n            renderCell: (params) => <Typography>{params.value === 0 ? '草稿' : '已发布'}</Typography>,\n        },\n        {\n            field: 'read_cnt',\n            headerName: '阅读次数',\n            sortable: false,\n        },\n        {\n            field: 'created_time',\n            headerName: '创建时间',\n            sortable: false,\n        },\n        {\n            field: 'category',\n            headerName: '操作',\n            sortable: false,\n            renderCell: (params: GridRenderCellParams) => {\n                return (\n                    <>\n                        <IconButton component={Link} to={`/admin/applications/detail/${params.row.id}`}>\n                            <EditIcon />\n                        </IconButton>\n                        <IconButton onClick={() => confirmDelete(params.row)}>\n                            <DeleteIcon />\n                        </IconButton>\n                    </>\n                );\n            },\n        },\n    ];\n\n    function pageChange(pageNumber: number): void {\n        setFilter((filter) => ({ ...filter, offset: pageNumber }));\n    }\n\n    function pageSizeChange(pageSize: number): void {\n        setFilter((filter) => ({ ...filter, limit: pageSize, offset: 0 }));\n    }\n\n    function createItem() {\n        history.push('/admin/applications/create');\n    }\n\n    return (<Box sx={{ height: '100%', width: '100%', p: 1 }}>\n            <DataGrid\n                autoHeight\n                disableColumnMenu={true}\n                disableColumnFilter={true}\n                pagination\n                pageSize={filter.limit}\n                page={filter.offset}\n                rowCount={totalSize}\n                rowsPerPageOptions={[10, 20, 50, 100]}\n                onPageChange={pageChange}\n                onPageSizeChange={pageSizeChange}\n                components={{ Toolbar: QuickFilterToolbar }}\n                componentsProps={{\n                    toolbar: {\n                        value: filter.kw,\n                        setFilter,\n                    },\n                }}\n                columns={cols}\n                rows={dataSource}\n            />\n            <Fab\n                sx={{\n                    position: 'fixed',\n                    bottom: 16,\n                    right: 48,\n                }}\n                size='medium'\n                color='primary'\n                aria-label='add'\n                onClick={createItem}\n            >\n                <AddIcon />\n            </Fab>\n            <ConfirmDeleteDialog {...deleteDialog} />\n            <Portal channel={CHANNEL_APP_BAR_TITLE}>\n                行业应用\n            </Portal>\n        </Box>\n    );\n};","import React, { ChangeEvent, useEffect, useState } from 'react';\nimport { Box, Button, Grid, ImageList, ImageListItem, MenuItem, Paper, TextField, Typography } from '@mui/material';\nimport { Article, ArticleType, ArticleTypeListResponse } from '../../../models';\nimport { CKEditor } from '@ckeditor/ckeditor5-react';\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\nimport { ActionService, ArticleDataService, ArticleTypeDataService, FileUploadService } from '../../../services';\nimport { UploadAdaptorPlugin } from '../../../components/form/upload-adaptor-plugin';\nimport { switchMap } from 'rxjs';\nimport { useHistory } from 'react-router';\nimport { useSnackbar } from 'notistack';\n\nexport const EditForm: React.FC<{ detail: Article }> = ({ detail }) => {\n    const [formDetail, setFormDetail] = useState<Article>(detail);\n    const [categoryList, setCategoryList] = useState<ArticleType[]>([]);\n\n    const history = useHistory();\n    const snackBar = useSnackbar();\n\n    useEffect(() => {\n        ArticleTypeDataService.getList(2).subscribe((resp: ArticleTypeListResponse) => {\n            const categoryList = resp.data.list;\n            setCategoryList(categoryList);\n        });\n    }, []);\n    useEffect(() => setFormDetail(detail), [detail]);\n\n    useEffect(() => {\n        const saveAction = ActionService.handleAction('save')\n            .pipe(\n                switchMap(() => {\n                    return !formDetail.id\n                        ? ArticleDataService.create({\n                            category: 2,\n                            content: formDetail.content,\n                            summary: formDetail.summary,\n                            title: formDetail.title,\n                            type_id: formDetail.type_id,\n                            covers: formDetail.covers.map((x) => x.img),\n                        })\n                        : ArticleDataService.edit({\n                            content: formDetail.content,\n                            id: formDetail.id,\n                            summary: formDetail.summary,\n                            title: formDetail.title,\n                            type_id: formDetail.type_id,\n                            covers: formDetail.covers.map((x) => x.img),\n                        });\n                }),\n            )\n            .subscribe({\n                next: (resp) => {\n                    if (resp.errcode === 0) {\n                        history.push('/admin/applications');\n\n                        snackBar.enqueueSnackbar('  保存行业信息成功', {\n                            variant: 'success',\n                        });\n                    } else {\n                        console.error('fail to fetch application list', resp.errmessage);\n                        snackBar.enqueueSnackbar(' 保存行业信息失败', {\n                            variant: 'error',\n                        });\n                    }\n                },\n                error: (err) => {\n                    console.error('fail to fetch application list', err);\n                    snackBar.enqueueSnackbar(' 保存行业信息失败', {\n                        variant: 'error',\n                    });\n                },\n            });\n\n        return () => {\n            saveAction.unsubscribe();\n        };\n    }, [formDetail, snackBar, history]);\n\n    function updateInputValue(key: string): (e: ChangeEvent<HTMLInputElement>) => void {\n        return (e) => {\n            const value = e.target.value;\n            setFormDetail((state) => ({\n                ...state,\n                [key]: value,\n            }));\n        };\n    }\n\n    function handleCategoryChange(e) {\n        const targetCategory = categoryList.find((x) => x.id === e.target.value);\n        setFormDetail((state) => ({\n            ...state,\n            type: targetCategory,\n            type_id: targetCategory.id,\n        }));\n    }\n\n    function handleCoverUpload(e) {\n        const files = e.target.files;\n        if (files && files.length > 0) {\n            const formData = new FormData();\n            formData.append('file', files[0]);\n\n            FileUploadService.postImage(formData).subscribe({\n                next: (resp) => {\n                    if (resp.errcode === 0) {\n\n                        setFormDetail((state) => {\n                            const covers = state.covers ?? [];\n                            covers.push({\n                                id: -Math.ceil(Math.random() * 1000),\n                                article_id: formDetail.id,\n                                img: resp.data.url,\n                            });\n\n                            return {\n                                ...state,\n                                covers,\n                            };\n                        });\n                    } else {\n                        console.error('fail to upload cover', resp.errmessage);\n                        snackBar.enqueueSnackbar(' 上传封面失败', {\n                            variant: 'error',\n                        });\n                    }\n                }, error: err => {\n\n                    console.error('fail to upload cover', err);\n                    snackBar.enqueueSnackbar(' 上传封面失败', {\n                        variant: 'error',\n                    });\n                },\n            });\n        }\n    }\n\n    function handleContentUpdate(event, editor): void {\n        const rawContent = editor.getData();\n\n        setFormDetail((state) => ({\n            ...state,\n            content: rawContent,\n        }));\n        console.log('editor update >>>', rawContent);\n    }\n\n    function clearSelectedFile(e) {\n        e.target.value = null;\n    }\n\n    return (\n        <Box sx={{ '& .MuiTextField-root': { mt: 1, mb: 1 } }} component='form'>\n            <Grid container>\n                <Grid item xs={12}>\n                    <TextField\n                        select\n                        sx={{ minWidth: '200px' }}\n                        id='application-category'\n                        onChange={handleCategoryChange}\n                        value={formDetail.type_id > 0 ? formDetail.type_id : ''}\n                        label='应用类型'>\n                        {categoryList.map((x) => {\n                            return (\n                                <MenuItem key={x.id} value={x.id}>\n                                    {x.name}\n                                </MenuItem>\n                            );\n                        })}\n                    </TextField>\n                </Grid>\n                <Grid item xs={12}>\n                    <TextField\n                        fullWidth\n                        label='标题'\n                        value={formDetail.title}\n                        onChange={updateInputValue('title')}\n                    />\n                </Grid>\n                <Grid item xs={12}>\n                    <TextField\n                        fullWidth\n                        label='摘要'\n                        rows='4'\n                        value={formDetail.summary}\n                        onChange={updateInputValue('summary')}\n                    />\n                </Grid>\n                <Grid item xs={12}>\n                    <Paper sx={{ mt: 1, p: 1, width: '100%' }} variant='outlined'>\n                        <Grid container>\n                            <Grid item xs={1}>\n                                <Typography variant='subtitle1'>封面</Typography>\n                            </Grid>\n                            <Grid item container xs justifyContent='flex-end'>\n                                <label htmlFor='upload-cover'>\n                                    <input\n                                        style={{ display: 'none' }}\n                                        accept='image/*'\n                                        id='upload-cover'\n                                        type='file'\n                                        onChange={handleCoverUpload}\n                                        onClick={clearSelectedFile}\n                                    />\n                                    <Button variant='contained' component='span'>\n                                        添加封面\n                                    </Button>\n                                </label>\n                            </Grid>\n                            <Grid item xs={12}>\n                                <ImageList sx={{ minHeight: '160px', width: '100%' }} cols={5} rowHeight={164}>\n                                    {formDetail.covers?.map((item) => (\n                                        <ImageListItem key={item.id}>\n                                            <img src={`${item.img}`} srcSet={`${item.img}`} loading='lazy' alt={''} />\n                                        </ImageListItem>\n                                    )) ?? <div />}\n                                </ImageList>\n                            </Grid>\n                        </Grid>\n                    </Paper>\n                </Grid>\n                <Grid item container xs={12}>\n                    <Paper sx={{ mt: 1, p: 1, width: '100%' }} variant='outlined'>\n                        <Grid container>\n                            <Grid item xs={1}>\n                                <Typography variant='subtitle1'>内容</Typography>\n                            </Grid>\n                            <Grid\n                                item\n                                sx={{\n                                    height: '420px',\n                                    '& .ck-editor__main, & .ck-content': { height: '380px' },\n                                }}\n                                xs={12}>\n                                <CKEditor\n                                    config={{\n                                        extraPlugins: [UploadAdaptorPlugin],\n                                    }}\n                                    editor={ClassicEditor}\n                                    data={formDetail.content}\n                                    onChange={handleContentUpdate}\n                                />\n                            </Grid>\n                        </Grid>\n                    </Paper>\n                </Grid>\n            </Grid>\n        </Box>\n    );\n};\n","import React, { useEffect, useState } from 'react';\nimport { Article } from '../../../models';\nimport { useHistory, useRouteMatch } from 'react-router';\nimport { ActionService, ArticleDataService } from '../../../services';\nimport { Button, Grid } from '@mui/material';\n\nimport { EditForm } from '../components/edit-form';\nimport { ActionMenu } from '../../../components/form/action-menu';\nimport { useSnackbar } from 'notistack';\nimport { switchMap } from 'rxjs';\n\nexport const ApplicationDetail: React.FC = (props) => {\n    const [detail, setDetail] = useState<Article>({\n        id: 0,\n        category: 2,\n        content: '',\n        covers: [],\n        read_cnt: 0,\n        status: 0,\n        summary: '',\n        title: '',\n        type_id: -1,\n        created_at: '',\n        updated_at: '',\n    });\n\n    const snackBar = useSnackbar();\n    const history = useHistory();\n    const { params } = useRouteMatch<{ id: string }>();\n    const { id } = params;\n\n    useEffect(() => {\n        let actionSubscription = id\n            ? [\n                  ArticleDataService.getDetail(parseInt(id)).subscribe({\n                      next: (resp) => setDetail(resp.data.info),\n                      error: (err) => {\n                          console.error('fail to fetch application list', err);\n                          snackBar.enqueueSnackbar(' 获取应用详情失败', {\n                              variant: 'error',\n                          });\n                      },\n                  }),\n                  ActionService.handleAction('withdraw')\n                      .pipe(switchMap(() => ArticleDataService.withdraw(parseInt(id))))\n                      .subscribe({\n                          next: () => {\n                              history.push('/admin/applications');\n                              snackBar.enqueueSnackbar(' 撤稿成功', {\n                                  variant: 'success',\n                              });\n                          },\n                          error: (err) => {\n                              console.error('fail to publish', err);\n                              snackBar.enqueueSnackbar(' 撤稿失败', {\n                                  variant: 'error',\n                              });\n                          },\n                      }),\n                  ActionService.handleAction('publish')\n                      .pipe(switchMap(() => ArticleDataService.publish(parseInt(id))))\n                      .subscribe({\n                          next: () => {\n                              history.push('/admin/applications');\n                              snackBar.enqueueSnackbar(' 发布成功', {\n                                  variant: 'success',\n                              });\n                          },\n                          error: (err) => {\n                              console.error('fail to publish', err);\n                              snackBar.enqueueSnackbar(' 发布失败', {\n                                  variant: 'error',\n                              });\n                          },\n                      }),\n              ]\n            : [];\n\n        return () => {\n            if (actionSubscription.length > 0) {\n                for (const subscription of actionSubscription) {\n                    subscription.unsubscribe();\n                }\n            }\n        };\n    }, [id, snackBar, history]);\n\n    function goBack() {\n        history.goBack();\n    }\n\n    return (\n        <Grid container spacing={2} sx={{ pr: 2, pl: 1 }}>\n            <Grid container item xs={12}>\n                <Grid item xs={1} sx={{ pl: 1 }}>\n                    <Button variant='outlined' onClick={goBack}>\n                        返回\n                    </Button>\n                </Grid>\n                <Grid item container justifyContent='flex-end' xs>\n                    <ActionMenu status={detail?.status} isCreate={detail?.id === 0} />\n                </Grid>\n            </Grid>\n            <Grid item xs={12}>\n                <EditForm detail={detail} />\n            </Grid>\n        </Grid>\n    );\n};\n","import React, { useEffect, useState } from 'react';\nimport { DataGrid, GridColDef, GridRenderCellParams, GridRowModel } from '@mui/x-data-grid';\nimport { useHistory } from 'react-router';\nimport { Link } from 'react-router-dom';\n\nimport { ArticleDataService } from '../../services';\nimport { Article, ArticleFilter } from '../../models';\nimport { Box, Fab, IconButton, Typography } from '@mui/material';\nimport { QuickFilterToolbar } from '../../components/table';\nimport AddIcon from '@mui/icons-material/Add';\nimport { tap } from 'rxjs';\nimport EditIcon from '@mui/icons-material/Edit';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport { ConfirmDeleteDialog, ConfirmDeleteDialogProps } from '../../components/dialog/confirm-delete-dialog';\nimport { CHANNEL_APP_BAR_TITLE, Portal } from '../../components/portal';\nimport { useSnackbar } from 'notistack';\n\nexport const News = () => {\n    const [filter, setFilter] = useState<ArticleFilter>({ kw: '', limit: 20, offset: 0, category: 3 });\n    const [dataSource, setDataSource] = useState<Article[]>([]);\n    const [totalSize, setTotalSize] = useState<number>(0);\n    const [deleteDialog, setDeleteDialog] = useState<ConfirmDeleteDialogProps>({ open: false });\n    const history = useHistory();\n    const snackBar = useSnackbar();\n\n    useEffect(() => {\n        ArticleDataService.getList(filter).subscribe({\n            next: ({ errcode, data }) => {\n                if (errcode === 0) {\n                    setDataSource(data.list);\n                    setTotalSize(data.total);\n                } else {\n                    console.error('fail to fetch news list', errcode);\n                    snackBar.enqueueSnackbar(' 获取新闻列表失败', {\n                        variant: 'error',\n                    });\n                }\n            },\n            error: (err) => {\n                console.error('fail to fetch news list', err);\n                snackBar.enqueueSnackbar(' 获取新闻列表失败', {\n                    variant: 'error',\n                });\n            },\n        });\n    }, [filter, snackBar]);\n\n    function confirmDelete(item: GridRowModel) {\n        setDeleteDialog({\n            open: true,\n            message: `确认删除新闻信息: \"${item.title}\"?`,\n            onClose(): void {\n                setDeleteDialog({ open: false });\n            },\n            onConfirm(): void {\n                ArticleDataService.delete(item.id)\n                    .pipe(\n                        tap(() => {\n                            setFilter({ ...filter });\n                            setDeleteDialog({ open: false });\n\n                            snackBar.enqueueSnackbar(' 删除新闻成功', {\n                                variant: 'success',\n                            });\n                        })\n                    )\n                    .subscribe({\n                        error: (err) => {\n                            console.error('fail to delete news', err);\n                            snackBar.enqueueSnackbar(' 删除新闻失败', {\n                                variant: 'error',\n                            });\n                        },\n                    });\n            },\n        });\n    }\n\n    const cols: GridColDef[] = [\n        {\n            field: 'id',\n            headerName: '稿件Id',\n            sortable: false,\n            renderCell: (params: GridRenderCellParams) => {\n                return <Link to={`/admin/news/detail/${params.value}`}>{params.value}</Link>;\n            },\n        },\n        {\n            field: 'title',\n            headerName: '标题',\n            sortable: false,\n        },\n        {\n            field: 'type_id',\n            headerName: '类型',\n            sortable: false,\n            renderCell: (params) => <Typography>{params.row.type?.name ?? ''}</Typography>,\n        },\n        {\n            field: 'status',\n            headerName: '状态',\n            sortable: false,\n            renderCell: (params) => <Typography>{params.value === 0 ? '草稿' : '已发布'}</Typography>,\n        },\n        {\n            field: 'read_cnt',\n            headerName: '阅读次数',\n            sortable: false,\n        },\n        {\n            field: 'created_time',\n            headerName: '创建时间',\n            sortable: false,\n        },\n        {\n            field: 'category',\n            headerName: '操作',\n            sortable: false,\n            renderCell: (params: GridRenderCellParams) => {\n                return (\n                    <>\n                        <IconButton component={Link} to={`/admin/news/detail/${params.row.id}`}>\n                            <EditIcon />\n                        </IconButton>\n                        <IconButton onClick={() => confirmDelete(params.row)}>\n                            <DeleteIcon />\n                        </IconButton>\n                    </>\n                );\n            },\n        },\n    ];\n\n    function pageChange(pageNumber: number): void {\n        setFilter((filter) => ({ ...filter, offset: pageNumber }));\n    }\n\n    function pageSizeChange(pageSize: number): void {\n        setFilter((filter) => ({ ...filter, limit: pageSize, offset: 0 }));\n    }\n\n    function createItem() {\n        history.push('/admin/news/create');\n    }\n\n    return (\n        <Box sx={{ height: '100%', width: '100%', p: 1 }}>\n            <DataGrid\n                autoHeight\n                disableColumnMenu={true}\n                disableColumnFilter={true}\n                pagination\n                pageSize={filter.limit}\n                page={filter.offset}\n                rowCount={totalSize}\n                rowsPerPageOptions={[10, 20, 50, 100]}\n                onPageChange={pageChange}\n                onPageSizeChange={pageSizeChange}\n                components={{ Toolbar: QuickFilterToolbar }}\n                componentsProps={{\n                    toolbar: {\n                        value: filter.kw,\n                        setFilter,\n                    },\n                }}\n                columns={cols}\n                rows={dataSource}\n            />\n            <Fab\n                sx={{\n                    position: 'fixed',\n                    bottom: 16,\n                    right: 48,\n                }}\n                size='medium'\n                color='primary'\n                aria-label='add'\n                onClick={createItem}>\n                <AddIcon />\n            </Fab>\n            <ConfirmDeleteDialog {...deleteDialog} />\n            <Portal channel={CHANNEL_APP_BAR_TITLE}>新闻中心</Portal>\n        </Box>\n    );\n};\n","import React, { ChangeEvent, useEffect, useState } from 'react';\nimport { Box, Button, Grid, ImageList, ImageListItem, MenuItem, Paper, TextField, Typography } from '@mui/material';\nimport { Article, ArticleType, ArticleTypeListResponse } from '../../../models';\nimport { CKEditor } from '@ckeditor/ckeditor5-react';\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\nimport { ActionService, ArticleDataService, ArticleTypeDataService, FileUploadService } from '../../../services';\nimport { UploadAdaptorPlugin } from '../../../components/form/upload-adaptor-plugin';\nimport { switchMap } from 'rxjs';\nimport { useHistory } from 'react-router';\nimport { useSnackbar } from 'notistack';\n\nexport const EditForm: React.FC<{ detail: Article }> = ({ detail }) => {\n    const [formDetail, setFormDetail] = useState<Article>(detail);\n    const [categoryList, setCategoryList] = useState<ArticleType[]>([]);\n    const history = useHistory();\n    const snackBar = useSnackbar();\n\n    useEffect(() => {\n        ArticleTypeDataService.getList(3).subscribe((resp: ArticleTypeListResponse) => {\n            const categoryList = resp.data.list;\n            setCategoryList(categoryList);\n        });\n    }, []);\n    useEffect(() => setFormDetail(detail), [detail]);\n\n    useEffect(() => {\n        const saveAction = ActionService.handleAction('save')\n            .pipe(\n                switchMap(() => {\n                    return !formDetail.id\n                        ? ArticleDataService.create({\n                            category: 3,\n                            content: formDetail.content,\n                            summary: formDetail.summary,\n                            title: formDetail.title,\n                            type_id: formDetail.type_id,\n                            covers: formDetail.covers.map((x) => x.img),\n                        })\n                        : ArticleDataService.edit({\n                            content: formDetail.content,\n                            id: formDetail.id,\n                            summary: formDetail.summary,\n                            title: formDetail.title,\n                            type_id: formDetail.type_id,\n                            covers: formDetail.covers.map((x) => x.img),\n                        });\n                }),\n            )\n            .subscribe({\n                next: (resp) => {\n                    if (resp.errcode === 0) {\n                        history.push('/admin/news');\n\n                        snackBar.enqueueSnackbar(' 保存新闻成功', {\n                            variant: 'success',\n                        });\n                    } else {\n                        console.error('fail to save news ', resp.errmessage);\n                        snackBar.enqueueSnackbar(' 保存新闻失败', {\n                            variant: 'error',\n                        });\n                    }\n                },\n                error: (err) => {\n                    console.error('fail to save news ', err);\n                    snackBar.enqueueSnackbar(' 保存新闻失败', {\n                        variant: 'error',\n                    });\n                },\n            });\n\n        return () => {\n            saveAction.unsubscribe();\n        };\n    }, [formDetail, snackBar, history]);\n\n    function updateInputValue(key: string): (e: ChangeEvent<HTMLInputElement>) => void {\n        return (e) => {\n            const value = e.target.value;\n            setFormDetail((state) => ({\n                ...state,\n                [key]: value,\n            }));\n        };\n    }\n\n    function handleCategoryChange(e) {\n        const targetCategory = categoryList.find((x) => x.id === e.target.value);\n        setFormDetail((state) => ({\n            ...state,\n            type: targetCategory,\n            type_id: targetCategory.id,\n        }));\n    }\n\n    function handleCoverUpload(e) {\n        const files = e.target.files;\n        if (files && files.length > 0) {\n            const formData = new FormData();\n            formData.append('file', files[0]);\n\n            FileUploadService.postImage(formData).subscribe({\n                next: (resp) => {\n                    if (resp.errcode === 0) {\n\n                        setFormDetail((state) => {\n                            const covers = state.covers ?? [];\n                            covers.push({\n                                id: -Math.ceil(Math.random() * 1000),\n                                article_id: formDetail.id,\n                                img: resp.data.url,\n                            });\n\n                            return {\n                                ...state,\n                                covers,\n                            };\n                        });\n                    } else {\n                        console.error('fail to upload cover', resp.errmessage);\n                        snackBar.enqueueSnackbar(' 上传封面失败', {\n                            variant: 'error',\n                        });\n                    }\n                }, error: err => {\n                    console.error('fail to upload cover', err);\n                    snackBar.enqueueSnackbar(' 上传封面失败', {\n                        variant: 'error',\n                    });\n                },\n            });\n        }\n    }\n\n    function handleContentUpdate(event, editor): void {\n        const rawContent = editor.getData();\n\n        setFormDetail((state) => ({\n            ...state,\n            content: rawContent,\n        }));\n        console.log('editor update >>>', rawContent);\n    }\n\n    function clearSelectedFile(e) {\n        e.target.value = null;\n    }\n\n    return (\n        <Box sx={{ '& .MuiTextField-root': { mt: 1, mb: 1 } }} component='form'>\n            <Grid container>\n                <Grid item xs={12}>\n                    <TextField\n                        select\n                        sx={{ minWidth: '200px' }}\n                        id='news-category'\n                        onChange={handleCategoryChange}\n                        value={formDetail.type_id > 0 ? formDetail.type_id : ''}\n                        label='新闻类型'>\n                        {categoryList.map((x) => {\n                            return (\n                                <MenuItem key={x.id} value={x.id}>\n                                    {x.name}\n                                </MenuItem>\n                            );\n                        })}\n                    </TextField>\n                </Grid>\n                <Grid item xs={12}>\n                    <TextField\n                        fullWidth\n                        label='标题'\n                        value={formDetail.title}\n                        onChange={updateInputValue('title')}\n                    />\n                </Grid>\n                <Grid item xs={12}>\n                    <TextField\n                        fullWidth\n                        label='摘要'\n                        rows='4'\n                        value={formDetail.summary}\n                        onChange={updateInputValue('summary')}\n                    />\n                </Grid>\n                <Grid item xs={12}>\n                    <Paper sx={{ mt: 1, p: 1, width: '100%' }} variant='outlined'>\n                        <Grid container>\n                            <Grid item xs={1}>\n                                <Typography variant='subtitle1'>封面</Typography>\n                            </Grid>\n                            <Grid item container xs justifyContent='flex-end'>\n                                <label htmlFor='upload-cover'>\n                                    <input\n                                        style={{ display: 'none' }}\n                                        accept='image/*'\n                                        id='upload-cover'\n                                        type='file'\n                                        onChange={handleCoverUpload}\n                                        onClick={clearSelectedFile}\n                                    />\n                                    <Button variant='contained' component='span'>\n                                        添加封面\n                                    </Button>\n                                </label>\n                            </Grid>\n                            <Grid item xs={12}>\n                                <ImageList sx={{ minHeight: '160px', width: '100%' }} cols={5} rowHeight={164}>\n                                    {formDetail.covers?.map((item) => (\n                                        <ImageListItem key={item.id}>\n                                            <img src={`${item.img}`} srcSet={`${item.img}`} loading='lazy' alt={''} />\n                                        </ImageListItem>\n                                    )) ?? <div />}\n                                </ImageList>\n                            </Grid>\n                        </Grid>\n                    </Paper>\n                </Grid>\n                <Grid item container xs={12}>\n                    <Paper sx={{ mt: 1, p: 1, width: '100%' }} variant='outlined'>\n                        <Grid container>\n                            <Grid item xs={1}>\n                                <Typography variant='subtitle1'>内容</Typography>\n                            </Grid>\n                            <Grid\n                                item\n                                sx={{\n                                    height: '420px',\n                                    '& .ck-editor__main, & .ck-content': { height: '380px' },\n                                }}\n                                xs={12}>\n                                <CKEditor\n                                    config={{\n                                        extraPlugins: [UploadAdaptorPlugin],\n                                    }}\n                                    editor={ClassicEditor}\n                                    data={formDetail.content}\n                                    onChange={handleContentUpdate}\n                                />\n                            </Grid>\n                        </Grid>\n                    </Paper>\n                </Grid>\n            </Grid>\n        </Box>\n    );\n};\n","import React, { useEffect, useState } from 'react';\nimport { Article } from '../../../models';\nimport { useHistory, useRouteMatch } from 'react-router';\nimport { ActionService, ArticleDataService } from '../../../services';\nimport { Button, Grid } from '@mui/material';\n\nimport { EditForm } from '../components/edit-form';\nimport { ActionMenu } from '../../../components/form/action-menu';\nimport { useSnackbar } from 'notistack';\nimport { switchMap } from 'rxjs';\n\nexport const NewsDetail: React.FC = (props) => {\n    const [detail, setDetail] = useState<Article>(\n        {\n            id: 0,\n            category: 3,\n            content: '',\n            covers: [],\n            read_cnt: 0,\n            status: 0,\n            summary: '',\n            title: '',\n            type_id: -1,\n            created_at: '',\n            updated_at: '',\n        },\n    );\n\n    const snackBar = useSnackbar();\n    const history = useHistory();\n    const { params } = useRouteMatch<{ id: string }>();\n    const { id } = params;\n\n    useEffect(() => {\n        let actionSubscription = id ? [\n            ArticleDataService.getDetail(parseInt(id)).subscribe({\n                next: (resp) => setDetail(resp.data.info), error: (err) => {\n                    console.error('fail to fetch product detail', err);\n                    snackBar.enqueueSnackbar(' 获取新闻详情失败', {\n                        variant: 'error',\n                    });\n                },\n            }),\n            ActionService.handleAction('withdraw').pipe(\n                switchMap(() => ArticleDataService.withdraw(parseInt(id))),\n            ).subscribe({\n                next: () => {\n                    history.push('/admin/news');\n                    snackBar.enqueueSnackbar(' 撤稿成功', {\n                        variant: 'success',\n                    });\n                },\n                error: (err) => {\n                    console.error('fail to publish', err);\n                    snackBar.enqueueSnackbar(' 撤稿失败', {\n                        variant: 'error',\n                    });\n                },\n            }),\n\n            ActionService.handleAction('publish').pipe(\n                switchMap(() => ArticleDataService.publish(parseInt(id))),\n            ).subscribe({\n                next: () => {\n                    history.push('/admin/news');\n                    snackBar.enqueueSnackbar(' 发布成功', {\n                        variant: 'success',\n                    });\n                },\n                error: (err) => {\n                    console.error('fail to publish', err);\n                    snackBar.enqueueSnackbar(' 发布失败', {\n                        variant: 'error',\n                    });\n                },\n            }),\n        ] : [];\n\n        return () => {\n            if (actionSubscription.length > 0) {\n                for (const subscription of actionSubscription) {\n                    subscription.unsubscribe();\n                }\n            }\n        };\n    }, [id, snackBar, history]);\n\n    function goBack() {\n        history.goBack();\n    }\n\n    return <Grid container spacing={2} sx={{ pr: 2, pl: 1 }}>\n        <Grid container item xs={12}>\n            <Grid item xs={1} sx={{ pl: 1 }}>\n                <Button variant='outlined' onClick={goBack}>返回</Button>\n            </Grid>\n            <Grid item container justifyContent='flex-end' xs>\n                <ActionMenu status={detail?.status} isCreate={detail?.id === 0} />\n            </Grid>\n        </Grid>\n        <Grid item xs={12}>\n            <EditForm detail={detail} />\n        </Grid>\n    </Grid>;\n};","import React, { useEffect, useState } from 'react';\nimport { DataGrid, GridColDef, GridRenderCellParams, GridRowModel } from '@mui/x-data-grid';\nimport { useHistory } from 'react-router';\nimport { Link } from 'react-router-dom';\nimport { Box, Fab, IconButton, Typography } from '@mui/material';\n\nimport { ArticleDataService } from '../../services';\nimport { Article, ArticleFilter } from '../../models';\nimport { QuickFilterToolbar } from '../../components/table';\nimport AddIcon from '@mui/icons-material/Add';\nimport { ConfirmDeleteDialog, ConfirmDeleteDialogProps } from '../../components/dialog/confirm-delete-dialog';\nimport { tap } from 'rxjs';\nimport EditIcon from '@mui/icons-material/Edit';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport { CHANNEL_APP_BAR_TITLE, Portal } from '../../components/portal';\nimport { useSnackbar } from 'notistack';\n\nexport const Others = () => {\n    const [filter, setFilter] = useState<ArticleFilter>({ kw: '', limit: 20, offset: 0, category: 0 });\n    const [dataSource, setDataSource] = useState<Article[]>([]);\n    const [totalSize, setTotalSize] = useState<number>(0);\n    const [deleteDialog, setDeleteDialog] = useState<ConfirmDeleteDialogProps>({ open: false });\n    const history = useHistory();\n    const snackBar = useSnackbar();\n\n    useEffect(() => {\n        ArticleDataService.getList(filter).subscribe({\n            next: ({ errcode, data }) => {\n                if (errcode === 0) {\n                    setDataSource(data.list);\n                    setTotalSize(data.total);\n                } else {\n                    console.error('fail to fetch others list', errcode);\n                    snackBar.enqueueSnackbar(' 获取其他列表失败', {\n                        variant: 'error',\n                    });\n                }\n            },\n            error: (err) => {\n                console.error('fail to fetch others list', err);\n                snackBar.enqueueSnackbar(' 获取其他列表失败', {\n                    variant: 'error',\n                });\n            },\n        });\n    }, [filter, snackBar]);\n\n    function confirmDelete(item: GridRowModel) {\n        setDeleteDialog({\n            open: true,\n            message: `确认删除其他信息: \"${item.title}\"?`,\n            onClose(): void {\n                setDeleteDialog({ open: false });\n            },\n            onConfirm(): void {\n                ArticleDataService.delete(item.id)\n                    .pipe(\n                        tap(() => {\n                            setFilter({ ...filter });\n                            setDeleteDialog({ open: false });\n\n                            snackBar.enqueueSnackbar(' 删除其他信息成功', {\n                                variant: 'success',\n                            });\n                        })\n                    )\n                    .subscribe({\n                        error: (err) => {\n                            console.error('fail to fetch others list', err);\n                            snackBar.enqueueSnackbar(' 删除其他信息失败', {\n                                variant: 'error',\n                            });\n                        },\n                    });\n            },\n        });\n    }\n\n    const cols: GridColDef[] = [\n        {\n            field: 'id',\n            headerName: '稿件Id',\n            sortable: false,\n            renderCell: (params: GridRenderCellParams) => {\n                return (\n                    <Link to={`/admin/others/detail/${params.value}`} color='primary'>\n                        {params.value}\n                    </Link>\n                );\n            },\n        },\n        {\n            field: 'title',\n            headerName: '标题',\n            sortable: false,\n        },\n        {\n            field: 'type_id',\n            headerName: '类型',\n            sortable: false,\n            renderCell: (params) => <Typography>{params.row.type?.name ?? ''}</Typography>,\n        },\n        {\n            field: 'status',\n            headerName: '状态',\n            sortable: false,\n            renderCell: (params) => <Typography>{params.value === 0 ? '草稿' : '已发布'}</Typography>,\n        },\n        {\n            field: 'read_cnt',\n            headerName: '阅读次数',\n            sortable: false,\n        },\n        {\n            field: 'created_time',\n            headerName: '创建时间',\n            sortable: false,\n        },\n        {\n            field: 'category',\n            headerName: '操作',\n            sortable: false,\n            renderCell: (params: GridRenderCellParams) => {\n                return (\n                    <>\n                        <IconButton component={Link} to={`/admin/others/detail/${params.row.id}`}>\n                            <EditIcon />\n                        </IconButton>\n                        <IconButton onClick={() => confirmDelete(params.row)}>\n                            <DeleteIcon />\n                        </IconButton>\n                    </>\n                );\n            },\n        },\n    ];\n\n    function pageChange(pageNumber: number): void {\n        setFilter((filter) => ({ ...filter, offset: pageNumber }));\n    }\n\n    function pageSizeChange(pageSize: number): void {\n        setFilter((filter) => ({ ...filter, limit: pageSize, offset: 0 }));\n    }\n\n    function createItem() {\n        history.push('/admin/others/create');\n    }\n\n    return (\n        <Box sx={{ height: '100%', width: '100%', p: 1 }}>\n            <DataGrid\n                autoHeight\n                disableColumnMenu={true}\n                disableColumnFilter={true}\n                pagination\n                pageSize={filter.limit}\n                page={filter.offset}\n                rowCount={totalSize}\n                rowsPerPageOptions={[10, 20, 50, 100]}\n                onPageChange={pageChange}\n                onPageSizeChange={pageSizeChange}\n                components={{ Toolbar: QuickFilterToolbar }}\n                componentsProps={{\n                    toolbar: {\n                        value: filter.kw,\n                        setFilter,\n                    },\n                }}\n                columns={cols}\n                rows={dataSource}\n            />\n            <Fab\n                sx={{\n                    position: 'fixed',\n                    bottom: 16,\n                    right: 48,\n                }}\n                size='medium'\n                color='primary'\n                aria-label='add'\n                onClick={createItem}>\n                <AddIcon />\n            </Fab>\n            <ConfirmDeleteDialog {...deleteDialog} />\n            <Portal channel={CHANNEL_APP_BAR_TITLE}>其他</Portal>\n        </Box>\n    );\n};\n","import React, { ChangeEvent, useEffect, useState } from 'react';\nimport { Box, Button, Grid, ImageList, ImageListItem, MenuItem, Paper, TextField, Typography } from '@mui/material';\nimport { Article } from '../../../models';\nimport { CKEditor } from '@ckeditor/ckeditor5-react';\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\nimport { ActionService, ArticleDataService, FileUploadService } from '../../../services';\nimport { UploadAdaptorPlugin } from '../../../components/form/upload-adaptor-plugin';\nimport { switchMap } from 'rxjs';\nimport { useHistory } from 'react-router';\nimport { useSnackbar } from 'notistack';\n\nexport const EditForm: React.FC<{ detail: Article }> = ({ detail }) => {\n    const [formDetail, setFormDetail] = useState<Article>(detail);\n    const history = useHistory();\n    const snackBar = useSnackbar();\n\n    useEffect(() => setFormDetail(detail), [detail]);\n\n    useEffect(() => {\n        const saveAction = ActionService.handleAction('save')\n            .pipe(\n                switchMap(() => {\n                    return !formDetail.id\n                        ? ArticleDataService.create({\n                              category: 0,\n                              content: formDetail.content,\n                              summary: formDetail.summary,\n                              title: formDetail.title,\n                              type_id: formDetail.type_id,\n                              covers: formDetail.covers.map((x) => x.img),\n                          })\n                        : ArticleDataService.edit({\n                              content: formDetail.content,\n                              id: formDetail.id,\n                              summary: formDetail.summary,\n                              title: formDetail.title,\n                              type_id: formDetail.type_id,\n                              covers: formDetail.covers.map((x) => x.img),\n                          });\n                })\n            )\n            .subscribe({\n                next: (resp) => {\n                    if (resp.errcode === 0) {\n                        history.push('/admin/others');\n                        snackBar.enqueueSnackbar('保存其他信息成功', {\n                            variant: 'success',\n                        });\n                    } else {\n                        console.error('fail to save others', resp.errmessage);\n                        snackBar.enqueueSnackbar(' 保存其他信息失败', {\n                            variant: 'error',\n                        });\n                    }\n                },\n                error: (err) => {\n                    console.error('fail to save others', err);\n                    snackBar.enqueueSnackbar(' 保存其他信息失败', {\n                        variant: 'error',\n                    });\n                },\n            });\n\n        return () => {\n            saveAction.unsubscribe();\n        };\n    }, [formDetail, snackBar, history]);\n\n    function updateInputValue(key: string): (e: ChangeEvent<HTMLInputElement>) => void {\n        return (e) => {\n            const value = e.target.value;\n            setFormDetail((state) => ({\n                ...state,\n                [key]: value,\n            }));\n        };\n    }\n\n    function handleCoverUpload(e) {\n        const files = e.target.files;\n        if (files && files.length > 0) {\n            const formData = new FormData();\n            formData.append('file', files[0]);\n\n            FileUploadService.postImage(formData).subscribe({\n                next: (resp) => {\n                    if (resp.errcode === 0) {\n                        setFormDetail((state) => {\n                            const covers = state.covers ?? [];\n                            covers.push({\n                                id: -Math.ceil(Math.random() * 1000),\n                                article_id: formDetail.id,\n                                img: resp.data.url,\n                            });\n\n                            return {\n                                ...state,\n                                covers,\n                            };\n                        });\n                    } else {\n                        console.error('fail to upload cover', resp.errmessage);\n                        snackBar.enqueueSnackbar(' 上传封面失败', {\n                            variant: 'error',\n                        });\n                    }\n                },\n                error: (err) => {\n                    console.error('fail to upload cover', err);\n                    snackBar.enqueueSnackbar(' 上传封面失败', {\n                        variant: 'error',\n                    });\n                },\n            });\n        }\n    }\n\n    function handleContentUpdate(event, editor): void {\n        const rawContent = editor.getData();\n\n        setFormDetail((state) => ({\n            ...state,\n            content: rawContent,\n        }));\n        console.log('editor update >>>', rawContent);\n    }\n\n    function clearSelectedFile(e) {\n        e.target.value = null;\n    }\n\n    return (\n        <Box sx={{ '& .MuiTextField-root': { mt: 1, mb: 1 } }} component='form'>\n            <Grid container>\n                <Grid item xs={12}>\n                    <TextField\n                        select\n                        sx={{ minWidth: '200px', mr: 1 }}\n                        id='other-category-root'\n                        label='类型'\n                        value={'0'}\n                        SelectProps={{\n                            readOnly: true,\n                        }}>\n                        <MenuItem key='0' value='0'>\n                            其他\n                        </MenuItem>\n                    </TextField>\n                </Grid>\n                <Grid item xs={12}>\n                    <TextField fullWidth label='标题' value={formDetail.title} onChange={updateInputValue('title')} />\n                </Grid>\n                <Grid item xs={12}>\n                    <TextField\n                        fullWidth\n                        label='摘要'\n                        rows='4'\n                        value={formDetail.summary}\n                        onChange={updateInputValue('summary')}\n                    />\n                </Grid>\n                <Grid item xs={12}>\n                    <Paper sx={{ mt: 1, p: 1, width: '100%' }} variant='outlined'>\n                        <Grid container>\n                            <Grid item xs={1}>\n                                <Typography variant='subtitle1'>封面</Typography>\n                            </Grid>\n                            <Grid item container xs justifyContent='flex-end'>\n                                <label htmlFor='upload-cover'>\n                                    <input\n                                        style={{ display: 'none' }}\n                                        accept='image/*'\n                                        id='upload-cover'\n                                        type='file'\n                                        onChange={handleCoverUpload}\n                                        onClick={clearSelectedFile}\n                                    />\n                                    <Button variant='contained' component='span'>\n                                        添加封面\n                                    </Button>\n                                </label>\n                            </Grid>\n                            <Grid item xs={12}>\n                                <ImageList sx={{ minHeight: '160px', width: '100%' }} cols={5} rowHeight={164}>\n                                    {formDetail.covers?.map((item) => (\n                                        <ImageListItem key={item.id}>\n                                            <img src={`${item.img}`} alt={''} />\n                                        </ImageListItem>\n                                    )) ?? <div />}\n                                </ImageList>\n                            </Grid>\n                        </Grid>\n                    </Paper>\n                </Grid>\n                <Grid item container xs={12}>\n                    <Paper sx={{ mt: 1, p: 1, width: '100%' }} variant='outlined'>\n                        <Grid container>\n                            <Grid item xs={1}>\n                                <Typography variant='subtitle1'>内容</Typography>\n                            </Grid>\n                            <Grid\n                                item\n                                sx={{\n                                    height: '420px',\n                                    '& .ck-editor__main, & .ck-content': { height: '380px' },\n                                }}\n                                xs={12}>\n                                <CKEditor\n                                    config={{\n                                        extraPlugins: [UploadAdaptorPlugin],\n                                    }}\n                                    editor={ClassicEditor}\n                                    data={formDetail.content}\n                                    onChange={handleContentUpdate}\n                                />\n                            </Grid>\n                        </Grid>\n                    </Paper>\n                </Grid>\n            </Grid>\n        </Box>\n    );\n};\n","import React, { useEffect, useState } from 'react';\nimport { Article } from '../../../models';\nimport { useHistory, useRouteMatch } from 'react-router';\nimport { ActionService, ArticleDataService } from '../../../services';\nimport { Button, Grid } from '@mui/material';\n\nimport { EditForm } from '../components/edit-form';\nimport { ActionMenu } from '../../../components/form/action-menu';\nimport { useSnackbar } from 'notistack';\nimport { switchMap } from 'rxjs';\n\nexport const OtherDetail: React.FC = (props) => {\n    const [detail, setDetail] = useState<Article>({\n        id: 0,\n        category: 0,\n        content: '',\n        covers: [],\n        read_cnt: 0,\n        status: 0,\n        summary: '',\n        title: '',\n        type_id: 0,\n        created_at: '',\n        updated_at: '',\n    });\n\n    const snackBar = useSnackbar();\n    const history = useHistory();\n    const { params } = useRouteMatch<{ id: string }>();\n    const { id } = params;\n\n    useEffect(() => {\n        let actionSubscription = id\n            ? [\n                  ArticleDataService.getDetail(parseInt(id)).subscribe({\n                      next: (resp) => setDetail(resp.data.info),\n                      error: (err) => {\n                          console.error('fail to fetch others detail', err);\n                          snackBar.enqueueSnackbar(' 获取其他详细信息失败', {\n                              variant: 'error',\n                          });\n                      },\n                  }),\n                  ActionService.handleAction('withdraw')\n                      .pipe(switchMap(() => ArticleDataService.withdraw(parseInt(id))))\n                      .subscribe({\n                          next: () => {\n                              history.push('/admin/others');\n                              snackBar.enqueueSnackbar(' 撤稿成功', {\n                                  variant: 'success',\n                              });\n                          },\n                          error: (err) => {\n                              console.error('fail to publish', err);\n                              snackBar.enqueueSnackbar(' 撤稿失败', {\n                                  variant: 'error',\n                              });\n                          },\n                      }),\n\n                  ActionService.handleAction('publish')\n                      .pipe(switchMap(() => ArticleDataService.publish(parseInt(id))))\n                      .subscribe({\n                          next: () => {\n                              history.push('/admin/others');\n                              snackBar.enqueueSnackbar(' 发布成功', {\n                                  variant: 'success',\n                              });\n                          },\n                          error: (err) => {\n                              console.error('fail to publish', err);\n                              snackBar.enqueueSnackbar(' 发布失败', {\n                                  variant: 'error',\n                              });\n                          },\n                      }),\n              ]\n            : [];\n\n        return () => {\n            if (actionSubscription.length > 0) {\n                for (const subscription of actionSubscription) {\n                    subscription.unsubscribe();\n                }\n            }\n        };\n    }, [id, snackBar, history]);\n\n    function goBack() {\n        history.goBack();\n    }\n\n    return (\n        <Grid container spacing={2} sx={{ pr: 2, pl: 1 }}>\n            <Grid container item xs={12}>\n                <Grid item xs={1} sx={{ pl: 1 }}>\n                    <Button variant='outlined' onClick={goBack}>\n                        返回\n                    </Button>\n                </Grid>\n                <Grid item container justifyContent='flex-end' xs>\n                    <ActionMenu status={detail?.status} isCreate={detail?.id === 0} />\n                </Grid>\n            </Grid>\n            <Grid item xs={12}>\n                <EditForm detail={detail} />\n            </Grid>\n        </Grid>\n    );\n};\n","import { Grid, IconButton, MenuItem, TextField } from '@mui/material';\nimport SearchIcon from '@mui/icons-material/Search';\nimport ClearIcon from '@mui/icons-material/Clear';\nimport React from 'react';\n\nexport const categoryList = {\n    1: '产品类型',\n    2: '应用类型',\n    3: '新闻类型',\n};\n\nexport const FilterToolbar: React.FC<{ filter, setFilter }> = ({ filter, setFilter }) => {\n    function handleFilterTypeChange(e) {\n        setFilter({\n            limit: filter.limit,\n            offset: 0,\n            category: e.target.value,\n            kw: '',\n        });\n    }\n\n    function handleKWChange(e) {\n        setFilter((state) => ({\n            ...state,\n            offset: 0,\n            kw: e.target?.value ?? '',\n        }));\n    }\n\n    return <Grid container spacing={1} sx={{ m: 1 }}>\n        <Grid item xs={2}>\n            <TextField\n                select\n                fullWidth\n                id='category-filter'\n                label='类型'\n                value={filter.category}\n                onChange={handleFilterTypeChange}\n            >\n                {\n                    Object.entries(categoryList).map(([key, value]) => {\n                        return <MenuItem key={`category-${key}`} value={parseInt(key)}>\n                            {value}\n                        </MenuItem>;\n                    })\n                }\n            </TextField>\n        </Grid>\n        <Grid item xs={3} sx={{ display: 'flex', alignItems: 'center' }}>\n            <TextField\n                variant='standard'\n                value={filter.kw}\n                onChange={handleKWChange}\n                placeholder='关键字查找'\n                InputProps={{\n                    startAdornment: <SearchIcon fontSize='small' />,\n                    endAdornment: (\n                        <IconButton\n                            title='Clear'\n                            aria-label='Clear'\n                            size='small'\n                            style={{ visibility: filter.kw ? 'visible' : 'hidden' }}\n                            onClick={handleKWChange}\n                        >\n                            <ClearIcon fontSize='small' />\n                        </IconButton>\n                    ),\n                }}\n            />\n        </Grid>\n    </Grid>;\n};\n","import React, { useEffect, useState } from \"react\";\nimport { ArticleType } from \"../../../models\";\nimport { Button, Dialog, DialogActions, DialogContent, DialogTitle, MenuItem, TextField } from \"@mui/material\";\n\nexport interface CategoryDetailDialogProps {\n    category: number;\n    title: string;\n    typeList: ArticleType[];\n    open: boolean;\n    typeDetail?: ArticleType;\n    onSave?: (form: ArticleType) => void;\n    onClose?: () => void;\n}\n\nexport const CategoryDetailDialog: React.FC<CategoryDetailDialogProps> = ({\n                                                                              category,\n                                                                              title,\n                                                                              open,\n                                                                              typeList,\n                                                                              onSave,\n                                                                              onClose,\n                                                                              typeDetail\n                                                                          }) => {\n    const [formDetail, setFormDetail] = useState<ArticleType>(typeDetail);\n    useEffect(() => {\n        setFormDetail(typeDetail);\n    }, [typeDetail]);\n\n    function handleClose() {\n        onClose && onClose();\n    }\n\n    function handleSubmit() {\n        onSave && onSave(formDetail);\n    }\n\n    function handleNameChange(e) {\n        setFormDetail((state) => ({\n            ...state,\n            name: e.target.value\n        }));\n    }\n\n    function handleParentIdChange(e) {\n        setFormDetail((state) => ({\n            ...state,\n            parent_id: e.target.value\n        }));\n    }\n\n    return (\n      <Dialog open={open}>\n          <DialogTitle>{title}</DialogTitle>\n          {open &&\n          <DialogContent>\n            <TextField\n              autoFocus\n              required\n              margin=\"dense\"\n              id=\"name\"\n              label=\"名称\"\n              type=\"text\"\n              value={formDetail?.name ?? \"\"}\n              fullWidth\n              onChange={handleNameChange}\n            />\n              {category === 1 && (\n                <TextField\n                  select\n                  autoFocus\n                  margin=\"dense\"\n                  id=\"parent_id\"\n                  label=\"父级类型\"\n                  type=\"text\"\n                  value={formDetail?.parent_id ?? \"\"}\n                  fullWidth\n                  onChange={handleParentIdChange}\n                  SelectProps={{\n                      readOnly: formDetail?.id >= 0\n                  }}>\n                    <MenuItem key=\"empty\" value={\"\"}>\n                        无\n                    </MenuItem>\n                    {typeList.map((x) => {\n                        return (\n                          <MenuItem key={x.id} value={x.id}>\n                              {x.name}\n                          </MenuItem>\n                        );\n                    })}\n                </TextField>\n              )}\n          </DialogContent>\n          }\n          <DialogActions>\n              <Button onClick={handleClose}>取消</Button>\n              <Button variant=\"contained\" onClick={handleSubmit}>\n                  保存\n              </Button>\n          </DialogActions>\n      </Dialog>\n    );\n};\n","import React, { useEffect, useState } from \"react\";\nimport { DataGrid, GridColDef, GridRenderEditCellParams } from \"@mui/x-data-grid\";\n\nimport { ArticleTypeDataService } from \"../../services\";\nimport { ArticleFilter, ArticleType } from \"../../models\";\nimport { Box, Fab, IconButton } from \"@mui/material\";\nimport AddIcon from \"@mui/icons-material/Add\";\nimport EditIcon from \"@mui/icons-material/Edit\";\nimport DeleteIcon from \"@mui/icons-material/Delete\";\nimport { categoryList, FilterToolbar } from \"./components/filter-toolbar\";\nimport { CategoryDetailDialog, CategoryDetailDialogProps } from \"./components/category-detail-dialog\";\nimport { ConfirmDeleteDialog, ConfirmDeleteDialogProps } from \"../../components/dialog/confirm-delete-dialog\";\nimport { tap } from \"rxjs\";\nimport { CHANNEL_APP_BAR_TITLE, Portal } from \"../../components/portal\";\nimport { useSnackbar } from \"notistack\";\n\nexport const Settings = () => {\n    const [filter, setFilter] = useState<ArticleFilter>({ kw: \"\", limit: 20, offset: 0, category: 1 });\n    const [dataSource, setDataSource] = useState<ArticleType[]>([]);\n    const [detailDialog, setDetailDialog] = useState<CategoryDetailDialogProps>({\n        open: false,\n        category: -1,\n        typeList: [],\n        title: \"\"\n    });\n    const [deleteDialog, setDeleteDialog] = useState<ConfirmDeleteDialogProps>({\n        open: false\n    });\n    const [fetchFlag, setFetchFlag] = useState(new Date().valueOf());\n    const snackBar = useSnackbar();\n\n    useEffect(() => {\n        const typeListSubscription = ArticleTypeDataService.getList(filter.category).subscribe(({ errcode, data }) => {\n            if (errcode === 0) {\n                setDataSource(data.list);\n            } else {\n                snackBar.enqueueSnackbar(\"获取类型列表失败\", {\n                    variant: \"error\"\n                });\n            }\n        });\n\n        return () => {\n            typeListSubscription.unsubscribe();\n        };\n    }, [filter.category, snackBar, fetchFlag]);\n\n    function deleteItem(item: ArticleType) {\n        setDeleteDialog({\n            open: true,\n            message: `确认删除\"${item.name}\"?`,\n            onClose(): void {\n                setDeleteDialog({ open: false });\n            },\n            onConfirm(): void {\n                ArticleTypeDataService.delete(item.id)\n                  .pipe(\n                    tap(() => {\n                        setDeleteDialog({ open: false });\n                        setFetchFlag(new Date().valueOf());\n                    })\n                  )\n                  .subscribe();\n            }\n        });\n    }\n\n    const cols: GridColDef[] = [\n        {\n            field: \"id\",\n            headerName: \"类型Id\",\n            sortable: false\n        },\n        {\n            field: \"name\",\n            headerName: \"名称\",\n            sortable: false\n        },\n        {\n            field: \"parent_id\",\n            headerName: \"父类型id\",\n            sortable: false\n        },\n        {\n            field: \"category\",\n            headerName: \"操作\",\n            sortable: false,\n            renderCell: (params: GridRenderEditCellParams) => {\n                return (\n                  <>\n                      <IconButton onClick={() => editItemDialog(params.row)}>\n                          <EditIcon />\n                      </IconButton>\n                      <IconButton onClick={() => deleteItem(params.row)}>\n                          <DeleteIcon />\n                      </IconButton>\n                  </>\n                );\n            }\n        }\n    ];\n\n    function pageChange(pageNumber: number): void {\n        setFilter((filter) => ({ ...filter, offset: pageNumber }));\n    }\n\n    function pageSizeChange(pageSize: number): void {\n        setFilter((filter) => ({ ...filter, limit: pageSize, offset: 0 }));\n    }\n\n    const filterData = () => {\n        let result = dataSource;\n        if (filter.kw) {\n            result = dataSource.filter((x) => x.name.includes(filter.kw));\n        }\n\n        const step = filter.offset * filter.limit;\n        return result.filter((x, i) => i >= step && i < step + filter.limit);\n    };\n\n    function closeDetailDialog() {\n        setDetailDialog((state) => ({\n            ...state,\n            onSave: null,\n            onClose: null,\n            open: false\n        }));\n    }\n\n    const saveObserver = {\n        next: (resp) => {\n            if (resp.errcode === 0) {\n                setDetailDialog(null);\n                setFetchFlag(new Date().valueOf());\n            } else {\n                console.error(\"保存类型失败\", resp.errmessage);\n                snackBar.enqueueSnackbar(\"保存失败\", {\n                    variant: \"error\"\n                });\n            }\n        },\n        error: (error) => {\n            console.error(\"保存类型失败\", error);\n            snackBar.enqueueSnackbar(\"保存失败\", {\n                variant: \"error\"\n            });\n        }\n    };\n\n    function createItem(newForm: ArticleType) {\n        ArticleTypeDataService.creat({\n            category: newForm.category,\n            name: newForm.name,\n            parent_id: newForm.parent_id\n        }).subscribe(saveObserver);\n    }\n\n    function saveItem(newForm: ArticleType) {\n        ArticleTypeDataService.edit({\n            id: newForm.id,\n            name: newForm.name\n        }).subscribe(saveObserver);\n    }\n\n    function editItemDialog(item: ArticleType) {\n        setDetailDialog({\n            open: true,\n            title: `编辑${categoryList[filter.category]}`,\n            category: filter.category,\n            typeList: dataSource,\n            onClose: closeDetailDialog,\n            onSave: saveItem,\n            typeDetail: item\n        });\n    }\n\n    function newItemDialog() {\n        setDetailDialog({\n            open: true,\n            title: `新增${categoryList[filter.category]}`,\n            category: filter.category,\n            typeList: dataSource,\n            onClose: closeDetailDialog,\n            onSave: createItem,\n            typeDetail: {\n                id: -1,\n                name: \"\",\n                parent_id: null,\n                category: filter.category\n            }\n        });\n    }\n\n    return (\n      <Box sx={{ height: \"100%\", width: \"100%\", p: 1 }}>\n          <DataGrid\n            autoHeight\n            disableColumnMenu={true}\n            disableColumnFilter={true}\n            pagination\n            pageSize={filter.limit}\n            page={filter.offset}\n            rowCount={dataSource.length}\n            rowsPerPageOptions={[10, 20, 50, 100]}\n            onPageChange={pageChange}\n            onPageSizeChange={pageSizeChange}\n            components={{ Toolbar: FilterToolbar }}\n            componentsProps={{\n                toolbar: {\n                    filter,\n                    setFilter\n                }\n            }}\n            columns={cols}\n            rows={filterData()}\n          />\n          <Fab\n            sx={{\n                position: \"fixed\",\n                bottom: 16,\n                right: 48\n            }}\n            size=\"medium\"\n            color=\"primary\"\n            aria-label=\"add\"\n            onClick={newItemDialog}>\n              <AddIcon />\n          </Fab>\n          <CategoryDetailDialog {...detailDialog} />\n          <ConfirmDeleteDialog {...deleteDialog} />\n\n          <Portal channel={CHANNEL_APP_BAR_TITLE}>类型设置</Portal>\n      </Box>\n    );\n};\n","import React, { useMemo, useState } from 'react';\nimport { Avatar, Box, Button, Container, TextField, Typography } from '@mui/material';\n\nimport LockOutlinedIcon from '@mui/icons-material/LockOutlined';\nimport { LoginService } from '../../services';\nimport { useHistory } from 'react-router';\nimport { useSnackbar } from 'notistack';\n\nexport const Login = () => {\n    const [codeState, setCodeState] = useState(new Date().valueOf());\n    const [loginForm, setLoginForm] = useState({\n        email: '',\n        password: '',\n        code: '',\n    });\n    const [errorForm, setErrorForm] = useState({\n        email: false,\n        password: false,\n        code: false,\n        summary: '',\n    });\n    const history = useHistory();\n    const snakeBar = useSnackbar();\n\n    function handleSubmit(e) {\n        e.preventDefault();\n\n        if (loginForm.email && loginForm.password && loginForm.code) {\n            setErrorForm({\n                email: false,\n                code: false,\n                password: false,\n                summary: '',\n            });\n            LoginService.signIn(loginForm).subscribe({\n                next: (resp) => {\n                    if (resp.errcode === 0) {\n                        history.push('/');\n                        window.location.reload();\n                    } else {\n                        setErrorForm({\n                            ...errorForm,\n                            summary: resp.errmessage,\n                        });\n                        setCodeState(new Date().valueOf())\n                    }\n                },\n                error: (err) => {\n                    snakeBar.enqueueSnackbar('登录失败', {\n                        variant: 'error',\n                    });\n                    setCodeState(new Date().valueOf())\n                },\n            });\n        } else {\n            const newState = {\n                email: !loginForm.email,\n                password: !loginForm.password,\n                code: !loginForm.code,\n            };\n            setErrorForm({ ...errorForm, ...newState });\n        }\n    }\n\n    function updatedFormValue(key) {\n        return (e) => {\n            setErrorForm({\n                ...errorForm,\n                [key]: !e.target?.value,\n            });\n\n            setLoginForm((state) => ({\n                ...state,\n                [key]: e.target.value,\n            }));\n        };\n    }\n\n    function refreshCode(): void {\n        setCodeState(new Date().valueOf());\n    }\n\n    const codeUrl = useMemo(() => {\n        return `/verify/code?state=${codeState}`;\n    }, [codeState]);\n\n    return (\n        <Container maxWidth='xs'>\n            <Box\n                sx={{\n                    marginTop: 8,\n                    display: 'flex',\n                    flexDirection: 'column',\n                    alignItems: 'center',\n                }}>\n                <Avatar sx={{ m: 1, bgcolor: 'secondary.main' }}>\n                    <LockOutlinedIcon />\n                </Avatar>\n                <Typography component='h1' variant='h5'>\n                    登录\n                </Typography>\n                <Box component='form' onSubmit={handleSubmit} noValidate sx={{ mt: 1 }}>\n                    <TextField\n                        margin='normal'\n                        required\n                        fullWidth\n                        id='email'\n                        label='电子邮箱'\n                        name='email'\n                        autoComplete='email'\n                        autoFocus\n                        value={loginForm.email}\n                        onChange={updatedFormValue('email')}\n                        error={errorForm.email}\n                        helperText={errorForm.email && '请输入电子邮箱'}\n                    />\n                    <TextField\n                        margin='normal'\n                        required\n                        fullWidth\n                        name='password'\n                        label='密码'\n                        type='password'\n                        id='password'\n                        autoComplete='current-password'\n                        value={loginForm.password}\n                        onChange={updatedFormValue('password')}\n                        error={errorForm.password}\n                        helperText={errorForm.password && '请输入密码'}\n                    />\n                    <TextField\n                        margin='normal'\n                        required\n                        fullWidth\n                        name='code'\n                        label='验证码'\n                        id='code'\n                        value={loginForm.code}\n                        onChange={updatedFormValue('code')}\n                        InputProps={{\n                            endAdornment: <img src={codeUrl} onClick={refreshCode} alt='验证码' />,\n                        }}\n                        error={errorForm.code}\n                        helperText={errorForm.code && '请输入验证码'}\n                    />\n                    {errorForm.summary && (\n                        <Typography variant='overline' color={'red'}>\n                            {errorForm.summary}\n                        </Typography>\n                    )}\n                    <Button type='submit' fullWidth variant='contained' sx={{ mt: 3, mb: 2 }}>\n                        登录\n                    </Button>\n                </Box>\n            </Box>\n        </Container>\n    );\n};\n","import React, { useEffect, useState } from \"react\";\nimport { Box } from \"@mui/material\";\nimport { Redirect, Route, Switch } from \"react-router-dom\";\nimport { AuthLayout, PublicLayout } from \"../layout\";\nimport { Products } from \"../pages/products\";\nimport { ProductDetail } from \"../pages/products/detail\";\nimport { Applications } from \"../pages/applications\";\nimport { ApplicationDetail } from \"../pages/applications/detail\";\nimport { News } from \"../pages/news\";\nimport { NewsDetail } from \"../pages/news/detail\";\nimport { Others } from \"../pages/others\";\nimport { OtherDetail } from \"../pages/others/detail\";\nimport { Settings } from \"../pages/settings\";\nimport { Login } from \"../pages/login\";\nimport { useHistory } from \"react-router\";\nimport { UserService } from \"../services\";\n\nexport const RouterConfig = () => {\n    const history = useHistory();\n    const [auth, setAuth] = useState(null);\n\n    useEffect(() => {\n        const useInfoSubscription = UserService.getUserInfo().subscribe({\n            next: (resp) => {\n                if (resp.errcode === 401) {\n                    history.push(\"/admin/login\");\n                    setAuth(false);\n                } else {\n                    setAuth(true);\n                }\n            },\n            error: (error) => {\n                console.error(\"fail to get user info\", error);\n                history.push(\"/admin/login\");\n                setAuth(false);\n            }\n        });\n\n        return () => {\n            useInfoSubscription.unsubscribe();\n        };\n    }, [history, auth]);\n\n    return (\n      <Box sx={{\n          height: '100vh',\n          overflowY: 'auto',\n      }}>\n          <Switch>\n              <Route path={\"/admin/login\"} exact={true}>\n                  <PublicLayout>\n                      <Login />\n                  </PublicLayout>\n              </Route>\n          </Switch>\n          {\n              auth &&\n              <AuthLayout>\n                <Switch>\n                  <Route path={\"/\"} exact={true}>\n                    <Redirect to={\"/admin/products\"} />\n                  </Route>\n                  <Route path={\"/admin/settings\"} exact={true}>\n                    <Settings />\n                  </Route>\n                  <Route path={\"/admin/products\"} exact={true}>\n                    <Products />\n                  </Route>\n                  <Route path={\"/admin/products/create\"} exact={true}>\n                    <ProductDetail />\n                  </Route>\n                  <Route path={\"/admin/products/detail/:id\"} exact={true}>\n                    <ProductDetail />\n                  </Route>\n                  <Route path={\"/admin/applications\"} exact={true}>\n                    <Applications />\n                  </Route>\n                  <Route path={\"/admin/applications/create\"} exact={true}>\n                    <ApplicationDetail />\n                  </Route>\n                  <Route path={\"/admin/applications/detail/:id\"} exact={true}>\n                    <ApplicationDetail />\n                  </Route>\n                  <Route path={\"/admin/news\"} exact={true}>\n                    <News />\n                  </Route>\n                  <Route path={\"/admin/news/create\"} exact={true}>\n                    <NewsDetail />\n                  </Route>\n                  <Route path={\"/admin/news/detail/:id\"} exact={true}>\n                    <NewsDetail />\n                  </Route>\n                  <Route path={\"/admin/others\"} exact={true}>\n                    <Others />\n                  </Route>\n                  <Route path={\"/admin/others/create\"} exact={true}>\n                    <OtherDetail />\n                  </Route>\n                  <Route path={\"/admin/others/detail/:id\"} exact={true}>\n                    <OtherDetail />\n                  </Route>\n                </Switch>\n              </AuthLayout>\n          }\n      </Box>\n    );\n};\n","import React from 'react';\nimport { CssBaseline, ThemeProvider } from '@mui/material';\nimport theme from './theme';\nimport { RouterConfig } from './route';\nimport { SnackbarProvider } from 'notistack';\n\nexport const App = (props) => {\n    return (\n        <ThemeProvider theme={theme}>\n            <CssBaseline />\n            <SnackbarProvider\n                maxSnack={3}\n                anchorOrigin={{\n                    vertical: 'top',\n                    horizontal: 'right',\n                }}>\n                <RouterConfig />\n            </SnackbarProvider>\n        </ThemeProvider>\n    );\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { HashRouter } from \"react-router-dom\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { App } from \"./App\";\nimport { loadCSRFToken } from \"./utils\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <HashRouter>\n      <App />\n    </HashRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\nif (process.env.NODE_ENV !== \"production\") {\n  // const worker = require('./mocks').default\n  // worker.start()\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n  reportWebVitals();\n}\n\n/**\n * Next we will register the CSRF Token as a common header with Axios so that\n * all outgoing HTTP requests automatically have it attached. This is just\n * a simple convenience so we don't have to attach every token manually.\n */\nlet token: HTMLInputElement = document.body.querySelector(\"input[name=\\\"_token\\\"]\");\n\nif (token) {\n  loadCSRFToken(token.value);\n} else {\n  console.error(\"CSRF token not found: https://laravel.com/docs/csrf#csrf-x-csrf-token\");\n}\n"],"sourceRoot":""}